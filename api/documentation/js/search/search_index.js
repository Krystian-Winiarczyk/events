var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.554,1,2.674]],["body/controllers/AppController.html",[0,2.627,1,4.52,2,2.268,3,0.236,4,0.209,5,0.157,6,4.547,7,0.377,8,1.907,9,6.205,10,2.058,11,0.017,12,0.569,13,5.27,14,1.567,15,1.01,16,0.611,17,1.204,18,4.189,19,4.547,20,0.291,21,0.128,22,2.515,23,5.27,24,2.058,25,5.27,26,0.014,27,0.014]],["title/modules/AppModule.html",[28,1.718,29,2.674]],["body/modules/AppModule.html",[1,4.264,2,2.302,3,0.178,4,0.157,5,0.118,11,0.017,16,0.716,17,0.908,18,4.216,19,3.428,20,0.219,21,0.097,26,0.012,27,0.012,28,2.738,29,5.364,30,2.122,31,2.255,32,2.586,33,2.586,34,2.255,35,3.666,36,2.586,37,3.428,38,3.428,39,3.428,40,4.529,41,4.529,42,4.529,43,4.216,44,3.483,45,2.586,46,2.586,47,3.974,48,3.242,49,3.974,50,2.801,51,2.003,52,3.974,53,3.974,54,3.974,55,3.428,56,3.069,57,3.069,58,3.974,59,3.974,60,3.974,61,3.428,62,3.428,63,2.801,64,3.428,65,3.974,66,3.974,67,3.974,68,3.428,69,3.428,70,3.974,71,3.974,72,3.974,73,1.551,74,3.974]],["title/injectables/AppService.html",[18,2.299,75,0.867]],["body/injectables/AppService.html",[3,0.245,4,0.217,5,0.163,7,0.392,8,1.951,9,6.284,11,0.017,12,0.59,14,1.627,15,1.033,16,0.521,17,1.25,18,3.976,20,0.302,21,0.133,24,2.137,26,0.014,27,0.014,75,1.498,76,2.242,77,4.721,78,5.473,79,5.473,80,5.473]],["title/controllers/AuthController.html",[0,1.554,81,2.674]],["body/controllers/AuthController.html",[0,0.86,2,0.903,3,0.094,4,0.083,5,0.062,7,0.15,8,0.993,10,1.853,11,0.017,12,0.685,14,1.887,15,0.946,16,0.617,17,0.763,20,0.116,21,0.051,22,1.001,26,0.007,27,0.007,81,2.354,82,1.81,83,1.366,84,2.098,85,0.91,86,3.306,87,2.456,88,4.162,89,2.882,90,2.882,91,3.591,92,2.024,93,2.024,94,2.693,95,2.024,96,2.024,97,2.024,98,2.024,99,2.098,100,3.58,101,4.031,102,3.969,103,4.162,104,3.089,105,2.098,106,2.098,107,2.062,108,1.155,109,0.637,110,1.21,111,3.682,112,2.098,113,2.098,114,2.098,115,2.098,116,2.098,117,2.098,118,2.098,119,4.162,120,3.089,121,3.341,122,2.098,123,1.272,124,3.846,125,3.132,126,3.344,127,2.946,128,1.366,129,2.042,130,2.946,131,1.272,132,2.024,133,1.272,134,1.896,135,1.366,136,1.272,137,1.272,138,1.366,139,1.058,140,1.272,141,1.475,142,1.896,143,1.366,144,1.191,145,1.594,146,0.95,147,1.058,148,1.272,149,1.512,150,1.366,151,1.272,152,1.272,153,1.366,154,1.272,155,1.479,156,1.479,157,1.81,158,1.479,159,2.098,160,1.621,161,3.214,162,1.366,163,1.621,164,2.933,165,2.362,166,1.621,167,1.272,168,3.341,169,2.024,170,1.058,171,1.479,172,2.174,173,1.444,174,1.191,175,1.81,176,2.098,177,1.12,178,1.621,179,2.098,180,2.098,181,3.089,182,4.094,183,4.094,184,4.094,185,4.094,186,3.665,187,4.094,188,5.184,189,4.094,190,4.094,191,1.944,192,2.098,193,3.089,194,2.098,195,3.089,196,3.089,197,2.098,198,2.098,199,1.48,200,2.098,201,2.098,202,2.098,203,2.098,204,2.098,205,2.882,206,1.81,207,1.479,208,2.098,209,2.098,210,2.098]],["title/modules/AuthModule.html",[28,1.718,40,2.47]],["body/modules/AuthModule.html",[2,2.361,3,0.184,4,0.164,5,0.123,11,0.017,16,0.716,17,0.943,20,0.227,21,0.101,26,0.012,27,0.012,28,2.791,30,2.203,31,2.342,32,2.686,33,2.686,34,2.342,35,3.736,36,4.013,40,5.001,43,4.263,44,3.572,45,2.686,46,2.686,48,3.326,81,4.345,165,4.295,166,3.187,211,3.56,212,3.56,213,3.56,214,4.127,215,4.578,216,4.578,217,4.578,218,4.127,219,4.127,220,4.127,221,5.488,222,2.203,223,4.127,224,3.187,225,2.501,226,4.127,227,4.127,228,4.127,229,4.127,230,4.127,231,3.187,232,4.127,233,4.127]],["title/injectables/AuthService.html",[75,0.867,165,2.154]],["body/injectables/AuthService.html",[3,0.094,4,0.083,5,0.062,7,0.15,8,0.993,11,0.017,12,0.648,14,1.721,15,1.02,16,0.637,17,0.479,20,0.116,21,0.051,24,2.155,26,0.007,27,0.007,56,1.621,73,0.819,75,0.763,76,0.86,87,2.626,89,2.882,90,2.882,91,2.882,94,3.514,104,3.089,107,1.952,108,1.093,109,0.551,110,1.145,120,3.372,134,1.191,141,1.924,145,1.001,157,1.81,165,1.896,173,1.729,174,1.191,175,1.81,191,2.865,199,2.44,205,4.761,206,2.882,207,4.718,224,1.621,234,1.81,235,3.341,236,3.341,237,3.341,238,3.341,239,1.512,240,1.621,241,2.782,242,2.917,243,3.214,244,2.534,245,5.788,246,4.994,247,2.098,248,3.341,249,2.098,250,3.341,251,3.344,252,3.341,253,2.098,254,3.341,255,2.098,256,4.162,257,3.341,258,2.098,259,3.341,260,2.098,261,3.341,262,2.098,263,1.594,264,3.341,265,2.098,266,1.621,267,2.098,268,2.098,269,2.58,270,3.341,271,1.272,272,1.479,273,1.191,274,1.366,275,1.684,276,1.191,277,1.512,278,1.621,279,1.512,280,1.621,281,3.14,282,2.098,283,3.341,284,2.098,285,3.341,286,2.098,287,3.341,288,2.882,289,2.098,290,2.882,291,2.098,292,2.098,293,2.098,294,2.098,295,2.098,296,3.341,297,3.89,298,3.344,299,3.341,300,3.341,301,3.341,302,3.341,303,4.162,304,3.341,305,4.162,306,3.341,307,4.162,308,2.58,309,2.472,310,2.098,311,1.272,312,2.174,313,2.58,314,1.479,315,0.903,316,2.098,317,3.341,318,2.098,319,3.341,320,3.341,321,2.098,322,2.098,323,2.098,324,2.354,325,3.341,326,3.341,327,2.098,328,2.098,329,2.098,330,1.621,331,3.341,332,3.341,333,2.098,334,3.341,335,2.098,336,3.214,337,2.098,338,1.366,339,1.896,340,2.098,341,2.098,342,1.366,343,3.341,344,1.784,345,1.81,346,2.098,347,1.81,348,2.098]],["title/classes/BaseController.html",[21,0.092,86,2.026]],["body/classes/BaseController.html",[3,0.109,4,0.097,5,0.072,7,0.174,8,1.116,11,0.017,12,0.634,14,1.747,15,1.043,16,0.53,17,0.556,20,0.134,21,0.059,24,2.39,26,0.008,27,0.008,86,2.005,92,2.776,93,2.776,94,3.335,95,2.275,96,2.776,97,2.275,98,2.275,100,3.338,101,2.922,102,3.475,107,1.909,108,1.069,109,0.618,110,1.12,111,3.086,123,1.476,124,3.56,125,3.883,126,4.014,129,2.215,130,3.536,131,2.275,132,2.275,133,1.476,134,2.6,136,2.275,137,2.275,139,1.892,140,1.476,141,1.826,142,3.156,144,3.156,145,2.921,146,1.7,147,2.309,148,2.275,149,1.7,151,2.275,152,2.275,154,2.776,170,1.228,199,2.178,349,0.757,350,2.101,351,2.436,352,2.436,353,2.436,354,2.436,355,2.436,356,2.436,357,4.581,358,2.436,359,4.581,360,2.436,361,2.436,362,2.436,363,2.436,364,0.791,365,3.755,366,2.101,367,2.436,368,1.881,369,2.101,370,2.436,371,2.101,372,2.436,373,2.101,374,2.436,375,2.436,376,2.436,377,2.436,378,2.436,379,2.436,380,2.436,381,2.436,382,2.436,383,2.436,384,2.436,385,2.436,386,2.436,387,2.436,388,2.436,389,2.436,390,2.436,391,2.436,392,2.436,393,2.436,394,2.436,395,2.436,396,2.436,397,2.436,398,2.436,399,3.755,400,3.755,401,3.755,402,2.436,403,3.755,404,2.436,405,2.131,406,2.436,407,2.436,408,2.436,409,3.239,410,2.101,411,2.101,412,2.9,413,3.755,414,2.436,415,3.755,416,2.436,417,2.436,418,3.755,419,2.436,420,2.436,421,2.436,422,2.436,423,2.101,424,2.436]],["title/classes/BaseDto.html",[21,0.092,425,1.718]],["body/classes/BaseDto.html",[3,0.265,4,0.235,5,0.176,11,0.016,20,0.327,21,0.144,26,0.015,27,0.015,349,1.842,368,4.578,425,3.113,426,5.114]],["title/classes/BaseEntity.html",[21,0.092,427,1.718]],["body/classes/BaseEntity.html",[3,0.195,4,0.173,5,0.13,7,0.313,10,2.623,11,0.017,12,0.725,16,0.416,20,0.241,21,0.106,26,0.012,27,0.012,73,2.224,109,0.703,129,3.075,141,1.771,145,2.085,315,2.728,349,1.358,364,1.42,368,3.374,427,2.579,428,3.769,429,1.36,430,6.341,431,6.341,432,6.341,433,4.056,434,4.369,435,5.52,436,6.72,437,4.369,438,4.369,439,3.079,440,3.234,441,4.369,442,4.369,443,5.698,444,4.369,445,4.369,446,4.369,447,5.698,448,2.48,449,5.698,450,5.698,451,5.698]],["title/classes/BaseService.html",[21,0.092,452,2.299]],["body/classes/BaseService.html",[3,0.109,4,0.097,5,0.073,7,0.175,8,1.12,11,0.017,12,0.683,14,1.823,16,0.531,20,0.135,21,0.06,22,1.167,24,2.394,26,0.008,27,0.008,87,2.743,107,2.057,108,1.152,109,0.668,110,1.207,141,2.128,146,1.107,147,1.233,149,2.664,182,4.807,183,4.807,184,4.807,185,4.807,186,4.303,187,4.807,188,5.721,189,4.807,190,4.807,191,2.512,199,1.34,239,1.107,263,3.346,311,3.567,314,4.148,315,2.724,349,0.76,364,0.795,425,2.522,427,1.705,452,2.283,453,2.11,454,2.909,455,2.99,456,1.899,457,1.899,458,2.452,459,2.452,460,2.452,461,2.452,462,1.899,463,2.446,464,3.567,465,2.446,466,2.909,467,2.446,468,1.388,469,2.452,470,2.446,471,2.452,472,2.446,473,2.452,474,2.446,475,3.627,476,2.452,477,2.446,478,2.452,479,2.446,480,2.452,481,2.601,482,2.446,483,1.482,484,1.482,485,4.303,486,3.985,487,3.985,488,3.985,489,3.985,490,1.889,491,1.889,492,2.11,493,1.592,494,3.767,495,2.446,496,2.446,497,4.594,498,3.767,499,4.594,500,4.594,501,2.315,502,3.767,503,2.446,504,2.446,505,2.446,506,2.446,507,2.446,508,2.446,509,2.446]],["title/interfaces/BasicResponseInterface.html",[139,1.913,510,1.913]],["body/interfaces/BasicResponseInterface.html",[3,0.23,4,0.204,5,0.153,7,0.368,11,0.017,15,1.229,26,0.014,27,0.014,109,0.679,125,4.048,139,3.185,141,2.126,369,6.153,371,6.153,373,6.153,429,1.508,510,2.593,511,3.348,512,4.438]],["title/entities/Competition.html",[513,1.554,514,2.47]],["body/entities/Competition.html",[3,0.21,4,0.186,5,0.14,7,0.337,10,2.564,11,0.017,12,0.708,15,1.148,16,0.569,20,0.259,21,0.115,26,0.013,27,0.013,73,2.698,85,1.282,108,1.257,109,0.658,364,1.529,427,2.705,429,1.427,440,3.921,448,3.921,501,3.012,513,2.448,514,3.89,515,2.372,516,4.06,517,2.564,518,5.072,519,4.06,520,4.212,521,4.705,522,3.89,523,4.705,524,4.705,525,2.671,526,4.705]],["title/interfaces/ControllerInterface.html",[510,1.913,527,2.674]],["body/interfaces/ControllerInterface.html",[3,0.16,4,0.142,5,0.107,7,0.257,8,1.484,11,0.017,12,0.703,14,1.938,16,0.475,20,0.198,26,0.011,27,0.011,100,3.821,101,4.281,102,4.303,107,2.118,108,1.186,109,0.621,110,1.242,111,3.489,141,2.345,142,3.257,144,3.257,170,1.81,263,3.463,315,3.084,425,3.133,456,2.516,457,2.516,462,2.892,468,3.257,481,2.892,510,1.81,511,2.337,527,3.518,528,3.097,529,4.044,530,3.518,531,3.518,532,3.59,533,3.518,534,3.59,535,2.53,536,4.044,537,3.59,538,3.518,539,3.59,540,2.53,541,3.59,542,2.53]],["title/classes/CreateCompetitionDto.html",[21,0.092,543,2.674]],["body/classes/CreateCompetitionDto.html",[3,0.229,4,0.203,5,0.153,7,0.367,11,0.017,12,0.737,15,1.209,20,0.348,21,0.154,26,0.014,27,0.014,108,1.296,109,0.65,110,1.358,349,1.594,429,1.506,517,2.782,518,5.503,543,4.445,544,3.961,545,5.128,546,5.128,547,5.128,548,3.614]],["title/classes/CreateEventDto.html",[21,0.092,549,2.674]],["body/classes/CreateEventDto.html",[3,0.196,4,0.174,5,0.13,7,0.314,11,0.017,12,0.797,15,1.245,20,0.315,21,0.139,26,0.012,27,0.012,108,1.224,109,0.703,110,1.363,349,1.361,429,1.362,517,2.626,549,4.023,550,3.383,551,5.195,552,5.195,553,5.195,554,5.195,555,5.195,556,5.195,557,4.38,558,4.38,559,4.38,560,4.38,561,4.38,562,4.38,563,4.38,564,4.38,565,3.087]],["title/classes/CreateUserDto.html",[21,0.092,566,2.299]],["body/classes/CreateUserDto.html",[3,0.201,4,0.179,5,0.134,7,0.323,11,0.017,12,0.777,15,1.155,16,0.613,20,0.32,21,0.142,26,0.013,27,0.013,109,0.686,110,1.416,275,3.632,276,2.558,309,3.244,316,3.244,339,3.653,344,3.436,349,1.401,429,1.388,566,3.523,567,3.481,568,4.536,569,4.507,570,4.507,571,4.507,572,3.071,573,4.507,574,3.071,575,4.507,576,4.507,577,3.889,578,3.889,579,2.934]],["title/classes/CreateUserPetDto.html",[21,0.092,572,1.81]],["body/classes/CreateUserPetDto.html",[3,0.165,4,0.146,5,0.11,7,0.264,11,0.017,12,0.802,15,1.219,16,0.484,20,0.28,21,0.124,26,0.011,27,0.011,108,1.142,109,0.708,110,1.471,141,1.81,173,1.773,174,2.095,349,1.147,429,1.215,433,3.305,517,2.45,572,2.428,580,2.851,581,3.803,582,4.847,583,4.847,584,4.847,585,4.033,586,4.423,587,4.847,588,4.847,589,4.847,590,3.691,591,3.691,592,3.691,593,3.691,594,3.691,595,3.691,596,4.104,597,3.691,598,3.691,599,3.691,600,3.691,601,3.691,602,3.691,603,2.601,604,2.237]],["title/classes/CreateUserProfileDto.html",[21,0.092,574,1.81]],["body/classes/CreateUserProfileDto.html",[3,0.18,4,0.16,5,0.194,7,0.288,11,0.017,12,0.792,15,1.207,16,0.514,20,0.298,21,0.132,26,0.012,27,0.012,85,1.659,109,0.699,110,1.454,173,1.743,174,2.287,342,4.236,349,1.252,425,2.946,429,1.289,433,3.458,517,2.541,542,2.84,574,2.577,581,3.944,585,3.694,605,3.112,606,5.027,607,4.587,608,4.587,609,5.027,610,4.03,611,4.03,612,4.03,613,4.03,614,4.03,615,4.294,616,4.03,617,4.03,618,4.03,619,4.03,620,2.623]],["title/entities/Event.html",[513,1.554,621,2.47]],["body/entities/Event.html",[3,0.167,4,0.148,5,0.112,7,0.268,10,2.784,11,0.017,12,0.769,15,1.201,16,0.49,20,0.207,21,0.091,26,0.011,27,0.011,73,2.784,85,1.021,108,1.149,109,0.697,129,2.212,364,1.218,427,2.328,429,1.227,440,4.155,448,4.106,501,3.594,513,2.106,515,1.889,517,2.292,519,4.436,520,4.452,522,4.45,525,2.127,551,4.533,552,4.533,553,4.533,554,4.533,555,4.533,556,4.533,621,3.347,622,3.233,623,3.747,624,3.747,625,5.142,626,3.747,627,3.747,628,3.747,629,3.747,630,3.747,631,3.747,632,3.747]],["title/modules/EventsModule.html",[28,1.718,41,2.47]],["body/modules/EventsModule.html",[2,2.325,3,0.241,4,0.214,5,0.161,11,0.017,16,0.691,17,1.234,20,0.298,21,0.132,26,0.014,27,0.014,28,2.947,30,2.885,35,3.275,41,4.238,48,3.275,50,3.808,51,2.724,514,4.238,621,3.517,633,5.404,634,5.404,635,5.404,636,5.404]],["title/entities/File.html",[5,0.113,513,1.554]],["body/entities/File.html",[3,0.149,4,0.132,5,0.219,7,0.239,10,2.573,11,0.017,12,0.711,15,1.15,16,0.572,20,0.184,21,0.081,26,0.01,27,0.01,64,5.474,73,2.647,85,0.909,108,1.004,109,0.695,173,1.729,277,3.137,279,3.274,312,3.087,339,2.692,344,2.945,364,1.085,427,2.147,429,1.132,440,3.409,448,4.001,501,2.39,513,1.943,515,1.683,525,1.895,637,2.88,638,5.474,639,6.344,640,5.516,641,3.338,642,3.338,643,3.338,644,4.743,645,3.338,646,2.578,647,4.743,648,3.338,649,5.182,650,2.88,651,4.743,652,3.338,653,3.338,654,3.663,655,4.092,656,4.092,657,2.578,658,4.646]],["title/injectables/JwtAuthGuard.html",[75,0.867,167,2.299]],["body/injectables/JwtAuthGuard.html",[3,0.253,4,0.224,5,0.168,11,0.017,16,0.637,17,1.291,20,0.312,21,0.138,26,0.015,27,0.015,75,1.528,76,2.316,85,1.54,167,4.053,169,3.426,222,3.018,659,3.68,660,3.985,661,4.366,662,4.877]],["title/injectables/JwtRefreshAuthGuard.html",[75,0.867,171,2.674]],["body/injectables/JwtRefreshAuthGuard.html",[3,0.25,4,0.222,5,0.167,11,0.017,16,0.633,17,1.279,20,0.309,21,0.136,26,0.014,27,0.014,75,1.519,76,2.293,85,1.525,169,3.392,171,4.687,172,4.617,222,2.989,659,3.644,660,3.945,661,4.323,662,4.83]],["title/injectables/JwtRefreshStrategy.html",[75,0.867,215,2.47]],["body/injectables/JwtRefreshStrategy.html",[3,0.183,4,0.162,5,0.122,7,0.293,8,1.621,11,0.017,12,0.588,14,1.215,15,0.644,16,0.668,17,0.934,20,0.225,21,0.1,22,1.95,24,1.596,26,0.012,27,0.012,73,1.596,75,1.245,76,1.674,85,1.113,87,2.286,100,3.299,107,1.772,108,0.992,109,0.519,110,1.039,111,2.748,156,3.843,170,2.06,172,2.66,173,1.531,177,2.182,191,1.674,199,2.183,207,3.843,215,3.549,222,2.182,225,3.304,239,1.85,240,3.157,241,3.536,251,2.881,266,3.157,297,2.881,298,2.477,308,3.157,309,2.602,412,5.056,501,2.06,663,5.294,664,3.526,665,4.211,666,4.087,667,5.453,668,4.087,669,3.526,670,4.211,671,2.66,672,4.211,673,3.526,674,3.526,675,3.526,676,3.526,677,3.526,678,4.087,679,3.526,680,4.087,681,4.087,682,4.087,683,4.087]],["title/injectables/JwtStrategy.html",[75,0.867,216,2.47]],["body/injectables/JwtStrategy.html",[3,0.196,4,0.174,5,0.131,7,0.314,8,1.7,11,0.017,12,0.617,14,1.306,16,0.665,17,1.003,20,0.242,21,0.107,22,2.095,24,1.715,26,0.012,27,0.012,75,1.306,76,1.799,85,1.196,87,2.368,107,1.858,108,1.04,109,0.544,110,1.09,156,4.029,173,1.586,177,2.345,191,1.799,199,2.033,216,3.721,222,2.345,225,3.464,239,1.988,240,3.392,241,3.607,251,3.095,266,3.392,297,3.095,298,2.661,308,3.392,309,2.728,412,4.415,501,2.214,665,4.415,669,3.789,670,3.392,671,2.858,672,3.392,673,3.789,674,3.789,675,3.789,676,3.789,677,3.789,679,3.789,684,3.789,685,4.392,686,5.717,687,4.392,688,3.789,689,3.789]],["title/injectables/LocalAuthGuard.html",[75,0.867,158,2.674]],["body/injectables/LocalAuthGuard.html",[3,0.253,4,0.224,5,0.168,11,0.017,16,0.637,17,1.291,20,0.312,21,0.138,26,0.015,27,0.015,75,1.528,76,2.316,85,1.54,158,4.714,160,4.366,222,3.018,660,3.985,661,4.366,690,4.877,691,5.653]],["title/injectables/LocalStrategy.html",[75,0.867,217,2.47]],["body/injectables/LocalStrategy.html",[3,0.202,4,0.18,5,0.135,7,0.324,8,1.735,11,0.017,12,0.629,14,1.347,15,1.137,16,0.649,17,1.035,20,0.25,21,0.11,22,2.162,24,1.769,26,0.013,27,0.013,73,1.769,75,1.332,76,1.856,85,1.234,87,2.403,107,1.896,108,1.061,109,0.555,110,1.112,156,4.112,165,4.096,166,3.5,177,2.419,217,3.797,222,2.419,239,2.051,263,2.784,297,3.194,298,2.746,309,3.079,316,3.434,665,4.506,670,3.5,671,2.949,672,3.5,688,3.909,692,3.909,693,4.531,694,4.531,695,5.834,696,4.531,697,3.909,698,4.531]],["title/classes/LoginUserDto.html",[21,0.092,104,2.47]],["body/classes/LoginUserDto.html",[3,0.247,4,0.219,5,0.164,7,0.396,11,0.016,12,0.712,15,1.151,20,0.305,21,0.135,26,0.014,27,0.014,104,4.295,109,0.628,309,3.366,316,3.556,349,1.717,429,1.575,699,4.767,700,5.526,701,5.526]],["title/interfaces/PaginationInterface.html",[146,1.718,510,1.913]],["body/interfaces/PaginationInterface.html",[3,0.248,4,0.22,5,0.165,7,0.397,11,0.017,26,0.014,27,0.014,109,0.629,141,2.357,146,2.993,410,6.311,411,6.311,429,1.578,510,2.794,511,3.608,702,4.783]],["title/classes/RefreshTokenDto.html",[21,0.092,703,2.931]],["body/classes/RefreshTokenDto.html",[3,0.241,4,0.214,5,0.161,7,0.387,10,2.11,11,0.017,12,0.583,15,1.025,16,0.62,20,0.298,21,0.159,26,0.014,27,0.014,109,0.515,349,1.679,429,1.554,703,5.028,704,4.662,705,6.988,706,5.404,707,5.404,708,6.51,709,4.662,710,6.51,711,4.662]],["title/guards/RoleGuard.html",[712,2.931,713,2.674]],["body/guards/RoleGuard.html",[3,0.187,4,0.166,5,0.125,7,0.3,8,1.648,11,0.017,12,0.67,14,1.648,15,1.112,16,0.591,17,0.956,20,0.231,21,0.102,22,1.998,24,2.425,26,0.012,27,0.012,73,1.635,75,1.266,100,2.111,107,2.018,108,1.13,109,0.591,110,1.184,173,1.045,199,2.209,239,1.896,263,2.644,275,2.111,454,3.234,615,3.905,713,3.905,714,4.187,715,3.613,716,6.874,717,5.541,718,4.187,719,7.063,720,4.187,721,4.187,722,6.609,723,4.187,724,5.541,725,6.21,726,5.541,727,6.609,728,4.187,729,3.763,730,3.613,731,3.613,732,4.187,733,4.187,734,4.187,735,4.187,736,4.187,737,4.187,738,4.187]],["title/interfaces/ServiceInterface.html",[455,2.47,510,1.913]],["body/interfaces/ServiceInterface.html",[3,0.148,4,0.131,5,0.099,7,0.238,8,1.405,11,0.017,12,0.73,14,2.013,16,0.626,20,0.183,26,0.01,27,0.01,107,2.2,108,1.232,109,0.701,110,1.29,141,2.268,146,1.502,147,1.673,149,2.978,263,3.536,311,3.332,314,3.876,315,2.578,364,1.078,425,3.064,427,1.502,455,3.074,456,2.381,457,2.381,458,3.074,459,3.074,460,3.074,461,3.074,462,2.381,466,3.648,468,1.884,469,3.074,471,3.074,473,3.074,475,4.12,476,3.074,478,3.074,480,3.074,481,2.772,483,2.011,484,2.011,485,4.889,486,4.627,487,4.627,488,4.627,489,4.627,490,4.247,491,2.563,493,2.16,510,1.673,511,2.16,525,1.884,542,2.339,739,2.863,740,3.319,741,3.319,742,3.319,743,3.319,744,3.319,745,3.319,746,3.319,747,3.319,748,3.319]],["title/classes/SignupDto.html",[21,0.092,120,2.47]],["body/classes/SignupDto.html",[3,0.213,4,0.189,5,0.142,7,0.341,11,0.017,12,0.788,15,1.183,16,0.573,20,0.262,21,0.116,26,0.013,27,0.013,109,0.696,110,1.322,120,3.917,309,3.15,316,3.327,330,5.098,339,3.747,344,3.525,349,1.479,429,1.437,568,4.653,572,3.15,574,3.15,749,4.105,750,4.758,751,4.758,752,4.758,753,4.758,754,4.758,755,4.758,756,4.758,757,4.758]],["title/classes/UpdateCompetitionDto.html",[21,0.092,548,2.674]],["body/classes/UpdateCompetitionDto.html",[3,0.228,4,0.202,5,0.152,7,0.365,11,0.017,12,0.735,15,1.208,20,0.346,21,0.153,26,0.014,27,0.014,108,1.294,109,0.649,110,1.418,349,1.584,429,1.5,517,2.776,518,5.491,543,3.593,544,3.937,548,4.429,758,5.098,759,5.098,760,5.098]],["title/classes/UpdateEventDto.html",[21,0.092,565,2.674]],["body/classes/UpdateEventDto.html",[3,0.191,4,0.169,5,0.127,7,0.306,11,0.017,12,0.792,15,1.242,20,0.309,21,0.137,26,0.012,27,0.012,108,1.212,109,0.699,110,1.476,349,1.327,429,1.34,517,2.6,549,3.01,550,3.299,551,5.144,552,5.144,553,5.144,554,5.144,555,5.144,556,5.144,565,3.957,761,4.271,762,4.271,763,4.271,764,4.271,765,4.271,766,4.271,767,4.271,768,4.271]],["title/classes/UpdateUserDto.html",[21,0.092,579,2.47]],["body/classes/UpdateUserDto.html",[3,0.227,4,0.201,5,0.151,7,0.364,11,0.017,12,0.548,15,1.149,16,0.648,20,0.346,21,0.153,26,0.014,27,0.014,109,0.484,110,1.196,275,3.429,276,2.885,309,3.389,316,2.562,339,2.885,344,2.714,349,1.58,429,1.497,566,3.08,567,3.926,568,3.582,572,2.993,574,2.993,577,4.385,578,4.385,579,4.082,769,5.083]],["title/classes/UpdateUserPetDto.html",[21,0.092,604,2.299]],["body/classes/UpdateUserPetDto.html",[3,0.164,4,0.145,5,0.109,7,0.263,11,0.017,12,0.801,15,1.218,16,0.482,20,0.279,21,0.123,26,0.011,27,0.011,108,1.139,109,0.707,110,1.484,141,1.804,173,1.77,174,2.081,349,1.14,429,1.209,433,3.294,517,2.444,572,1.75,580,2.832,581,3.793,582,4.834,583,4.834,584,4.834,585,4.026,586,4.411,587,4.834,588,4.834,589,4.834,596,4.09,603,2.585,604,3.07,770,3.667,771,3.667,772,3.667,773,3.667,774,3.667,775,3.667,776,3.667,777,3.667,778,3.667,779,3.667,780,3.667,781,3.667]],["title/classes/UpdateUserProfileDto.html",[21,0.092,620,2.47]],["body/classes/UpdateUserProfileDto.html",[3,0.183,4,0.162,5,0.195,7,0.293,11,0.017,12,0.785,15,1.209,16,0.519,20,0.301,21,0.133,26,0.012,27,0.012,85,1.671,109,0.693,110,1.469,173,1.531,174,2.32,342,4.261,349,1.27,425,2.963,429,1.302,433,3.482,517,2.556,542,2.881,574,1.95,581,3.967,585,3.715,605,3.157,606,5.056,607,4.614,608,4.614,609,5.056,615,4.325,620,3.549,782,4.087,783,4.087,784,4.087,785,4.087,786,4.087,787,4.087,788,4.087,789,4.087]],["title/controllers/UploaderController.html",[0,1.554,790,2.674]],["body/controllers/UploaderController.html",[0,1.161,2,1.22,3,0.127,4,0.112,5,0.166,7,0.203,8,1.252,10,1.107,11,0.017,12,0.696,14,1.918,15,0.981,16,0.614,17,0.648,20,0.232,21,0.069,22,1.353,26,0.009,27,0.009,63,1.998,68,2.446,83,1.845,85,1.147,86,3.614,87,1.872,92,2.552,93,2.552,94,3.157,95,2.552,96,2.552,97,2.552,98,2.552,100,3.471,101,3.66,102,3.76,107,2.095,108,1.231,109,0.656,110,1.229,111,3.566,123,1.718,124,2.552,125,3.535,126,3.774,127,3.325,128,1.845,129,2.393,130,3.325,131,1.718,132,2.552,133,1.718,134,2.39,135,1.845,136,1.718,137,1.718,138,1.845,139,1.429,140,1.718,141,1.729,142,2.39,143,1.845,144,1.609,145,2.01,146,1.283,147,1.429,148,1.718,149,1.907,150,1.845,151,1.718,152,1.718,153,1.845,154,1.718,155,1.998,162,1.845,170,2.123,177,1.514,181,1.845,191,1.161,193,1.845,195,1.845,196,1.845,199,2.114,405,1.609,596,3.542,638,2.446,657,3.881,790,2.968,791,2.19,792,2.835,793,5.025,794,2.835,795,2.835,796,2.835,797,5.562,798,2.835,799,2.835,800,2.446,801,4.212,802,2.835,803,3.045,804,2.446,805,1.845,806,3.253,807,2.446,808,2.446,809,2.446,810,2.446,811,2.446,812,2.446,813,2.446,814,2.446,815,2.446,816,2.446,817,2.446,818,2.446,819,2.835,820,2.835,821,2.835,822,2.835,823,2.835,824,2.835,825,2.835,826,4.212]],["title/modules/UploaderModule.html",[28,1.718,42,2.47]],["body/modules/UploaderModule.html",[2,2.674,3,0.224,4,0.198,5,0.185,11,0.017,16,0.692,17,1.144,20,0.276,21,0.122,26,0.014,27,0.014,28,3.059,30,2.674,31,2.842,32,3.26,33,3.26,34,2.842,35,4.095,36,3.26,42,4.819,44,4.045,45,3.26,46,3.26,48,3.035,50,3.53,51,2.524,790,4.763,803,4.487,804,4.321,805,3.26,827,4.321,828,4.321,829,5.008,830,5.008,831,5.008]],["title/injectables/UploaderService.html",[75,0.867,803,2.299]],["body/injectables/UploaderService.html",[3,0.202,4,0.18,5,0.192,7,0.324,8,1.735,11,0.017,12,0.629,14,1.347,16,0.649,17,1.035,20,0.25,21,0.11,24,1.769,26,0.013,27,0.013,51,2.284,75,1.332,76,1.856,87,2.403,107,1.896,108,1.061,109,0.555,110,1.112,191,1.856,199,2.075,239,2.051,251,3.194,281,2.746,298,2.746,364,1.472,464,4.129,515,2.284,596,4.802,657,3.5,803,3.535,805,2.949,832,3.909,833,5.834,834,4.531,835,4.531,836,5.834,837,5.834,838,4.531,839,3.194,840,4.531,841,4.531,842,4.531,843,4.531,844,4.531,845,4.531,846,4.531,847,4.531,848,4.531,849,4.531,850,4.531,851,4.531,852,4.531,853,4.531,854,4.531,855,4.531]],["title/entities/User.html",[173,0.947,513,1.554]],["body/entities/User.html",[3,0.139,4,0.124,5,0.093,7,0.223,10,2.515,11,0.017,12,0.695,15,1.092,16,0.613,20,0.172,21,0.11,26,0.01,27,0.01,69,3.897,73,2.708,85,0.85,108,0.568,109,0.687,110,0.861,129,1.944,172,2.94,173,1.757,207,3.743,275,3.43,276,1.77,277,2.797,279,2.917,309,2.948,312,4.022,313,4.773,314,3.184,316,3.115,338,2.03,339,2.564,344,2.836,364,1.014,427,2.045,429,1.078,439,2.198,440,3.305,448,3.305,501,3.349,513,1.85,515,1.572,522,2.94,525,1.77,649,3.897,658,4.541,856,2.691,857,5.311,858,3.119,859,3.119,860,4.517,861,4.517,862,3.119,863,3.897,864,3.119,865,3.119,866,4.517,867,3.119,868,3.119,869,3.119,870,3.119,871,4.517,872,4.517,873,3.489,874,3.489,875,3.119,876,5.311,877,4.102,878,4.102,879,2.691,880,2.691,881,4.517,882,3.119,883,3.119]],["title/entities/UserPet.html",[277,1.718,513,1.554]],["body/entities/UserPet.html",[3,0.106,4,0.094,5,0.192,7,0.17,10,2.656,11,0.017,12,0.734,15,1.149,16,0.524,20,0.131,21,0.058,26,0.008,27,0.008,73,2.795,85,0.648,108,1.059,109,0.717,129,1.586,141,1.71,173,1.697,277,1.669,312,1.548,364,0.773,427,1.669,429,0.88,433,2.885,435,3.485,439,1.676,440,3.445,448,3.861,501,3.246,513,1.51,515,1.199,517,2.147,520,3.181,522,3.951,525,1.35,581,2.735,582,4.248,583,4.248,584,4.248,585,3.802,586,3.877,587,3.485,588,4.248,589,4.248,603,1.676,646,1.837,654,2.847,656,3.18,658,4.795,671,2.399,863,2.052,873,2.847,874,2.847,877,3.485,878,3.485,884,2.052,885,2.378,886,3.18,887,2.378,888,7.369,889,2.378,890,2.378,891,2.378,892,2.378,893,2.378,894,2.378,895,2.378,896,2.378,897,2.378,898,2.052,899,2.378,900,3.18,901,2.378,902,2.378,903,2.052,904,2.052,905,2.378,906,3.893,907,2.378,908,2.052]],["title/controllers/UserPetsController.html",[0,1.554,909,2.674]],["body/controllers/UserPetsController.html",[0,0.762,2,0.801,3,0.083,4,0.074,5,0.055,7,0.133,8,0.902,10,1.903,11,0.017,12,0.675,14,1.86,15,0.823,16,0.582,17,0.425,20,0.103,21,0.045,22,0.888,26,0.007,27,0.007,83,1.211,85,0.826,86,3.173,87,2.486,92,1.838,93,1.838,94,2.512,95,1.838,96,1.838,97,1.838,98,1.838,100,3.575,101,4.049,102,3.972,107,2.032,108,1.138,109,0.627,110,1.192,111,3.719,123,1.128,124,3.866,125,2.966,126,3.167,127,2.791,128,1.211,129,2.097,130,2.943,131,1.128,132,1.838,133,1.128,134,1.721,135,1.211,136,1.128,137,1.128,138,1.211,139,0.938,140,1.128,141,2.121,142,2.966,143,1.211,144,2.512,145,1.447,146,0.843,147,0.938,148,1.128,149,1.373,150,1.211,151,1.128,152,1.128,153,1.211,154,1.128,155,1.312,161,1.437,162,1.974,163,1.437,164,2.705,167,1.128,169,1.128,170,0.938,173,0.757,177,0.994,178,1.437,181,3.172,191,1.996,193,3.172,195,3.172,196,3.172,199,1.734,243,1.437,244,1.619,271,3.34,272,1.312,275,0.938,276,1.056,277,2.004,278,1.437,311,1.838,312,2.498,315,2.629,324,1.312,338,3.402,344,2.363,364,0.605,405,1.721,456,1.935,457,1.935,462,1.935,468,2.178,481,2.231,483,1.838,484,2.954,493,1.211,529,2.705,530,2.705,531,1.312,533,1.312,535,1.312,536,2.705,538,1.312,540,1.312,572,2.112,604,2.682,659,1.211,729,1.128,909,2.138,910,4.037,911,1.606,912,1.437,913,4.037,914,4.037,915,1.861,916,1.437,917,1.861,918,1.861,919,2.342,920,2.342,921,1.861,922,1.437,923,1.861,924,1.312,925,1.437,926,3.418,927,1.437,928,1.437,929,1.437,930,1.437,931,1.861,932,1.437,933,1.437,934,1.437,935,1.606,936,1.437,937,1.437,938,2.964,939,1.861,940,2.964,941,1.861,942,1.437,943,1.861,944,1.437,945,1.861]],["title/injectables/UserPetsService.html",[75,0.867,244,2.026]],["body/injectables/UserPetsService.html",[3,0.141,4,0.125,5,0.159,7,0.226,8,1.356,11,0.017,12,0.737,14,1.984,16,0.635,17,0.722,20,0.174,21,0.077,24,1.234,26,0.01,27,0.01,51,1.593,75,1.041,76,1.294,85,1.242,87,2.757,107,2.219,108,1.243,109,0.7,110,1.302,127,3.562,141,2.123,145,2.176,149,2.93,173,0.788,191,1.294,199,1.124,239,1.43,244,2.434,263,3.258,271,2.763,277,2.064,281,1.915,315,2.672,364,1.027,425,2.064,452,4.281,456,2.298,457,2.298,458,2.968,459,2.968,460,2.968,461,2.968,462,2.298,464,3.55,469,2.056,471,2.056,473,2.056,475,3.812,476,2.056,478,2.056,480,2.056,481,2.298,572,2.795,586,2.227,604,1.915,805,2.056,839,2.227,929,2.44,946,3.522,947,2.726,948,3.16,949,3.16,950,4.56,951,4.56,952,3.522,953,3.934,954,2.44,955,2.44,956,2.44,957,2.44,958,2.44,959,2.726,960,2.44,961,3.16,962,3.16,963,3.16,964,3.16,965,4.56,966,3.16,967,3.16,968,3.16,969,3.16]],["title/entities/UserProfile.html",[279,1.718,513,1.554]],["body/entities/UserProfile.html",[3,0.121,4,0.107,5,0.199,7,0.194,10,2.61,11,0.017,12,0.721,15,1.089,16,0.555,20,0.149,21,0.066,26,0.009,27,0.009,73,2.736,85,0.738,108,1.061,109,0.714,129,2.105,173,1.825,279,1.843,339,3.476,342,3.184,364,0.88,427,1.843,429,0.972,433,2.311,435,3.778,439,1.91,440,3.087,448,3.709,501,3.202,513,1.668,515,1.366,517,2.276,520,3.447,522,3.54,525,1.538,581,2.964,585,3.925,603,1.91,606,4.503,607,3.447,608,3.447,609,4.503,615,3.447,646,2.093,650,2.338,654,3.145,655,3.513,658,4.712,873,3.145,874,3.145,877,2.093,878,3.778,886,3.513,898,2.338,900,3.513,903,2.338,904,2.338,906,4.22,908,2.338,970,2.338,971,4.072,972,2.709,973,2.709,974,7.007,975,2.709,976,2.709,977,4.072,978,2.709,979,2.709,980,2.709,981,4.072,982,2.709,983,4.072,984,2.709,985,2.709,986,2.709,987,2.709]],["title/controllers/UserProfilesController.html",[0,1.554,988,2.674]],["body/controllers/UserProfilesController.html",[0,0.781,2,0.82,3,0.085,4,0.076,5,0.057,7,0.136,8,0.92,10,1.927,11,0.017,12,0.68,14,1.874,15,0.833,16,0.571,17,0.435,20,0.105,21,0.046,22,0.91,26,0.007,27,0.007,83,1.241,85,0.842,86,3.2,87,2.501,92,1.874,93,1.874,94,2.548,95,1.874,96,1.874,97,1.874,98,1.874,100,3.589,101,4.065,102,3.99,107,2.047,108,1.146,109,0.631,110,1.201,111,3.73,123,1.155,124,3.893,125,3,126,3.203,127,2.822,128,1.241,129,2.124,130,2.973,131,1.155,132,1.874,133,1.155,134,1.755,135,1.241,136,1.155,137,1.155,138,1.241,139,0.961,140,1.155,141,2.132,142,3,143,1.241,144,2.548,145,1.476,146,0.863,147,0.961,148,1.155,149,1.4,150,1.241,151,1.155,152,1.155,153,1.241,154,1.155,155,1.344,162,2.013,164,2.75,170,0.961,173,0.772,177,1.018,181,3.213,191,2.022,193,3.213,195,3.213,196,3.213,199,1.756,242,1.559,273,3.16,274,1.241,275,0.961,276,1.082,279,2.625,280,1.473,311,1.874,315,2.65,324,1.344,338,3.44,364,0.62,405,1.755,456,1.967,457,1.967,462,1.967,468,2.215,481,2.263,483,1.874,484,2.991,493,1.241,529,2.75,530,2.75,531,1.344,533,1.344,535,1.344,536,2.75,538,1.344,540,1.344,574,2.142,620,2.922,729,1.155,910,4.082,912,1.473,913,4.082,914,4.082,916,1.473,919,2.389,920,2.389,922,1.473,924,1.344,925,1.473,926,3.468,927,1.473,928,1.473,930,1.473,932,1.473,933,1.473,934,1.473,936,1.473,937,1.473,938,3.014,940,3.014,942,1.473,944,1.473,988,2.18,989,1.645,990,1.907,991,1.907,992,1.907,993,1.907,994,1.907,995,1.907,996,1.473,997,1.907,998,1.473,999,3.093,1000,1.645,1001,1.907,1002,1.907,1003,1.907,1004,1.907]],["title/injectables/UserProfilesService.html",[75,0.867,242,1.913]],["body/injectables/UserProfilesService.html",[3,0.143,4,0.127,5,0.16,7,0.229,8,1.369,11,0.017,12,0.739,14,1.992,16,0.638,17,0.731,20,0.176,21,0.078,24,1.25,26,0.01,27,0.01,51,1.613,75,1.051,76,1.311,85,1.254,87,2.763,107,2.227,108,1.247,109,0.702,110,1.306,127,3.576,141,2.13,145,1.527,149,2.942,173,0.799,191,1.311,199,1.139,239,1.449,242,2.32,263,3.27,273,2.612,279,2.44,281,1.94,315,2.686,336,2.472,364,1.04,425,2.084,452,4.293,456,2.32,457,2.32,458,2.996,459,2.996,460,2.996,461,2.996,462,2.32,464,3.571,469,2.083,471,2.083,473,2.083,475,3.835,476,2.083,478,2.083,480,2.083,481,2.32,574,2.812,805,2.083,839,2.256,946,3.555,952,3.555,954,2.472,955,2.472,956,2.472,957,2.472,958,2.472,960,2.472,996,2.472,1005,2.762,1006,3.201,1007,3.201,1008,4.602,1009,4.602,1010,4.602,1011,2.762,1012,3.201,1013,3.201,1014,3.201,1015,3.201,1016,4.602,1017,3.201,1018,3.201]],["title/controllers/UsersController.html",[0,1.554,1019,2.674]],["body/controllers/UsersController.html",[0,0.552,2,0.58,3,0.06,4,0.053,5,0.04,7,0.096,8,0.688,10,2.044,11,0.017,12,0.66,14,1.819,15,0.699,16,0.615,17,0.308,20,0.074,21,0.033,26,0.005,27,0.005,83,0.877,85,0.631,86,2.796,87,2.567,92,1.403,93,1.403,94,2.049,95,1.403,96,1.403,97,1.403,98,1.403,100,3.591,101,4.112,102,4.011,107,1.988,108,1.113,109,0.608,110,1.166,111,3.76,123,0.817,124,3.958,125,2.518,126,2.688,127,2.369,128,0.877,129,1.749,130,2.535,131,0.817,132,1.403,133,0.817,134,3.083,135,0.877,136,0.817,137,0.817,138,0.877,139,0.679,140,0.817,141,2.166,142,2.518,143,0.877,144,2.049,145,1.452,146,0.61,147,0.679,148,0.817,149,1.048,150,0.877,151,0.817,152,0.817,153,0.877,154,0.817,161,1.041,162,1.507,163,1.041,164,2.864,167,0.817,169,0.817,170,0.679,173,1.398,174,0.765,177,0.72,178,1.041,181,3.408,191,2.145,193,3.408,195,3.408,196,3.536,199,1.932,239,0.61,241,1.167,242,1.167,243,1.041,244,1.236,271,0.817,272,0.95,273,0.765,274,0.877,275,0.679,276,0.765,277,1.377,278,1.041,279,1.377,280,1.041,281,1.844,311,1.403,313,2.788,315,2.948,324,0.95,338,3.261,344,0.72,345,1.163,364,0.438,405,1.314,454,1.041,456,1.533,457,1.533,462,1.533,468,2.049,481,1.819,483,1.403,484,2.463,493,0.877,527,1.632,529,2.144,530,2.144,531,0.95,533,0.95,535,0.95,536,2.144,538,0.95,540,0.95,566,2.187,568,1.632,572,1.722,574,2.391,579,2.349,659,0.877,713,1.632,729,0.817,880,3.114,912,1.041,913,3.87,914,3.87,916,1.041,919,1.788,920,1.041,922,1.041,924,1.632,925,1.041,926,3.87,927,1.041,928,1.041,929,1.041,930,1.041,932,1.041,933,1.041,934,1.041,935,1.163,936,1.041,937,1.041,938,3.666,940,2.788,942,1.041,944,1.041,953,3.114,996,1.041,998,1.041,1000,1.163,1019,1.632,1020,1.163,1021,1.348,1022,3.042,1023,3.042,1024,3.042,1025,3.042,1026,1.348,1027,1.348,1028,2.315,1029,1.348,1030,1.348,1031,2.315,1032,1.348,1033,1.348,1034,1.348,1035,1.348,1036,1.348,1037,1.348,1038,2.315,1039,1.348,1040,1.348,1041,2.315,1042,1.348,1043,1.348,1044,1.163,1045,1.348,1046,1.348,1047,1.348,1048,1.348,1049,1.163,1050,1.348,1051,1.348,1052,1.348,1053,1.348,1054,1.348,1055,1.348,1056,1.348,1057,1.348,1058,1.163,1059,1.348,1060,1.348,1061,1.348,1062,1.348,1063,1.163]],["title/modules/UsersModule.html",[28,1.718,43,2.299]],["body/modules/UsersModule.html",[2,2.292,3,0.176,4,0.156,5,0.117,11,0.017,16,0.71,17,0.901,20,0.218,21,0.096,26,0.012,27,0.012,28,2.729,30,2.107,31,2.24,32,2.568,33,2.568,34,2.24,35,3.653,36,3.924,43,4.583,44,3.466,45,2.568,46,2.568,48,2.391,50,2.781,51,1.989,173,0.984,241,3.788,242,3.788,244,4.012,271,3.227,272,2.781,273,3.023,274,2.568,277,2.411,279,2.411,909,4.249,924,3.753,959,3.405,988,4.249,1011,3.405,1019,4.249,1049,3.405,1064,3.405,1065,3.405,1066,3.405,1067,3.946,1068,3.946,1069,3.405,1070,5.326,1071,3.946,1072,3.946,1073,3.946]],["title/injectables/UsersService.html",[75,0.867,241,1.913]],["body/injectables/UsersService.html",[3,0.134,4,0.119,5,0.089,7,0.215,8,1.305,11,0.017,12,0.726,14,1.952,16,0.674,17,0.685,20,0.165,21,0.073,24,1.171,26,0.01,27,0.01,51,1.512,73,1.171,75,1.003,76,1.228,85,1.196,87,2.734,107,2.188,108,1.225,109,0.694,110,1.283,127,3.505,141,2.092,149,2.877,173,1.095,191,1.798,199,1.561,239,1.987,241,2.213,242,2.881,263,3.212,269,3.391,273,1.702,274,1.952,281,2.66,315,2.459,336,2.316,342,1.952,347,2.587,364,0.975,425,2.351,452,4.23,455,1.952,456,2.213,457,2.213,458,2.857,459,2.857,460,2.857,461,2.857,462,2.213,464,3.464,466,3.391,468,2.492,469,1.952,471,1.952,473,1.952,475,3.72,476,1.952,478,1.952,480,1.952,481,2.213,483,1.817,484,1.817,485,2.316,486,2.316,487,2.316,488,2.316,489,2.316,490,2.316,491,2.316,492,2.587,566,3.464,839,2.114,952,2.316,954,2.316,955,2.316,956,2.316,957,2.316,958,2.316,960,2.316,998,4.011,1044,2.587,1058,3.787,1063,2.587,1069,2.587,1074,2.587,1075,2.999,1076,2.999,1077,4.39,1078,2.999,1079,2.999,1080,2.999,1081,2.999,1082,2.999,1083,2.999,1084,4.39,1085,2.999,1086,2.999]],["title/classes/ValidUserDto.html",[21,0.092,1087,2.931]],["body/classes/ValidUserDto.html",[3,0.227,4,0.201,5,0.151,7,0.364,11,0.017,12,0.787,15,1.215,20,0.28,21,0.124,26,0.014,27,0.014,109,0.695,309,3.246,315,2.927,316,3.429,349,1.58,429,1.497,607,4.794,608,4.794,1087,4.844,1088,4.385,1089,5.083,1090,5.083,1091,5.083,1092,5.083,1093,5.083]],["title/coverage.html",[1094,4.005]],["body/coverage.html",[0,2.524,1,1.94,5,0.123,6,2.375,11,0.017,18,1.668,21,0.18,26,0.009,27,0.009,34,1.562,57,2.126,75,1.606,77,2.375,81,1.94,82,2.375,86,1.47,104,1.792,109,0.262,120,1.792,139,1.388,146,1.246,158,1.94,160,2.126,165,1.562,167,1.668,169,2.497,171,1.94,172,2.682,173,0.687,215,1.792,216,1.792,217,1.792,225,1.668,231,2.126,234,2.375,241,1.388,242,1.388,244,1.47,271,2.497,273,2.339,277,1.246,279,1.246,298,1.668,350,2.375,425,1.246,426,2.375,427,1.246,428,2.375,452,1.668,453,2.375,455,1.792,510,2.763,512,2.375,513,2.524,514,1.792,516,2.375,527,1.94,528,2.375,543,1.94,544,3.182,548,1.94,549,1.94,550,3.182,565,1.94,566,1.668,567,3.182,572,1.314,574,1.314,579,1.792,580,3.182,604,1.668,605,3.182,620,1.792,621,1.792,622,2.375,637,2.375,659,2.682,660,3.48,663,2.375,664,2.375,684,2.375,690,2.375,692,2.375,699,2.375,702,2.375,703,2.126,704,2.375,712,2.126,713,1.94,715,2.375,729,1.668,739,2.375,749,2.375,790,1.94,791,3.182,803,1.668,806,2.126,832,2.375,856,2.375,884,2.375,909,1.94,910,3.182,911,2.375,946,3.182,947,2.375,970,2.375,988,1.94,989,2.375,1005,2.375,1019,1.94,1020,2.375,1074,2.375,1087,2.126,1088,2.375,1094,2.126,1095,2.753,1096,2.753,1097,2.753,1098,7.894,1099,5.482,1100,4.938,1101,7.288,1102,4.121,1103,6.567,1104,2.375,1105,5.87,1106,2.375,1107,2.375,1108,2.375,1109,4.938,1110,4.121,1111,6.161,1112,4.121,1113,2.375,1114,2.753,1115,2.753,1116,4.121,1117,2.753,1118,4.121,1119,2.753,1120,2.753,1121,2.753]],["title/dependencies.html",[31,2.591,1122,2.731]],["body/dependencies.html",[11,0.017,17,1.131,21,0.15,26,0.013,27,0.013,31,2.81,51,2.495,56,3.823,61,4.271,62,4.271,170,2.495,222,2.643,224,3.823,225,3,269,3.823,364,1.609,671,4.375,697,4.271,709,4.271,711,4.271,730,4.271,731,4.271,800,4.271,879,4.271,1123,6.722,1124,4.95,1125,4.95,1126,4.95,1127,4.95,1128,4.95,1129,4.95,1130,4.95,1131,4.95,1132,4.95,1133,4.95,1134,4.95,1135,4.95,1136,4.95,1137,4.95,1138,4.95,1139,4.95,1140,4.95,1141,4.95,1142,4.95,1143,4.95,1144,4.95]],["title/miscellaneous/enumerations.html",[1145,1.918,1146,3.939]],["body/miscellaneous/enumerations.html",[7,0.375,11,0.017,26,0.014,27,0.014,130,4.114,173,1.594,275,3.22,366,5.512,585,3.626,1145,3.174,1146,4.519,1147,5.238,1148,5.238,1149,5.238,1150,5.238,1151,5.512,1152,5.512,1153,5.238,1154,6.389,1155,6.389,1156,5.238,1157,6.389,1158,6.389,1159,6.389]],["title/miscellaneous/functions.html",[1145,1.918,1160,3.939]],["body/miscellaneous/functions.html",[7,0.429,11,0.015,26,0.015,27,0.015,34,4.14,1113,5.168,1145,3.63,1160,5.168,1161,5.99]],["title/index.html",[7,0.227,1162,3.165,1163,3.165]],["body/index.html",[4,0.183,11,0.017,26,0.013,27,0.013,63,3.263,186,3.575,409,3.994,464,2.805,517,1.807,1094,3.575,1151,3.994,1152,3.994,1164,4.629,1165,4.629,1166,5.914,1167,4.629,1168,4.629,1169,4.629,1170,4.629,1171,4.629,1172,4.629,1173,6.518,1174,4.629,1175,4.629,1176,7.377,1177,4.629,1178,4.629,1179,7.258,1180,4.629,1181,5.914,1182,4.629,1183,4.629,1184,4.629,1185,5.914,1186,5.914,1187,4.629,1188,4.629,1189,4.629,1190,5.914,1191,5.914,1192,4.629,1193,4.629,1194,4.629,1195,4.629,1196,4.629,1197,3.994,1198,4.629,1199,4.629,1200,4.629,1201,4.629,1202,4.629,1203,4.629,1204,4.629,1205,4.629,1206,4.629,1207,3.994,1208,4.629,1209,4.629,1210,4.629,1211,4.629,1212,4.629,1213,4.629,1214,3.994]],["title/modules.html",[30,2.769]],["body/modules.html",[11,0.015,26,0.015,27,0.015,29,3.985,30,3.018,40,3.68,41,3.68,42,3.68,43,3.426,1197,6.352,1215,7.363,1216,7.363,1217,7.514,1218,5.653,1219,5.653]],["title/overview.html",[1220,4.474]],["body/overview.html",[2,1.742,11,0.017,18,3.701,26,0.012,27,0.012,28,1.833,29,5.318,30,2.162,31,2.298,32,2.635,33,2.635,34,2.298,35,2.454,36,2.635,37,3.493,38,3.493,39,3.493,40,4.967,41,3.975,42,4.425,43,4.6,44,3.527,45,2.635,46,2.635,76,1.658,165,4.055,211,3.493,212,3.493,213,3.493,215,3.975,216,3.975,217,3.975,241,3.601,242,3.601,244,3.815,349,1.258,405,2.298,511,2.635,515,2.041,712,3.127,803,3.701,827,3.493,828,3.493,1064,3.493,1065,3.493,1066,3.493,1220,3.493,1221,4.049,1222,5.418,1223,4.049,1224,4.049,1225,4.049]],["title/properties.html",[429,1.09,1122,2.731]],["body/properties.html",[11,0.017,26,0.015,27,0.015,429,1.415,517,2.314,1207,5.114,1214,5.114,1226,5.927,1227,5.927,1228,5.927]],["title/miscellaneous/variables.html",[1145,1.918,1229,3.939]],["body/miscellaneous/variables.html",[5,0.158,7,0.281,11,0.017,15,0.617,24,2.07,26,0.012,27,0.012,48,3.212,55,4.573,57,4.094,63,2.762,73,1.53,87,1.975,108,0.964,109,0.613,111,1.975,129,2.893,130,3.59,147,1.975,173,0.978,199,2.137,225,3.212,231,4.094,246,5.979,263,2.529,277,1.774,279,1.774,288,4.573,290,3.381,316,1.975,330,3.027,405,2.224,423,3.381,514,2.551,515,1.975,621,2.551,689,3.381,729,3.212,791,3.027,806,4.094,807,3.381,808,3.381,809,3.381,810,3.381,811,3.381,812,3.381,813,3.381,814,3.381,815,3.381,816,3.381,817,3.381,818,3.381,1104,3.381,1106,3.381,1107,3.381,1108,3.381,1145,2.375,1229,3.381,1230,3.919,1231,3.919,1232,3.919,1233,3.919,1234,3.919,1235,3.919,1236,3.919,1237,3.919,1238,5.301,1239,5.301,1240,3.919,1241,3.919,1242,3.919,1243,5.301,1244,3.919,1245,3.919,1246,3.919,1247,3.919,1248,3.919,1249,3.919,1250,3.919,1251,3.919,1252,3.919,1253,3.919,1254,3.919,1255,3.919,1256,3.919]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1098,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":1227,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["0.30.3",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1099,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":405,"title":{},"body":{"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1223,"title":{},"body":{"overview.html":{}}}],["16).tostring(16",{"_index":816,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["16.0.3",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1224,"title":{},"body":{"overview.html":{}}}],["2.3.1",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":822,"title":{},"body":{"controllers/UploaderController.html":{}}}],["25",{"_index":919,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["3.0.1",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1225,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1221,"title":{},"body":{"overview.html":{}}}],["6",{"_index":1222,"title":{},"body":{"overview.html":{}}}],["6.3.0",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["_filters",{"_index":400,"title":{},"body":{"classes/BaseController.html":{}}}],["_filters[key",{"_index":406,"title":{},"body":{"classes/BaseController.html":{}}}],["abstract",{"_index":368,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{}}}],["accesstoken",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["account",{"_index":860,"title":{},"body":{"entities/User.html":{}}}],["address",{"_index":861,"title":{},"body":{"entities/User.html":{}}}],["admin",{"_index":1158,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["already",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":1198,"title":{},"body":{"index.html":{}}}],["api",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["api/user/profiles",{"_index":990,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["api/users",{"_index":1021,"title":{},"body":{"controllers/UsersController.html":{}}}],["apierrorresponse",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["apierrorresponse(res",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":708,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["apiproperty()@isstring",{"_index":706,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["apisuccessresponse",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["apisuccessresponse(res",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["app",{"_index":1178,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appconfig",{"_index":673,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["appconfig().jwtexpires",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appconfig().jwtrefreshsecret",{"_index":680,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["appconfig().jwtsecret",{"_index":689,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1172,"title":{},"body":{"index.html":{}}}],["appmode",{"_index":366,"title":{},"body":{"classes/BaseController.html":{},"miscellaneous/enumerations.html":{}}}],["appmode.development",{"_index":423,"title":{},"body":{"classes/BaseController.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argon2",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["argon2.hash(data",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2.hash(userdetails.password",{"_index":1083,"title":{},"body":{"injectables/UsersService.html":{}}}],["argon2.verify",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["args",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":596,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{}}}],["array(4",{"_index":812,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(data",{"_index":414,"title":{},"body":{"classes/BaseController.html":{}}}],["assigned",{"_index":649,"title":{},"body":{"entities/File.html":{},"entities/User.html":{}}}],["async",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserPetsController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":660,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth/jwt",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"controllers/UserPetsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["auth/local",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["authcontroller",{"_index":81,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":661,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":662,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{}}}],["authguard('local",{"_index":691,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1207,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":871,"title":{},"body":{"entities/User.html":{}}}],["authservice",{"_index":165,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1219,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":606,"title":{},"body":{"classes/CreateUserProfileDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserProfile.html":{}}}],["await",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":1199,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('password",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('passwords",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('user",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["base/basecontroller",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{}}}],["base/basedto",{"_index":542,"title":{},"body":{"interfaces/ControllerInterface.html":{},"classes/CreateUserProfileDto.html":{},"interfaces/ServiceInterface.html":{},"classes/UpdateUserProfileDto.html":{}}}],["base/baseentity",{"_index":525,"title":{},"body":{"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"interfaces/ServiceInterface.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["base/baseservice",{"_index":960,"title":{},"body":{"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["basecontroller",{"_index":86,"title":{"classes/BaseController.html":{}},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["basecontroller:19",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["basecontroller:27",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["basecontroller:45",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["basecontroller:61",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["basecontroller:76",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["basecontroller:90",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["basedto",{"_index":425,"title":{"classes/BaseDto.html":{}},"body":{"classes/BaseDto.html":{},"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateUserProfileDto.html":{},"interfaces/ServiceInterface.html":{},"classes/UpdateUserProfileDto.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["baseentity",{"_index":427,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseService.html":{},"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"interfaces/ServiceInterface.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{},"coverage.html":{}}}],["baseservice",{"_index":452,"title":{"classes/BaseService.html":{}},"body":{"classes/BaseService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["baseservice:15",{"_index":952,"title":{},"body":{"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["baseservice:31",{"_index":956,"title":{},"body":{"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["baseservice:32",{"_index":1078,"title":{},"body":{"injectables/UsersService.html":{}}}],["baseservice:44",{"_index":957,"title":{},"body":{"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["baseservice:58",{"_index":958,"title":{},"body":{"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["baseservice:71",{"_index":955,"title":{},"body":{"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["baseservice:77",{"_index":954,"title":{},"body":{"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["basicresponseinterface",{"_index":139,"title":{"interfaces/BasicResponseInterface.html":{}},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BasicResponseInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["between",{"_index":357,"title":{},"body":{"classes/BaseController.html":{}}}],["bigint",{"_index":443,"title":{},"body":{"classes/BaseEntity.html":{}}}],["birthdate",{"_index":581,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["birthday",{"_index":886,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["body",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":615,"title":{},"body":{"classes/CreateUserProfileDto.html":{},"guards/RoleGuard.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserProfile.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":582,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"entities/UserPet.html":{}}}],["breeding",{"_index":583,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"entities/UserPet.html":{}}}],["browse",{"_index":1217,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1215,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1167,"title":{},"body":{"index.html":{}}}],["callback",{"_index":807,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["callback(null",{"_index":817,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["canactivate",{"_index":716,"title":{},"body":{"guards/RoleGuard.html":{}}}],["canactivate(context",{"_index":721,"title":{},"body":{"guards/RoleGuard.html":{}}}],["catch",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["check",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":21,"title":{"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"classes/ValidUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"entities/Competition.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":349,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"classes/ValidUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_uploadermodule",{"_index":827,"title":{},"body":{"modules/UploaderModule.html":{},"overview.html":{}}}],["cluster_uploadermodule_providers",{"_index":828,"title":{},"body":{"modules/UploaderModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1064,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1065,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1066,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["color",{"_index":584,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"entities/UserPet.html":{}}}],["column",{"_index":448,"title":{},"body":{"classes/BaseEntity.html":{},"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["column('enum",{"_index":873,"title":{},"body":{"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["column({default",{"_index":979,"title":{},"body":{"entities/UserProfile.html":{}}}],["column({nullable",{"_index":522,"title":{},"body":{"entities/Competition.html":{},"entities/Event.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["column({type",{"_index":519,"title":{},"body":{"entities/Competition.html":{},"entities/Event.html":{}}}],["column({unique",{"_index":858,"title":{},"body":{"entities/User.html":{}}}],["comment",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{}}}],["competition",{"_index":514,"title":{"entities/Competition.html":{}},"body":{"entities/Competition.html":{},"modules/EventsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["competitions",{"_index":526,"title":{},"body":{"entities/Competition.html":{}}}],["config/jwt.config",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{}}}],["config/typeorm.config",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('app_mode",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('db_host",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('db_name",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('db_password",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('db_port",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('db_username",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmpassword",{"_index":568,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{}}}],["console.log('leca",{"_index":841,"title":{},"body":{"injectables/UploaderService.html":{}}}],["console.log(file.originalname",{"_index":845,"title":{},"body":{"injectables/UploaderService.html":{}}}],["console.log(user",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"guards/RoleGuard.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants/appmode",{"_index":367,"title":{},"body":{"classes/BaseController.html":{}}}],["constants/gender",{"_index":603,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["constants/role",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["constructor",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectrepository(file",{"_index":840,"title":{},"body":{"injectables/UploaderService.html":{}}}],["constructor(@injectrepository(userpet",{"_index":961,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["constructor(@injectrepository(userprofile",{"_index":1012,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["constructor(authservice",{"_index":693,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(filerepository",{"_index":834,"title":{},"body":{"injectables/UploaderService.html":{}}}],["constructor(petrepository",{"_index":948,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{}}}],["constructor(reflector",{"_index":718,"title":{},"body":{"guards/RoleGuard.html":{}}}],["constructor(repository",{"_index":463,"title":{},"body":{"classes/BaseService.html":{}}}],["constructor(userprofilerepository",{"_index":1006,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["constructor(userrepository",{"_index":1075,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["context",{"_index":724,"title":{},"body":{"guards/RoleGuard.html":{}}}],["context.gethandler",{"_index":734,"title":{},"body":{"guards/RoleGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":735,"title":{},"body":{"guards/RoleGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('api/user/profiles",{"_index":997,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["controller('api/users",{"_index":1050,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('auth",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('pets",{"_index":931,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["controller('uploader",{"_index":819,"title":{},"body":{"controllers/UploaderController.html":{}}}],["controller/auth/auth.controller",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/uploader/uploader.controller",{"_index":830,"title":{},"body":{"modules/UploaderModule.html":{}}}],["controller/user",{"_index":1070,"title":{},"body":{"modules/UsersModule.html":{}}}],["controller/users/users.controller",{"_index":1068,"title":{},"body":{"modules/UsersModule.html":{}}}],["controllerinterface",{"_index":527,"title":{"interfaces/ControllerInterface.html":{}},"body":{"interfaces/ControllerInterface.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":1094,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":456,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(createdto",{"_index":466,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UsersService.html":{}}}],["create(createpetdto",{"_index":951,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["create(profiledata",{"_index":1009,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["create(req",{"_index":531,"title":{},"body":{"interfaces/ControllerInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["createat",{"_index":430,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createcompetitiondto",{"_index":543,"title":{"classes/CreateCompetitionDto.html":{}},"body":{"classes/CreateCompetitionDto.html":{},"classes/UpdateCompetitionDto.html":{},"coverage.html":{}}}],["createdatecolumn",{"_index":449,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createdatecolumn({type",{"_index":434,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createdto",{"_index":468,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createeventdto",{"_index":549,"title":{"classes/CreateEventDto.html":{}},"body":{"classes/CreateEventDto.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["createfiles",{"_index":833,"title":{},"body":{"injectables/UploaderService.html":{}}}],["createfiles(files",{"_index":837,"title":{},"body":{"injectables/UploaderService.html":{}}}],["createpetdto",{"_index":953,"title":{},"body":{"injectables/UserPetsService.html":{},"controllers/UsersController.html":{}}}],["createpetdto.images",{"_index":966,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["createpetdto.images?.length",{"_index":965,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["createpetdto.user",{"_index":967,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["createuserdto",{"_index":566,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserpet",{"_index":1022,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserpet(req",{"_index":1027,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserpetdto",{"_index":572,"title":{"classes/CreateUserPetDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["createuserprofile",{"_index":1023,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserprofile(req",{"_index":1030,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserprofiledto",{"_index":574,"title":{"classes/CreateUserProfileDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["current_timestamp",{"_index":436,"title":{},"body":{"classes/BaseEntity.html":{}}}],["data",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["data.filter(boolean",{"_index":416,"title":{},"body":{"classes/BaseController.html":{}}}],["data].filter(boolean",{"_index":417,"title":{},"body":{"classes/BaseController.html":{}}}],["database",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":433,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["datetime",{"_index":435,"title":{},"body":{"classes/BaseEntity.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseEntity.html":{},"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"classes/RefreshTokenDto.html":{},"controllers/UploaderController.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["decorators/roles.decorator",{"_index":930,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"classes/BaseEntity.html":{},"entities/Event.html":{},"controllers/UploaderController.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{}}}],["delete",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":944,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@roles(role.worker",{"_index":916,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["deletedat",{"_index":431,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deletedatecolumn",{"_index":451,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deletedatecolumn({type",{"_index":438,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deleteonebyid",{"_index":457,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteonebyid(id",{"_index":469,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["deleteonebyid(req",{"_index":533,"title":{},"body":{"interfaces/ControllerInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["deleteresult",{"_index":483,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletesoftonebyid",{"_index":458,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["deletesoftonebyid(id",{"_index":471,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["denied",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":517,"title":{},"body":{"entities/Competition.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":824,"title":{},"body":{"controllers/UploaderController.html":{}}}],["development",{"_index":1151,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["disable",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{}}}],["diskstorage",{"_index":801,"title":{},"body":{"controllers/UploaderController.html":{}}}],["documentation",{"_index":1095,"title":{},"body":{"coverage.html":{}}}],["dog",{"_index":888,"title":{},"body":{"entities/UserPet.html":{}}}],["dotenv",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["dtos/loginuser.dto",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dtos/signup.dto",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dtos/user.dto",{"_index":1044,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/userpet.dto",{"_index":929,"title":{},"body":{"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UsersController.html":{}}}],["dtos/userprofile.dto",{"_index":996,"title":{},"body":{"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{}}}],["e2e",{"_index":1187,"title":{},"body":{"index.html":{}}}],["editfilename",{"_index":806,"title":{},"body":{"controllers/UploaderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["efficient",{"_index":1168,"title":{},"body":{"index.html":{}}}],["email",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/ValidUserDto.html":{}}}],["entities",{"_index":515,"title":{},"body":{"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities.push(fileentity",{"_index":854,"title":{},"body":{"injectables/UploaderService.html":{}}}],["entity",{"_index":513,"title":{"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}},"body":{"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{},"coverage.html":{}}}],["enum",{"_index":874,"title":{},"body":{"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["enumerations",{"_index":1146,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eq",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["equal",{"_index":358,"title":{},"body":{"classes/BaseController.html":{}}}],["equal(value",{"_index":377,"title":{},"body":{"classes/BaseController.html":{}}}],["err",{"_index":826,"title":{},"body":{"controllers/UploaderController.html":{}}}],["error",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["error?.detail",{"_index":420,"title":{},"body":{"classes/BaseController.html":{}}}],["error?.message",{"_index":421,"title":{},"body":{"classes/BaseController.html":{}}}],["eslint",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{}}}],["eslint/ban",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{}}}],["event",{"_index":621,"title":{"entities/Event.html":{}},"body":{"entities/Event.html":{},"modules/EventsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventregistration",{"_index":906,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["eventregistration.user",{"_index":907,"title":{},"body":{"entities/UserPet.html":{}}}],["eventregistration.userprofile",{"_index":987,"title":{},"body":{"entities/UserProfile.html":{}}}],["eventregistrations",{"_index":908,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["events",{"_index":632,"title":{},"body":{"entities/Event.html":{}}}],["eventsmodule",{"_index":41,"title":{"modules/EventsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["exclude",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["executioncontext",{"_index":722,"title":{},"body":{"guards/RoleGuard.html":{}}}],["exist",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/ControllerInterface.html":{},"injectables/JwtRefreshStrategy.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["extends",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"entities/Competition.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["extractjwt",{"_index":669,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":676,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["false",{"_index":501,"title":{},"body":{"classes/BaseService.html":{},"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["female",{"_index":1154,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{"entities/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.filename",{"_index":853,"title":{},"body":{"injectables/UploaderService.html":{}}}],["file.mimetype",{"_index":851,"title":{},"body":{"injectables/UploaderService.html":{}}}],["file.originalname",{"_index":847,"title":{},"body":{"injectables/UploaderService.html":{}}}],["file.originalname.split('.').at",{"_index":810,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["file.originalname.split('.')[0",{"_index":808,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["file.path",{"_index":849,"title":{},"body":{"injectables/UploaderService.html":{}}}],["file.pet",{"_index":905,"title":{},"body":{"entities/UserPet.html":{}}}],["file.pet)@joincolumn",{"_index":893,"title":{},"body":{"entities/UserPet.html":{}}}],["file.userprofile",{"_index":971,"title":{},"body":{"entities/UserProfile.html":{}}}],["fileentity",{"_index":844,"title":{},"body":{"injectables/UploaderService.html":{}}}],["fileentity.filename",{"_index":852,"title":{},"body":{"injectables/UploaderService.html":{}}}],["fileentity.mimetype",{"_index":850,"title":{},"body":{"injectables/UploaderService.html":{}}}],["fileentity.orginalname",{"_index":846,"title":{},"body":{"injectables/UploaderService.html":{}}}],["fileentity.path",{"_index":848,"title":{},"body":{"injectables/UploaderService.html":{}}}],["fileextname",{"_index":809,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":638,"title":{},"body":{"entities/File.html":{},"controllers/UploaderController.html":{}}}],["filerepository",{"_index":836,"title":{},"body":{"injectables/UploaderService.html":{}}}],["files",{"_index":657,"title":{},"body":{"entities/File.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{}}}],["files.foreach(file",{"_index":843,"title":{},"body":{"injectables/UploaderService.html":{}}}],["filesinterceptor",{"_index":799,"title":{},"body":{"controllers/UploaderController.html":{}}}],["fill(null",{"_index":813,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":401,"title":{},"body":{"classes/BaseController.html":{}}}],["filters",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["findall",{"_index":459,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["findall(params",{"_index":473,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["findoneby",{"_index":460,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["findoneby(params",{"_index":476,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["findonebyid",{"_index":461,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":478,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["findoptionsrelationbystring",{"_index":488,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UsersService.html":{}}}],["findoptionsrelations",{"_index":489,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UsersService.html":{}}}],["findoptionsselect",{"_index":487,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UsersService.html":{}}}],["findoptionsselectbystring",{"_index":486,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UsersService.html":{}}}],["findoptionswhere",{"_index":485,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UsersService.html":{}}}],["first",{"_index":977,"title":{},"body":{"entities/UserProfile.html":{}}}],["firstname",{"_index":607,"title":{},"body":{"classes/CreateUserProfileDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserProfile.html":{},"classes/ValidUserDto.html":{}}}],["forbiddenexception",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('access",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":1166,"title":{},"body":{"index.html":{}}}],["function",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1160,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":585,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{},"miscellaneous/enumerations.html":{}}}],["gender.male",{"_index":903,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["get(':id",{"_index":920,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@roles(role.worker",{"_index":1035,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id/pets",{"_index":1038,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id/profiles",{"_index":1041,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('authorization",{"_index":681,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["get('logout",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('refresh",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["getall",{"_index":529,"title":{},"body":{"interfaces/ControllerInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["getall(req",{"_index":535,"title":{},"body":{"interfaces/ControllerInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["getbasicdataforresponse",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["getbasicdataforresponse(req",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getonebyid",{"_index":530,"title":{},"body":{"interfaces/ControllerInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["getonebyid(req",{"_index":538,"title":{},"body":{"interfaces/ControllerInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["getting",{"_index":1162,"title":{"index.html":{}},"body":{}}],["gettokens",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettokens(userdata",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserpets",{"_index":1024,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserpets(req",{"_index":1037,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserprofiles",{"_index":1025,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserprofiles(req",{"_index":1040,"title":{},"body":{"controllers/UsersController.html":{}}}],["graph",{"_index":1218,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1194,"title":{},"body":{"index.html":{}}}],["gt",{"_index":383,"title":{},"body":{"classes/BaseController.html":{}}}],["gte",{"_index":386,"title":{},"body":{"classes/BaseController.html":{}}}],["guard",{"_index":712,"title":{"guards/RoleGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard/jwt",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["guard/local",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["guard/role/role.guard",{"_index":1048,"title":{},"body":{"controllers/UsersController.html":{}}}],["guards",{"_index":714,"title":{},"body":{"guards/RoleGuard.html":{}}}],["gwngwenewn1jf981jnv29en",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashdata",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashdata(data",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashedrefreshtoken",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":1204,"title":{},"body":{"index.html":{}}}],["host",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":1211,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["httpstatus.bad_request",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["httpstatus.ok",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["id",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{}}}],["identifier",{"_index":1096,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{}}}],["ignoreexpiration",{"_index":677,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["images",{"_index":586,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"entities/UserPet.html":{},"injectables/UserPetsService.html":{}}}],["implements",{"_index":454,"title":{},"body":{"classes/BaseService.html":{},"guards/RoleGuard.html":{},"controllers/UsersController.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["incorrect",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{}}}],["inherited",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":75,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":76,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":839,"title":{},"body":{"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(user",{"_index":1080,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":1175,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1177,"title":{},"body":{"index.html":{}}}],["interface",{"_index":510,"title":{"interfaces/BasicResponseInterface.html":{},"interfaces/ControllerInterface.html":{},"interfaces/PaginationInterface.html":{},"interfaces/ServiceInterface.html":{}},"body":{"interfaces/BasicResponseInterface.html":{},"interfaces/ControllerInterface.html":{},"interfaces/PaginationInterface.html":{},"interfaces/ServiceInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":511,"title":{},"body":{"interfaces/BasicResponseInterface.html":{},"interfaces/ControllerInterface.html":{},"interfaces/PaginationInterface.html":{},"interfaces/ServiceInterface.html":{},"overview.html":{}}}],["interfaces/controller.interface",{"_index":1047,"title":{},"body":{"controllers/UsersController.html":{}}}],["interfaces/service.interface",{"_index":492,"title":{},"body":{"classes/BaseService.html":{},"injectables/UsersService.html":{}}}],["ip",{"_index":373,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BasicResponseInterface.html":{}}}],["isglobal",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["isnull",{"_index":359,"title":{},"body":{"classes/BaseController.html":{}}}],["isprimary",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserProfileDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserProfile.html":{},"injectables/UsersService.html":{}}}],["isstring",{"_index":710,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["item",{"_index":505,"title":{},"body":{"classes/BaseService.html":{}}}],["join",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"controllers/UploaderController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["join(__dirname",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["joincolumn",{"_index":656,"title":{},"body":{"entities/File.html":{},"entities/UserPet.html":{}}}],["jointable",{"_index":878,"title":{},"body":{"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["json.stringify(files",{"_index":842,"title":{},"body":{"injectables/UploaderService.html":{}}}],["jwt",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":167,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UserPetsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtconfig",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":675,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync(jwtconfig",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleasyncoptions",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtrefreshauthguard",{"_index":171,"title":{"injectables/JwtRefreshAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshAuthGuard.html":{},"coverage.html":{}}}],["jwtrefreshstrategy",{"_index":215,"title":{"injectables/JwtRefreshStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtservice",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":216,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1208,"title":{},"body":{"index.html":{}}}],["key",{"_index":399,"title":{},"body":{"classes/BaseController.html":{}}}],["last",{"_index":983,"title":{},"body":{"entities/UserProfile.html":{}}}],["lastname",{"_index":608,"title":{},"body":{"classes/CreateUserProfileDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserProfile.html":{},"classes/ValidUserDto.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["lessthan",{"_index":360,"title":{},"body":{"classes/BaseController.html":{}}}],["lessthan(value",{"_index":391,"title":{},"body":{"classes/BaseController.html":{}}}],["lessthanorequal",{"_index":361,"title":{},"body":{"classes/BaseController.html":{}}}],["lessthanorequal(value",{"_index":394,"title":{},"body":{"classes/BaseController.html":{}}}],["license",{"_index":1214,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1191,"title":{},"body":{"index.html":{}}}],["like(value.replaceall",{"_index":379,"title":{},"body":{"classes/BaseController.html":{}}}],["limit",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/ControllerInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["line",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{}}}],["list",{"_index":866,"title":{},"body":{"entities/User.html":{}}}],["literal",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["local",{"_index":697,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":158,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":217,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["locationcity",{"_index":551,"title":{},"body":{"classes/CreateEventDto.html":{},"entities/Event.html":{},"classes/UpdateEventDto.html":{}}}],["locationcountry",{"_index":552,"title":{},"body":{"classes/CreateEventDto.html":{},"entities/Event.html":{},"classes/UpdateEventDto.html":{}}}],["locationdescription",{"_index":553,"title":{},"body":{"classes/CreateEventDto.html":{},"entities/Event.html":{},"classes/UpdateEventDto.html":{}}}],["locationnumber",{"_index":554,"title":{},"body":{"classes/CreateEventDto.html":{},"entities/Event.html":{},"classes/UpdateEventDto.html":{}}}],["locationpostalcode",{"_index":555,"title":{},"body":{"classes/CreateEventDto.html":{},"entities/Event.html":{},"classes/UpdateEventDto.html":{}}}],["locationstreet",{"_index":556,"title":{},"body":{"classes/CreateEventDto.html":{},"entities/Event.html":{},"classes/UpdateEventDto.html":{}}}],["login",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginuser",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginuserdto",{"_index":104,"title":{"classes/LoginUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["logout",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(@req",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(userid",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["lt",{"_index":389,"title":{},"body":{"classes/BaseController.html":{}}}],["lte",{"_index":392,"title":{},"body":{"classes/BaseController.html":{}}}],["main",{"_index":981,"title":{},"body":{"entities/UserProfile.html":{}}}],["male",{"_index":1155,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manytoone",{"_index":654,"title":{},"body":{"entities/File.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["manytoone(undefined",{"_index":646,"title":{},"body":{"entities/File.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["map",{"_index":814,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matchroles",{"_index":717,"title":{},"body":{"guards/RoleGuard.html":{}}}],["matchroles(roles",{"_index":726,"title":{},"body":{"guards/RoleGuard.html":{}}}],["math.round(math.random",{"_index":815,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":369,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BasicResponseInterface.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mimetype",{"_index":639,"title":{},"body":{"entities/File.html":{}}}],["miscellaneous",{"_index":1145,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1190,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1181,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/events/events.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/uploader/uploader.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1203,"title":{},"body":{"index.html":{}}}],["morethan",{"_index":362,"title":{},"body":{"classes/BaseController.html":{}}}],["morethan(value",{"_index":385,"title":{},"body":{"classes/BaseController.html":{}}}],["morethanorequal",{"_index":363,"title":{},"body":{"classes/BaseController.html":{}}}],["morethanorequal(value",{"_index":388,"title":{},"body":{"classes/BaseController.html":{}}}],["multer",{"_index":802,"title":{},"body":{"controllers/UploaderController.html":{}}}],["mysql",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql2",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":1209,"title":{},"body":{"index.html":{}}}],["name",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserPetDto.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserPetDto.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nbetween",{"_index":380,"title":{},"body":{"classes/BaseController.html":{}}}],["neq",{"_index":376,"title":{},"body":{"classes/BaseController.html":{}}}],["nest",{"_index":1173,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1213,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"modules/EventsModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/common/decorators",{"_index":1045,"title":{},"body":{"controllers/UsersController.html":{}}}],["nestjs/config",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":730,"title":{},"body":{"guards/RoleGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":800,"title":{},"body":{"controllers/UploaderController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":709,"title":{},"body":{"classes/RefreshTokenDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UploaderService.html":{},"coverage.html":{}}}],["newpet",{"_index":963,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["newpet.images.push(...createpetdto.images.map(id",{"_index":968,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["newuser",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["newuser.avatar",{"_index":1017,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["newuser.id",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.password",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["newuser.profiles.push(await",{"_index":1085,"title":{},"body":{"injectables/UsersService.html":{}}}],["next",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{}}}],["ngt",{"_index":384,"title":{},"body":{"classes/BaseController.html":{}}}],["ngte",{"_index":387,"title":{},"body":{"classes/BaseController.html":{}}}],["nickname",{"_index":609,"title":{},"body":{"classes/CreateUserProfileDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserProfile.html":{}}}],["nisnull",{"_index":395,"title":{},"body":{"classes/BaseController.html":{}}}],["nlike",{"_index":378,"title":{},"body":{"classes/BaseController.html":{}}}],["nlt",{"_index":390,"title":{},"body":{"classes/BaseController.html":{}}}],["nlte",{"_index":393,"title":{},"body":{"classes/BaseController.html":{}}}],["node.js",{"_index":1165,"title":{},"body":{"index.html":{}}}],["not(types[type",{"_index":397,"title":{},"body":{"classes/BaseController.html":{}}}],["null",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseEntity.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{}}}],["nullable",{"_index":440,"title":{},"body":{"classes/BaseEntity.html":{},"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["number",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateUserPetDto.html":{},"interfaces/PaginationInterface.html":{},"interfaces/ServiceInterface.html":{},"classes/UpdateUserPetDto.html":{},"controllers/UploaderController.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["object.entries(filters",{"_index":402,"title":{},"body":{"classes/BaseController.html":{}}}],["object.keys(value).length",{"_index":404,"title":{},"body":{"classes/BaseController.html":{}}}],["observable",{"_index":725,"title":{},"body":{"guards/RoleGuard.html":{}}}],["onetomany",{"_index":877,"title":{},"body":{"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["onetomany(undefined",{"_index":863,"title":{},"body":{"entities/User.html":{},"entities/UserPet.html":{}}}],["onetoone",{"_index":655,"title":{},"body":{"entities/File.html":{},"entities/UserProfile.html":{}}}],["onetoone(undefined",{"_index":650,"title":{},"body":{"entities/File.html":{},"entities/UserProfile.html":{}}}],["open",{"_index":1192,"title":{},"body":{"index.html":{}}}],["optional",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options/findoptionsrelations",{"_index":491,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UsersService.html":{}}}],["options/findoptionsselect",{"_index":748,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["options/findoptionswhere",{"_index":747,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["orginal",{"_index":644,"title":{},"body":{"entities/File.html":{}}}],["orginalname",{"_index":640,"title":{},"body":{"entities/File.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":1220,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":900,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["package",{"_index":1122,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/ControllerInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["pagination",{"_index":493,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["paginationfragment",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["paginationfragment(limit",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["paginationinterface",{"_index":146,"title":{"interfaces/PaginationInterface.html":{}},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/PaginationInterface.html":{},"interfaces/ServiceInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["paging",{"_index":494,"title":{},"body":{"classes/BaseService.html":{}}}],["param",{"_index":925,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":938,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":475,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["params.id",{"_index":503,"title":{},"body":{"classes/BaseService.html":{}}}],["params.pagination",{"_index":495,"title":{},"body":{"classes/BaseService.html":{}}}],["params.relations",{"_index":497,"title":{},"body":{"classes/BaseService.html":{}}}],["params.select",{"_index":499,"title":{},"body":{"classes/BaseService.html":{}}}],["params.where",{"_index":498,"title":{},"body":{"classes/BaseService.html":{}}}],["parseintpipe",{"_index":926,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["passport",{"_index":671,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/UserPet.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportnumber",{"_index":587,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"entities/UserPet.html":{}}}],["passportstrategy",{"_index":672,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":688,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":678,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["password",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/ValidUserDto.html":{},"miscellaneous/variables.html":{}}}],["passwordmatches",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordsmatch",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["patch",{"_index":927,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":942,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["patch(':id')@roles(role.worker",{"_index":922,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["path",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"entities/File.html":{}}}],["payload",{"_index":412,"title":{},"body":{"classes/BaseController.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.dev",{"_index":424,"title":{},"body":{"classes/BaseController.html":{}}}],["payload.error",{"_index":419,"title":{},"body":{"classes/BaseController.html":{}}}],["payload.items",{"_index":415,"title":{},"body":{"classes/BaseController.html":{}}}],["personality",{"_index":588,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"entities/UserPet.html":{}}}],["pet",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"entities/File.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserPetsController.html":{},"controllers/UsersController.html":{}}}],["pet.user",{"_index":882,"title":{},"body":{"entities/User.html":{}}}],["pet.user)@jointable",{"_index":864,"title":{},"body":{"entities/User.html":{}}}],["petrepository",{"_index":950,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["pets",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"entities/File.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{}}}],["pets.controller",{"_index":1072,"title":{},"body":{"modules/UsersModule.html":{}}}],["pets.controller.ts",{"_index":911,"title":{},"body":{"controllers/UserPetsController.html":{},"coverage.html":{}}}],["pets.controller.ts:109",{"_index":917,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["pets.controller.ts:33",{"_index":918,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["pets.controller.ts:55",{"_index":921,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["pets.controller.ts:73",{"_index":915,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["pets.controller.ts:89",{"_index":923,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["pets.service",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserPetsController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["pets.service.ts",{"_index":947,"title":{},"body":{"injectables/UserPetsService.html":{},"coverage.html":{}}}],["pets.service.ts:10",{"_index":949,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["pets/user",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["petservice",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserPetsController.html":{},"controllers/UsersController.html":{}}}],["player",{"_index":974,"title":{},"body":{"entities/UserProfile.html":{}}}],["please",{"_index":1201,"title":{},"body":{"index.html":{}}}],["polska",{"_index":625,"title":{},"body":{"entities/Event.html":{}}}],["port",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["post(':id/pets",{"_index":1028,"title":{},"body":{"controllers/UsersController.html":{}}}],["post(':id/profiles",{"_index":1031,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('login",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload",{"_index":820,"title":{},"body":{"controllers/UploaderController.html":{}}}],["post('upload')@useinterceptors(undefined",{"_index":795,"title":{},"body":{"controllers/UploaderController.html":{}}}],["post()@roles(role.worker",{"_index":912,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["prefix",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":447,"title":{},"body":{"classes/BaseEntity.html":{}}}],["primarygeneratedcolumn({type",{"_index":442,"title":{},"body":{"classes/BaseEntity.html":{}}}],["private",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":365,"title":{},"body":{"classes/BaseController.html":{}}}],["process.env.app_mode",{"_index":422,"title":{},"body":{"classes/BaseController.html":{}}}],["process.env.jwt_secret",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1152,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["profile",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"entities/File.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"entities/UserProfile.html":{}}}],["profile.user",{"_index":883,"title":{},"body":{"entities/User.html":{}}}],["profile.user)@jointable",{"_index":867,"title":{},"body":{"entities/User.html":{}}}],["profiledata",{"_index":1010,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["profiledata.avatar",{"_index":1016,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["profiledata?.user",{"_index":1015,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["profiles",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["profiles.controller",{"_index":1071,"title":{},"body":{"modules/UsersModule.html":{}}}],["profiles.controller.ts",{"_index":989,"title":{},"body":{"controllers/UserProfilesController.html":{},"coverage.html":{}}}],["profiles.controller.ts:18",{"_index":993,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["profiles.controller.ts:39",{"_index":994,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["profiles.controller.ts:57",{"_index":991,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["profiles.controller.ts:73",{"_index":995,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["profiles.controller.ts:93",{"_index":992,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["profiles.service",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["profiles.service.ts",{"_index":1005,"title":{},"body":{"injectables/UserProfilesService.html":{},"coverage.html":{}}}],["profiles.service.ts:11",{"_index":1007,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["profiles/user",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["progressive",{"_index":1164,"title":{},"body":{"index.html":{}}}],["project",{"_index":1193,"title":{},"body":{"index.html":{}}}],["promise",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["properties",{"_index":429,"title":{"properties.html":{}},"body":{"classes/BaseEntity.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"entities/File.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{},"classes/ValidUserDto.html":{},"properties.html":{}}}],["protected",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":857,"title":{},"body":{"entities/User.html":{}}}],["q",{"_index":536,"title":{},"body":{"interfaces/ControllerInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["query",{"_index":928,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["query('limit",{"_index":932,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["query('page",{"_index":933,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["query('q",{"_index":934,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["randomname",{"_index":811,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["randomname}.${fileextname",{"_index":818,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["rank",{"_index":876,"title":{},"body":{"entities/User.html":{}}}],["ranks.admin",{"_index":1053,"title":{},"body":{"controllers/UsersController.html":{}}}],["ranks.super_admin",{"_index":1054,"title":{},"body":{"controllers/UsersController.html":{}}}],["ranks.user",{"_index":1055,"title":{},"body":{"controllers/UsersController.html":{}}}],["read",{"_index":1202,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":719,"title":{},"body":{"guards/RoleGuard.html":{}}}],["refresh",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"entities/User.html":{},"coverage.html":{}}}],["refresh.strategy",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["refresh.strategy.ts",{"_index":664,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"coverage.html":{}}}],["refresh.strategy.ts:12",{"_index":666,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["refresh.strategy.ts:22",{"_index":668,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["refresh_token",{"_index":705,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["refreshtoken",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"entities/User.html":{}}}],["refreshtokendto",{"_index":703,"title":{"classes/RefreshTokenDto.html":{}},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["refreshtokenmatches",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtokens",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshtokens(@req",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokens(req",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokens(userid",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["regulationurl",{"_index":518,"title":{},"body":{"entities/Competition.html":{},"classes/CreateCompetitionDto.html":{},"classes/UpdateCompetitionDto.html":{}}}],["relations",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["replace('bearer",{"_index":682,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["repository",{"_index":464,"title":{},"body":{"classes/BaseService.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/ControllerInterface.html":{},"injectables/JwtRefreshStrategy.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["req.baseurl",{"_index":372,"title":{},"body":{"classes/BaseController.html":{}}}],["req.ip",{"_index":374,"title":{},"body":{"classes/BaseController.html":{}}}],["req.method",{"_index":370,"title":{},"body":{"classes/BaseController.html":{}}}],["req.user.id",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user.refreshtoken",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["req?.user",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/ControllerInterface.html":{},"injectables/JwtRefreshStrategy.html":{},"guards/RoleGuard.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["request.user",{"_index":736,"title":{},"body":{"guards/RoleGuard.html":{}}}],["required",{"_index":658,"title":{},"body":{"entities/File.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["res",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/ControllerInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["res.status(status).json(payload",{"_index":418,"title":{},"body":{"classes/BaseController.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolvefilters",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["resolvefilters(filters",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["resolvefiltertype",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["resolvefiltertype(type",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["response",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/ControllerInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"guards/RoleGuard.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["role.admin",{"_index":913,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["role.super_admin",{"_index":914,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["role.user",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["roleguard",{"_index":713,"title":{"guards/RoleGuard.html":{}},"body":{"guards/RoleGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["roles",{"_index":729,"title":{},"body":{"guards/RoleGuard.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(ranks.worker",{"_index":1052,"title":{},"body":{"controllers/UsersController.html":{}}}],["roles(role.worker",{"_index":940,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["roles.some((role",{"_index":732,"title":{},"body":{"guards/RoleGuard.html":{}}}],["rootpath",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":1179,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":731,"title":{},"body":{"guards/RoleGuard.html":{},"dependencies.html":{}}}],["s",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["same",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":1169,"title":{},"body":{"index.html":{}}}],["secret",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":679,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["select",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"entities/User.html":{}}}],["server",{"_index":1170,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["service/auth/auth.service",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["service/uploader/uploader.service",{"_index":804,"title":{},"body":{"controllers/UploaderController.html":{},"modules/UploaderModule.html":{}}}],["service/user",{"_index":924,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["service/users/users.service",{"_index":1049,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["serviceinterface",{"_index":455,"title":{"interfaces/ServiceInterface.html":{}},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["setmetadata('roles",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":1171,"title":{},"body":{"index.html":{}}}],["signin",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin(userdata",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signup",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(req",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(signupdto",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdata",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["signupdto",{"_index":120,"title":{"classes/SignupDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignupDto.html":{},"coverage.html":{}}}],["signupdto.confirmpassword",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.email",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.password",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.pet",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.profile",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.username",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["skip",{"_index":410,"title":{},"body":{"classes/BaseController.html":{},"interfaces/PaginationInterface.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{},"index.html":{}}}],["sponsors",{"_index":1196,"title":{},"body":{"index.html":{}}}],["src/.../appmode.ts",{"_index":1147,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../gender.ts",{"_index":1148,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../jwt.config.ts",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt.ts",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1161,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role.ts",{"_index":1149,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../roles.decorator.ts",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../typeorm.config.ts",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../uploader.controller.ts",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":77,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["src/base/basecontroller",{"_index":1046,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/base/basecontroller.ts",{"_index":350,"title":{},"body":{"classes/BaseController.html":{},"coverage.html":{}}}],["src/base/basecontroller.ts:19",{"_index":353,"title":{},"body":{"classes/BaseController.html":{}}}],["src/base/basecontroller.ts:27",{"_index":356,"title":{},"body":{"classes/BaseController.html":{}}}],["src/base/basecontroller.ts:45",{"_index":355,"title":{},"body":{"classes/BaseController.html":{}}}],["src/base/basecontroller.ts:61",{"_index":354,"title":{},"body":{"classes/BaseController.html":{}}}],["src/base/basecontroller.ts:76",{"_index":352,"title":{},"body":{"classes/BaseController.html":{}}}],["src/base/basecontroller.ts:90",{"_index":351,"title":{},"body":{"classes/BaseController.html":{}}}],["src/base/basedto",{"_index":1079,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/base/basedto.ts",{"_index":426,"title":{},"body":{"classes/BaseDto.html":{},"coverage.html":{}}}],["src/base/baseentity.ts",{"_index":428,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/base/baseentity.ts:11",{"_index":446,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/base/baseentity.ts:14",{"_index":441,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/base/baseentity.ts:5",{"_index":444,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/base/baseentity.ts:8",{"_index":437,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/base/baseservice.ts",{"_index":453,"title":{},"body":{"classes/BaseService.html":{},"coverage.html":{}}}],["src/base/baseservice.ts:13",{"_index":465,"title":{},"body":{"classes/BaseService.html":{}}}],["src/base/baseservice.ts:15",{"_index":474,"title":{},"body":{"classes/BaseService.html":{}}}],["src/base/baseservice.ts:31",{"_index":477,"title":{},"body":{"classes/BaseService.html":{}}}],["src/base/baseservice.ts:44",{"_index":479,"title":{},"body":{"classes/BaseService.html":{}}}],["src/base/baseservice.ts:58",{"_index":482,"title":{},"body":{"classes/BaseService.html":{}}}],["src/base/baseservice.ts:64",{"_index":467,"title":{},"body":{"classes/BaseService.html":{}}}],["src/base/baseservice.ts:71",{"_index":472,"title":{},"body":{"classes/BaseService.html":{}}}],["src/base/baseservice.ts:77",{"_index":470,"title":{},"body":{"classes/BaseService.html":{}}}],["src/config/app.config",{"_index":674,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/jwt.config.ts",{"_index":1104,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/typeorm.config.ts",{"_index":1106,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/appmode.ts",{"_index":1150,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/constants/gender.ts",{"_index":1153,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/constants/jwt",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/constants/jwt.ts",{"_index":1107,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/role.ts",{"_index":1156,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/decorators/roles.decorator.ts",{"_index":1108,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guard/jwt",{"_index":659,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"controllers/UserPetsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/guard/local",{"_index":690,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/guard/role/role.guard.ts",{"_index":715,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/guard/role/role.guard.ts:12",{"_index":723,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/guard/role/role.guard.ts:6",{"_index":720,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/guard/role/role.guard.ts:8",{"_index":728,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/interfaces/basicresponse.interface.ts",{"_index":512,"title":{},"body":{"interfaces/BasicResponseInterface.html":{},"coverage.html":{}}}],["src/interfaces/controller.interface.ts",{"_index":528,"title":{},"body":{"interfaces/ControllerInterface.html":{},"coverage.html":{}}}],["src/interfaces/controller.interface.ts:15",{"_index":541,"title":{},"body":{"interfaces/ControllerInterface.html":{}}}],["src/interfaces/controller.interface.ts:22",{"_index":532,"title":{},"body":{"interfaces/ControllerInterface.html":{}}}],["src/interfaces/controller.interface.ts:24",{"_index":534,"title":{},"body":{"interfaces/ControllerInterface.html":{}}}],["src/interfaces/controller.interface.ts:5",{"_index":539,"title":{},"body":{"interfaces/ControllerInterface.html":{}}}],["src/interfaces/controller.interface.ts:7",{"_index":537,"title":{},"body":{"interfaces/ControllerInterface.html":{}}}],["src/interfaces/pagination.interface.ts",{"_index":702,"title":{},"body":{"interfaces/PaginationInterface.html":{},"coverage.html":{}}}],["src/interfaces/service.interface.ts",{"_index":739,"title":{},"body":{"interfaces/ServiceInterface.html":{},"coverage.html":{}}}],["src/interfaces/service.interface.ts:15",{"_index":743,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["src/interfaces/service.interface.ts:23",{"_index":744,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["src/interfaces/service.interface.ts:29",{"_index":745,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["src/interfaces/service.interface.ts:34",{"_index":746,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["src/interfaces/service.interface.ts:36",{"_index":740,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["src/interfaces/service.interface.ts:38",{"_index":741,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["src/interfaces/service.interface.ts:39",{"_index":742,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["src/main.ts",{"_index":1113,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/controller/auth/auth.controller.ts",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/controller/auth/auth.controller.ts:22",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/controller/auth/auth.controller.ts:38",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/controller/auth/auth.controller.ts:53",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/controller/auth/auth.controller.ts:69",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/dtos/loginuser.dto.ts",{"_index":699,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/modules/auth/dtos/loginuser.dto.ts:2",{"_index":700,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/modules/auth/dtos/loginuser.dto.ts:3",{"_index":701,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/modules/auth/dtos/refreshtoken.dto.ts",{"_index":704,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["src/modules/auth/dtos/refreshtoken.dto.ts:7",{"_index":707,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["src/modules/auth/dtos/signup.dto.ts",{"_index":749,"title":{},"body":{"classes/SignupDto.html":{},"coverage.html":{}}}],["src/modules/auth/dtos/signup.dto.ts:10",{"_index":753,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dtos/signup.dto.ts:11",{"_index":754,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dtos/signup.dto.ts:5",{"_index":755,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dtos/signup.dto.ts:6",{"_index":751,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dtos/signup.dto.ts:7",{"_index":752,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dtos/signup.dto.ts:8",{"_index":750,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dtos/validuser.dto.ts",{"_index":1088,"title":{},"body":{"classes/ValidUserDto.html":{},"coverage.html":{}}}],["src/modules/auth/dtos/validuser.dto.ts:2",{"_index":1091,"title":{},"body":{"classes/ValidUserDto.html":{}}}],["src/modules/auth/dtos/validuser.dto.ts:3",{"_index":1089,"title":{},"body":{"classes/ValidUserDto.html":{}}}],["src/modules/auth/dtos/validuser.dto.ts:4",{"_index":1090,"title":{},"body":{"classes/ValidUserDto.html":{}}}],["src/modules/auth/dtos/validuser.dto.ts:5",{"_index":1092,"title":{},"body":{"classes/ValidUserDto.html":{}}}],["src/modules/auth/dtos/validuser.dto.ts:6",{"_index":1093,"title":{},"body":{"classes/ValidUserDto.html":{}}}],["src/modules/auth/service/auth/auth.service.ts",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/service/auth/auth.service.ts:139",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth/auth.service.ts:16",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth/auth.service.ts:25",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth/auth.service.ts:29",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth/auth.service.ts:36",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth/auth.service.ts:54",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth/auth.service.ts:71",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth/auth.service.ts:98",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/strategy/jwt",{"_index":663,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategy/jwt.strategy.ts",{"_index":684,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategy/jwt.strategy.ts:17",{"_index":687,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/strategy/jwt.strategy.ts:8",{"_index":685,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/strategy/local.strategy.ts",{"_index":692,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategy/local.strategy.ts:14",{"_index":696,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/modules/auth/strategy/local.strategy.ts:7",{"_index":694,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/modules/events/dtos/competition.dto.ts",{"_index":544,"title":{},"body":{"classes/CreateCompetitionDto.html":{},"classes/UpdateCompetitionDto.html":{},"coverage.html":{}}}],["src/modules/events/dtos/competition.dto.ts:10",{"_index":758,"title":{},"body":{"classes/UpdateCompetitionDto.html":{}}}],["src/modules/events/dtos/competition.dto.ts:11",{"_index":760,"title":{},"body":{"classes/UpdateCompetitionDto.html":{}}}],["src/modules/events/dtos/competition.dto.ts:2",{"_index":546,"title":{},"body":{"classes/CreateCompetitionDto.html":{}}}],["src/modules/events/dtos/competition.dto.ts:4",{"_index":545,"title":{},"body":{"classes/CreateCompetitionDto.html":{}}}],["src/modules/events/dtos/competition.dto.ts:5",{"_index":547,"title":{},"body":{"classes/CreateCompetitionDto.html":{}}}],["src/modules/events/dtos/competition.dto.ts:9",{"_index":759,"title":{},"body":{"classes/UpdateCompetitionDto.html":{}}}],["src/modules/events/dtos/event.dto.ts",{"_index":550,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["src/modules/events/dtos/event.dto.ts:10",{"_index":560,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:14",{"_index":768,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:15",{"_index":762,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:16",{"_index":766,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:17",{"_index":767,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:18",{"_index":765,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:19",{"_index":761,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:2",{"_index":564,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:20",{"_index":763,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:21",{"_index":764,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:3",{"_index":558,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:4",{"_index":562,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:5",{"_index":563,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:6",{"_index":561,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:8",{"_index":557,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:9",{"_index":559,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/modules/events/events.module.ts",{"_index":633,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/modules/uploader/controller/uploader/uploader.controller.ts",{"_index":791,"title":{},"body":{"controllers/UploaderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/uploader/controller/uploader/uploader.controller.ts:32",{"_index":796,"title":{},"body":{"controllers/UploaderController.html":{}}}],["src/modules/uploader/service/uploader/uploader.service.ts",{"_index":832,"title":{},"body":{"injectables/UploaderService.html":{},"coverage.html":{}}}],["src/modules/uploader/service/uploader/uploader.service.ts:10",{"_index":838,"title":{},"body":{"injectables/UploaderService.html":{}}}],["src/modules/uploader/service/uploader/uploader.service.ts:7",{"_index":835,"title":{},"body":{"injectables/UploaderService.html":{}}}],["src/modules/uploader/uploader.module.ts",{"_index":829,"title":{},"body":{"modules/UploaderModule.html":{}}}],["src/modules/users/controller/user",{"_index":910,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"coverage.html":{}}}],["src/modules/users/controller/users/users.controller.ts",{"_index":1020,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/controller/users/users.controller.ts:111",{"_index":1043,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controller/users/users.controller.ts:131",{"_index":1033,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controller/users/users.controller.ts:149",{"_index":1042,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controller/users/users.controller.ts:165",{"_index":1032,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controller/users/users.controller.ts:181",{"_index":1039,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controller/users/users.controller.ts:197",{"_index":1029,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controller/users/users.controller.ts:50",{"_index":1034,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controller/users/users.controller.ts:72",{"_index":1036,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controller/users/users.controller.ts:90",{"_index":1026,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/dtos/user.dto.ts",{"_index":567,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/user.dto.ts:11",{"_index":575,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:12",{"_index":573,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:16",{"_index":769,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:6",{"_index":570,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:7",{"_index":571,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:8",{"_index":569,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:9",{"_index":576,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts",{"_index":580,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:10",{"_index":594,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:11",{"_index":600,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:12",{"_index":590,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:13",{"_index":602,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:14",{"_index":592,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:15",{"_index":595,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:17",{"_index":597,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:18",{"_index":601,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:22",{"_index":777,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:23",{"_index":778,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:25",{"_index":771,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:26",{"_index":773,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:27",{"_index":774,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:28",{"_index":779,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:29",{"_index":770,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:30",{"_index":781,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:31",{"_index":772,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:32",{"_index":775,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:34",{"_index":776,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:35",{"_index":780,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:5",{"_index":598,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:6",{"_index":599,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:8",{"_index":591,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:9",{"_index":593,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts",{"_index":605,"title":{},"body":{"classes/CreateUserProfileDto.html":{},"classes/UpdateUserProfileDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:10",{"_index":612,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:11",{"_index":616,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:12",{"_index":611,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:14",{"_index":619,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:15",{"_index":610,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:19",{"_index":785,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:20",{"_index":788,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:21",{"_index":789,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:22",{"_index":786,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:23",{"_index":784,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:24",{"_index":783,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:25",{"_index":787,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:27",{"_index":782,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:5",{"_index":613,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:6",{"_index":617,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:8",{"_index":618,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:9",{"_index":614,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/service/user",{"_index":946,"title":{},"body":{"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"coverage.html":{}}}],["src/modules/users/service/users/users.service.ts",{"_index":1074,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/service/users/users.service.ts:24",{"_index":1076,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.module.ts",{"_index":1067,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/typeorm/entities/competition",{"_index":635,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/typeorm/entities/competition.ts",{"_index":516,"title":{},"body":{"entities/Competition.html":{},"coverage.html":{}}}],["src/typeorm/entities/competition.ts:10",{"_index":521,"title":{},"body":{"entities/Competition.html":{}}}],["src/typeorm/entities/competition.ts:13",{"_index":524,"title":{},"body":{"entities/Competition.html":{}}}],["src/typeorm/entities/competition.ts:7",{"_index":523,"title":{},"body":{"entities/Competition.html":{}}}],["src/typeorm/entities/event",{"_index":634,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/typeorm/entities/event.ts",{"_index":622,"title":{},"body":{"entities/Event.html":{},"coverage.html":{}}}],["src/typeorm/entities/event.ts:10",{"_index":623,"title":{},"body":{"entities/Event.html":{}}}],["src/typeorm/entities/event.ts:13",{"_index":626,"title":{},"body":{"entities/Event.html":{}}}],["src/typeorm/entities/event.ts:16",{"_index":624,"title":{},"body":{"entities/Event.html":{}}}],["src/typeorm/entities/event.ts:19",{"_index":629,"title":{},"body":{"entities/Event.html":{}}}],["src/typeorm/entities/event.ts:22",{"_index":630,"title":{},"body":{"entities/Event.html":{}}}],["src/typeorm/entities/event.ts:25",{"_index":628,"title":{},"body":{"entities/Event.html":{}}}],["src/typeorm/entities/event.ts:28",{"_index":627,"title":{},"body":{"entities/Event.html":{}}}],["src/typeorm/entities/event.ts:7",{"_index":631,"title":{},"body":{"entities/Event.html":{}}}],["src/typeorm/entities/file.ts",{"_index":637,"title":{},"body":{"entities/File.html":{},"coverage.html":{}}}],["src/typeorm/entities/file.ts:14",{"_index":643,"title":{},"body":{"entities/File.html":{}}}],["src/typeorm/entities/file.ts:22",{"_index":645,"title":{},"body":{"entities/File.html":{}}}],["src/typeorm/entities/file.ts:30",{"_index":641,"title":{},"body":{"entities/File.html":{}}}],["src/typeorm/entities/file.ts:38",{"_index":642,"title":{},"body":{"entities/File.html":{}}}],["src/typeorm/entities/file.ts:47",{"_index":653,"title":{},"body":{"entities/File.html":{}}}],["src/typeorm/entities/file.ts:55",{"_index":648,"title":{},"body":{"entities/File.html":{}}}],["src/typeorm/entities/user",{"_index":1069,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/typeorm/entities/user.ts",{"_index":856,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/typeorm/entities/user.ts:17",{"_index":859,"title":{},"body":{"entities/User.html":{}}}],["src/typeorm/entities/user.ts:25",{"_index":862,"title":{},"body":{"entities/User.html":{}}}],["src/typeorm/entities/user.ts:33",{"_index":875,"title":{},"body":{"entities/User.html":{}}}],["src/typeorm/entities/user.ts:42",{"_index":865,"title":{},"body":{"entities/User.html":{}}}],["src/typeorm/entities/user.ts:51",{"_index":868,"title":{},"body":{"entities/User.html":{}}}],["src/typeorm/entities/user.ts:60",{"_index":870,"title":{},"body":{"entities/User.html":{}}}],["src/typeorm/entities/userpet",{"_index":959,"title":{},"body":{"injectables/UserPetsService.html":{},"modules/UsersModule.html":{}}}],["src/typeorm/entities/userpet.ts",{"_index":884,"title":{},"body":{"entities/UserPet.html":{},"coverage.html":{}}}],["src/typeorm/entities/userpet.ts:105",{"_index":894,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:15",{"_index":895,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:23",{"_index":896,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:31",{"_index":887,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:39",{"_index":901,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:47",{"_index":890,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:55",{"_index":889,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:63",{"_index":897,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:71",{"_index":892,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:79",{"_index":891,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:87",{"_index":885,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:96",{"_index":899,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userprofile",{"_index":1011,"title":{},"body":{"injectables/UserProfilesService.html":{},"modules/UsersModule.html":{}}}],["src/typeorm/entities/userprofile.ts",{"_index":970,"title":{},"body":{"entities/UserProfile.html":{},"coverage.html":{}}}],["src/typeorm/entities/userprofile.ts:15",{"_index":976,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:23",{"_index":982,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:31",{"_index":984,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:39",{"_index":978,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:47",{"_index":975,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:55",{"_index":973,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:63",{"_index":980,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:72",{"_index":985,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:80",{"_index":972,"title":{},"body":{"entities/UserProfile.html":{}}}],["start",{"_index":409,"title":{},"body":{"classes/BaseController.html":{},"index.html":{}}}],["start:dev",{"_index":1182,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1183,"title":{},"body":{"index.html":{}}}],["started",{"_index":1163,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1174,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BasicResponseInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":1205,"title":{},"body":{"index.html":{}}}],["storage",{"_index":823,"title":{},"body":{"controllers/UploaderController.html":{}}}],["strategy",{"_index":670,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy/jwt",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"classes/ValidUserDto.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["super(petrepository",{"_index":962,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["super(userprofilerepository",{"_index":1013,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["super(userrepository",{"_index":1081,"title":{},"body":{"injectables/UsersService.html":{}}}],["super_admin",{"_index":1159,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":1197,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1216,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":411,"title":{},"body":{"classes/BaseController.html":{},"interfaces/PaginationInterface.html":{}}}],["test",{"_index":1186,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1189,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1188,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1185,"title":{},"body":{"index.html":{}}}],["text",{"_index":520,"title":{},"body":{"entities/Competition.html":{},"entities/Event.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["thanks",{"_index":1195,"title":{},"body":{"index.html":{}}}],["this.apierrorresponse(res",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["this.apisuccessresponse(res",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.logout(req?.user?.id",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtokens",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(loginuser",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdata",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get('jwt_expires",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_refresh_expires",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_refresh_secret",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_secret",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.filerepository.save(entities",{"_index":855,"title":{},"body":{"injectables/UploaderService.html":{}}}],["this.getbasicdataforresponse(req",{"_index":413,"title":{},"body":{"classes/BaseController.html":{}}}],["this.gettokens",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.hashdata(refreshtoken",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.signasync(userdata",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.matchroles(roles",{"_index":737,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.paginationfragment(limit",{"_index":936,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["this.petrepository.create",{"_index":964,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["this.petrepository.save(newpet",{"_index":969,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["this.petservice.create",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["this.petservice.create(createdto",{"_index":941,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["this.petservice.deletesoftonebyid(id",{"_index":945,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["this.petservice.findall",{"_index":935,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UsersController.html":{}}}],["this.petservice.findonebyid(id",{"_index":939,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["this.petservice.updateonebyid",{"_index":943,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["this.reflector.get('roles",{"_index":733,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.repository.create(createdto",{"_index":506,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.delete",{"_index":509,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.find",{"_index":496,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.findone",{"_index":502,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.save(item",{"_index":507,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.softdelete",{"_index":508,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.update",{"_index":504,"title":{},"body":{"classes/BaseService.html":{}}}],["this.resolvefilters(q",{"_index":937,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["this.resolvefilters(value",{"_index":407,"title":{},"body":{"classes/BaseController.html":{}}}],["this.resolvefiltertype(key",{"_index":408,"title":{},"body":{"classes/BaseController.html":{}}}],["this.updaterefreshtoken(newuser.id",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.updaterefreshtoken(user.id",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uploaderservice.createfiles(files",{"_index":825,"title":{},"body":{"controllers/UploaderController.html":{}}}],["this.userprofilerepository.create",{"_index":1014,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["this.userprofilerepository.save(newuser",{"_index":1018,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["this.userprofileservice.create",{"_index":1063,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["this.userprofileservice.create(createdto",{"_index":1002,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["this.userprofileservice.deletesoftonebyid(id",{"_index":1004,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["this.userprofileservice.findall",{"_index":1000,"title":{},"body":{"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["this.userprofileservice.findonebyid(id",{"_index":1001,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["this.userprofileservice.updateonebyid",{"_index":1003,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["this.userprofilesservice.create",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.create",{"_index":1082,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(newuser",{"_index":1086,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.create(createdto",{"_index":1060,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.deletesoftonebyid(id",{"_index":1062,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findall",{"_index":1056,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findonebyid(id",{"_index":1057,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.updateonebyid",{"_index":1061,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.create",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findoneby",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateonebyid(userid",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["token",{"_index":872,"title":{},"body":{"entities/User.html":{}}}],["tokens",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tokens.refreshtoken",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":1206,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":879,"title":{},"body":{"entities/User.html":{},"dependencies.html":{}}}],["trim",{"_index":683,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["true",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["true})@exclude",{"_index":869,"title":{},"body":{"entities/User.html":{}}}],["true})@joincolumn",{"_index":652,"title":{},"body":{"entities/File.html":{}}}],["try",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["ts",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{}}}],["twitter",{"_index":1212,"title":{},"body":{"index.html":{}}}],["type",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.startswith('n",{"_index":396,"title":{},"body":{"classes/BaseController.html":{}}}],["typeof",{"_index":403,"title":{},"body":{"classes/BaseController.html":{}}}],["typeorm",{"_index":364,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"interfaces/ServiceInterface.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeorm/entities/file",{"_index":805,"title":{},"body":{"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{}}}],["typeorm/entities/user",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UsersController.html":{}}}],["typeorm/entities/userpet",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserPetsController.html":{},"controllers/UsersController.html":{}}}],["typeorm/entities/userprofile",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["typeorm/find",{"_index":490,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UsersService.html":{}}}],["typeormasyncconfig",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([event",{"_index":636,"title":{},"body":{"modules/EventsModule.html":{}}}],["typeormmodule.forfeature([file",{"_index":831,"title":{},"body":{"modules/UploaderModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1073,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync(typeormasyncconfig",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleasyncoptions",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":375,"title":{},"body":{"classes/BaseController.html":{}}}],["types[type",{"_index":398,"title":{},"body":{"classes/BaseController.html":{}}}],["typescript",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{},"index.html":{}}}],["unauthorizedexception",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":439,"title":{},"body":{"classes/BaseEntity.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["unique",{"_index":881,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":1184,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/UploaderService.html":{}}}],["unlicensed",{"_index":1228,"title":{},"body":{"properties.html":{}}}],["updatecompetitiondto",{"_index":548,"title":{"classes/UpdateCompetitionDto.html":{}},"body":{"classes/CreateCompetitionDto.html":{},"classes/UpdateCompetitionDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":432,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedatecolumn",{"_index":450,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedatecolumn({type",{"_index":445,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedto",{"_index":481,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateeventdto",{"_index":565,"title":{"classes/UpdateEventDto.html":{}},"body":{"classes/CreateEventDto.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["updateonebyid",{"_index":462,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateonebyid(id",{"_index":480,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["updateonebyid(req",{"_index":540,"title":{},"body":{"interfaces/ControllerInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["updaterefreshtoken",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["updaterefreshtoken(userid",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateresult",{"_index":484,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":579,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["updateuserpetdto",{"_index":604,"title":{"classes/UpdateUserPetDto.html":{}},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"coverage.html":{}}}],["updateuserprofiledto",{"_index":620,"title":{"classes/UpdateUserProfileDto.html":{}},"body":{"classes/CreateUserProfileDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UserProfilesController.html":{},"coverage.html":{}}}],["uploadedfiles",{"_index":797,"title":{},"body":{"controllers/UploaderController.html":{}}}],["uploader",{"_index":792,"title":{},"body":{"controllers/UploaderController.html":{}}}],["uploadercontroller",{"_index":790,"title":{"controllers/UploaderController.html":{}},"body":{"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"coverage.html":{}}}],["uploadermodule",{"_index":42,"title":{"modules/UploaderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UploaderModule.html":{},"modules.html":{},"overview.html":{}}}],["uploaderservice",{"_index":803,"title":{"injectables/UploaderService.html":{}},"body":{"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"coverage.html":{},"overview.html":{}}}],["uploadfile",{"_index":793,"title":{},"body":{"controllers/UploaderController.html":{}}}],["uploadfile(req",{"_index":794,"title":{},"body":{"controllers/UploaderController.html":{}}}],["uploads",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/UploaderController.html":{}}}],["url",{"_index":371,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BasicResponseInterface.html":{}}}],["usefactory",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserPetsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserPetsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get('logout",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshauthguard",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshauthguard)@get('refresh",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":798,"title":{},"body":{"controllers/UploaderController.html":{}}}],["useinterceptors(filesinterceptor('files",{"_index":821,"title":{},"body":{"controllers/UploaderController.html":{}}}],["user",{"_index":173,"title":{"entities/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/File.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"guards/RoleGuard.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.password",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.pets",{"_index":904,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["user.pets)@jointable",{"_index":898,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["user.refreshtoken",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":738,"title":{},"body":{"guards/RoleGuard.html":{}}}],["user_pets",{"_index":902,"title":{},"body":{"entities/UserPet.html":{}}}],["user_profiles",{"_index":986,"title":{},"body":{"entities/UserProfile.html":{}}}],["userdata",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.email",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.password",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdetails",{"_index":1058,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userdetails.password",{"_index":1059,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdetails.profile",{"_index":1084,"title":{},"body":{"injectables/UsersService.html":{}}}],["userid",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignupDto.html":{},"miscellaneous/variables.html":{}}}],["usernamefield",{"_index":698,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userpet",{"_index":277,"title":{"entities/UserPet.html":{}},"body":{"injectables/AuthService.html":{},"entities/File.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userpet.dto",{"_index":578,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["userpet.images",{"_index":647,"title":{},"body":{"entities/File.html":{}}}],["userpetscontroller",{"_index":909,"title":{"controllers/UserPetsController.html":{}},"body":{"controllers/UserPetsController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userpetsservice",{"_index":244,"title":{"injectables/UserPetsService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["userprofile",{"_index":279,"title":{"entities/UserProfile.html":{}},"body":{"injectables/AuthService.html":{},"entities/File.html":{},"entities/User.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofile.avatar",{"_index":651,"title":{},"body":{"entities/File.html":{}}}],["userprofile.dto",{"_index":577,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["userprofilerepository",{"_index":1008,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["userprofiles",{"_index":999,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["userprofilescontroller",{"_index":988,"title":{"controllers/UserProfilesController.html":{}},"body":{"controllers/UserProfilesController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userprofileservice",{"_index":998,"title":{},"body":{"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userprofilesservice",{"_index":242,"title":{"injectables/UserProfilesService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userrepository",{"_index":1077,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrole",{"_index":727,"title":{},"body":{"guards/RoleGuard.html":{}}}],["users",{"_index":880,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{}}}],["users/dtos/userpet.dto",{"_index":756,"title":{},"body":{"classes/SignupDto.html":{}}}],["users/dtos/userprofile.dto",{"_index":757,"title":{},"body":{"classes/SignupDto.html":{}}}],["users/service/user",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["users/service/users/users.service",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["users/users.module",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{}}}],["userscontroller",{"_index":1019,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":1051,"title":{},"body":{"controllers/UsersController.html":{}}}],["usersmodule",{"_index":43,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":241,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userwithemailexists",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":665,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":695,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":686,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(req",{"_index":667,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["validator",{"_index":711,"title":{},"body":{"classes/RefreshTokenDto.html":{},"dependencies.html":{}}}],["validuserdto",{"_index":1087,"title":{"classes/ValidUserDto.html":{}},"body":{"classes/ValidUserDto.html":{},"coverage.html":{}}}],["value",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.split('_')[0",{"_index":381,"title":{},"body":{"classes/BaseController.html":{}}}],["value.split('_')[1",{"_index":382,"title":{},"body":{"classes/BaseController.html":{}}}],["variable",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1229,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1226,"title":{},"body":{"properties.html":{}}}],["void",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["watch",{"_index":1180,"title":{},"body":{"index.html":{}}}],["website",{"_index":1210,"title":{},"body":{"index.html":{}}}],["weight",{"_index":589,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"entities/UserPet.html":{}}}],["where.username",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["withdeleted",{"_index":500,"title":{},"body":{"classes/BaseService.html":{}}}],["worker",{"_index":1157,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["world",{"_index":80,"title":{},"body":{"injectables/AppService.html":{}}}],["yarn",{"_index":1176,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":1200,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) { }\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\n\n\nUploaderModule\n\nUploaderModule\n\nAppModule -->\n\nUploaderModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            UploaderModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersModule } from './modules/users/users.module';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { EventsModule } from './modules/events/events.module';\nimport {ConfigModule} from \"@nestjs/config\";\nimport {typeOrmAsyncConfig} from \"./config/typeorm.config\";\nimport { UploaderModule } from './modules/uploader/uploader.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n\n@Module({\n  imports: [\n    // ServeStaticModule.forRoot({\n    //   rootPath: join(__dirname, '..', 'uploads'),\n    //   exclude: ['/api/(.*)'],\n    // }),\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRootAsync(typeOrmAsyncConfig),\n    UsersModule,\n    AuthModule,\n    EventsModule,\n    UploaderModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/controller/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n            \n                Extends\n            \n            \n                        BaseController\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    Async\n                                refreshTokens\n                            \n                            \n                                    \n                                    Async\n                                signup\n                            \n                            \n                                apiErrorResponse\n                            \n                            \n                                apiSuccessResponse\n                            \n                            \n                                    Protected\n                                getBasicDataForResponse\n                            \n                            \n                                paginationFragment\n                            \n                            \n                                resolveFilters\n                            \n                            \n                                    Protected\n                                resolveFilterType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: Request, res: Response, loginUser: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/controller/auth/auth.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loginUser\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('logout')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/controller/auth/auth.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshTokens(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshAuthGuard)@Get('refresh')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/controller/auth/auth.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(req: Request, res: Response, signupData: SignupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/controller/auth/auth.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    signupData\n                                    \n                                                SignupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiErrorResponse\n                        \n                    \n                \n            \n            \n                \napiErrorResponse(res: Response, req: Request, error: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.BAD_REQUEST\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiSuccessResponse\n                        \n                    \n                \n            \n            \n                \napiSuccessResponse(res: Response, req: Request, data: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.OK\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBasicDataForResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBasicDataForResponse(req: Request, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasicResponseInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginationFragment\n                        \n                    \n                \n            \n            \n                \npaginationFragment(limit: number | string, page: number | string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PaginationInterface | object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFilters\n                        \n                    \n                \n            \n            \n                \nresolveFilters(filters: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        resolveFilterType\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveFilterType(type: string, value)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'eq'\n                                    \n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { BaseController } from '../../../../base/BaseController';\nimport {Get, Res, UnauthorizedException} from '@nestjs/common';\nimport { LoginUserDto } from './../../dtos/LoginUser.dto';\nimport { LocalAuthGuard } from '../../../../guard/local-auth/local-auth.guard';\nimport { Controller, Post, Req, UseGuards, Body } from '@nestjs/common';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { JwtAuthGuard } from '../../../../guard/jwt-auth/jwt-auth.guard';\nimport { Request, Response } from 'express';\nimport {JwtRefreshAuthGuard} from \"../../../../guard/jwt-refresh-auth/jwt-refresh-auth.guard\";\nimport {User} from \"../../../../typeorm/entities/User\";\nimport {SignupDto} from \"../../dtos/Signup.dto\";\n\n@Controller('auth')\nexport class AuthController extends BaseController {\n\n    constructor(private authService: AuthService) {\n        super();\n    }\n\n    @UseGuards(JwtAuthGuard)\n    @Get('logout')\n    async logout(@Req() req: Request, @Res() res: Response) {\n        try {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            await this.authService.logout(req?.user?.id);\n\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            this.apiSuccessResponse(res, req, req?.user);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @UseGuards(LocalAuthGuard)\n    @Post('login')\n    async login(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Body() loginUser: LoginUserDto,\n    ) {\n        try {\n            const user: User = await this.authService.signIn(loginUser);\n\n            this.apiSuccessResponse(res, req, user);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Post('signup')\n    async signup(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Body() signupData: SignupDto,\n    ) {\n        try {\n            const user: User = await this.authService.signUp(signupData);\n\n            this.apiSuccessResponse(res, req, user);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @UseGuards(JwtRefreshAuthGuard)\n    @Get('refresh')\n    async refreshTokens(@Req() req: Request, @Res() res: Response) {\n        try {\n            const tokens: { accessToken: string; refreshToken: string } =\n                await this.authService.refreshTokens(\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    req.user.id,\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    req.user.refreshToken,\n                );\n\n            this.apiSuccessResponse(res, req, tokens);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshStrategy\n\nJwtRefreshStrategy\n\nAuthModule -->\n\nJwtRefreshStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtRefreshStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { UsersModule } from './../users/users.module';\nimport { Module } from '@nestjs/common';\nimport { AuthController } from './controller/auth/auth.controller';\nimport { AuthService } from './service/auth/auth.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { Jwt } from 'src/constants/Jwt';\nimport {LocalStrategy} from \"./strategy/local.strategy\";\nimport {JwtStrategy} from \"./strategy/jwt.strategy\";\nimport {JwtRefreshStrategy} from \"./strategy/jwt-refresh.strategy\";\nimport {jwtConfig} from \"../../config/jwt.config\";\n\n@Module({\n  imports: [UsersModule, PassportModule, JwtModule.registerAsync(jwtConfig)],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy, JwtRefreshStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/service/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                getTokens\n                            \n                            \n                                    Protected\n                                hashData\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                refreshTokens\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Protected\n                                    Async\n                                updateRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, userProfilesService: UserProfilesService, petService: UserPetsService, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/service/auth/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userProfilesService\n                                                  \n                                                        \n                                                                        UserProfilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        petService\n                                                  \n                                                        \n                                                                        UserPetsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        getTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokens(userData)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/service/auth/auth.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        hashData\n                        \n                    \n                \n            \n            \n                \n                    \n                    hashData(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/service/auth/auth.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/service/auth/auth.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshTokens(userId: number, refreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/service/auth/auth.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(userData: LoginUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/service/auth/auth.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signupDto: SignupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/service/auth/auth.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signupDto\n                                    \n                                                SignupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        updateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRefreshToken(userId: number, refreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/service/auth/auth.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UsersService } from './../../../users/service/users/users.service';\nimport {BadRequestException, ForbiddenException, Injectable} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport {User} from \"../../../../typeorm/entities/User\";\nimport {LoginUserDto} from \"../../dtos/LoginUser.dto\";\nimport * as argon2 from 'argon2';\nimport { ConfigService } from '@nestjs/config';\nimport {SignupDto} from \"../../dtos/Signup.dto\";\nimport {UserPetsService} from \"../../../users/service/user-pets/user-pets.service\";\nimport {UserProfilesService} from \"../../../users/service/user-profiles/user-profiles.service\";\nimport {Role} from \"../../../../constants/Role\";\nimport {UserPet} from \"../../../../typeorm/entities/UserPet\";\nimport {UserProfile} from \"../../../../typeorm/entities/UserProfile\";\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private usersService: UsersService,\n        private userProfilesService: UserProfilesService,\n        private petService: UserPetsService,\n        private jwtService: JwtService,\n        private configService: ConfigService,\n    ) {}\n\n    protected hashData(data: string) {\n        return argon2.hash(data);\n    }\n\n    protected async updateRefreshToken(userId: number, refreshToken: string) {\n        const hashedRefreshToken = await this.hashData(refreshToken);\n        await this.usersService.updateOneById(userId, {\n            refreshToken: hashedRefreshToken,\n        });\n    }\n\n    protected async getTokens(userData) {\n        const [accessToken, refreshToken] = await Promise.all([\n            this.jwtService.signAsync(userData, {\n                secret: this.configService.get('JWT_SECRET'),\n                expiresIn: this.configService.get('JWT_EXPIRES'),\n            }),\n            this.jwtService.signAsync(userData, {\n                secret: this.configService.get('JWT_REFRESH_SECRET'),\n                expiresIn: this.configService.get('JWT_REFRESH_EXPIRES'),\n            }),\n        ]);\n\n        return {\n            accessToken,\n            refreshToken,\n        };\n    }\n\n    async refreshTokens(userId: number, refreshToken: string) {\n        const user: User = await this.usersService.findOneById(userId, {});\n        console.log(user, refreshToken);\n        if (!user || !user.refreshToken)\n            throw new ForbiddenException('Access Denied');\n\n        const refreshTokenMatches = await argon2.verify(\n            user.refreshToken,\n            refreshToken,\n        );\n\n        if (!refreshTokenMatches) throw new ForbiddenException('Access Denied');\n        const tokens = await this.getTokens({ ...user });\n        await this.updateRefreshToken(user.id, tokens.refreshToken);\n        return tokens;\n    }\n\n    async signIn(userData: LoginUserDto) {\n        // Check if user exists\n        const user: User = await this.usersService.findOneBy({\n            where: { email: userData.email },\n            relations: ['pets', 'profiles'],\n            select: [\n                'id',\n                'email',\n                'password',\n                'password',\n                'refreshToken',\n            ],\n        });\n        if (!user) throw new BadRequestException('User does not exist');\n        const passwordMatches = await argon2.verify(\n            user.password,\n            userData.password,\n        );\n        if (!passwordMatches)\n            throw new BadRequestException('Password is incorrect');\n\n        delete user.password;\n        const tokens = await this.getTokens({ ...user });\n        await this.updateRefreshToken(user.id, tokens.refreshToken);\n        return { ...user, ...tokens };\n    }\n\n    async signUp(signupDto: SignupDto): Promise {\n        const passwordsMatch = signupDto.password === signupDto.confirmPassword\n\n        if (!passwordsMatch) {\n            throw new BadRequestException('Passwords are not the same');\n        }\n\n        // Check if user exists\n        const where: { email: string, username?: string } = {\n            email: signupDto.email,\n        }\n        if (signupDto.username) where.username = signupDto.username\n\n        const userWithEmailExists: User = await this.usersService.findOneBy({\n            where,\n        });\n\n        if (userWithEmailExists) {\n            throw new BadRequestException('User already exists');\n        }\n\n        const newUser: User = await this.usersService.create({\n            email: signupDto.email,\n            password: signupDto.password,\n            role: Role.USER,\n        });\n\n        const profile: UserProfile = await this.userProfilesService.create({ ...signupDto.profile, isPrimary: true, user: newUser.id })\n        const pet: UserPet = await this.petService.create({ ...signupDto.pet, user: newUser.id })\n\n        delete newUser.password;\n        const tokens = await this.getTokens({ ...newUser });\n        await this.updateRefreshToken(newUser.id, tokens.refreshToken);\n        return {\n            ...newUser,\n            profiles: [profile],\n            pets: [pet],\n            ...tokens\n        };\n    }\n\n    async logout(userId: number) {\n        return this.usersService.updateOneById(userId, { refreshToken: null });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseController.html":{"url":"classes/BaseController.html","title":"class - BaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/BaseController.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apiErrorResponse\n                            \n                            \n                                apiSuccessResponse\n                            \n                            \n                                    Protected\n                                getBasicDataForResponse\n                            \n                            \n                                paginationFragment\n                            \n                            \n                                resolveFilters\n                            \n                            \n                                    Protected\n                                resolveFilterType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apiErrorResponse\n                        \n                    \n                \n            \n            \n                \napiErrorResponse(res: Response, req: Request, error: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseController.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.BAD_REQUEST\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiSuccessResponse\n                        \n                    \n                \n            \n            \n                \napiSuccessResponse(res: Response, req: Request, data: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseController.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.OK\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBasicDataForResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBasicDataForResponse(req: Request, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseController.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasicResponseInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginationFragment\n                        \n                    \n                \n            \n            \n                \npaginationFragment(limit: number | string, page: number | string)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseController.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PaginationInterface | object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFilters\n                        \n                    \n                \n            \n            \n                \nresolveFilters(filters: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseController.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        resolveFilterType\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveFilterType(type: string, value)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseController.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'eq'\n                                    \n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport {\n  Between,\n  Equal,\n  IsNull,\n  LessThan,\n  LessThanOrEqual,\n  Like,\n  MoreThan,\n  MoreThanOrEqual,\n  Not,\n} from 'typeorm';\nimport * as process from 'process';\nimport { AppMode } from '../constants/AppMode';\n\nexport abstract class BaseController {\n\n  protected getBasicDataForResponse(req: Request, status: HttpStatus): BasicResponseInterface {\n    return {\n      method: req.method,\n      url: req.baseUrl,\n      ip: req.ip,\n      status,\n    };\n  }\n  protected resolveFilterType(type = 'eq', value) {\n    const types = {\n      ['eq' || 'neq']: Equal(value),\n      ['like' || 'nlike']: Like(value.replaceAll(':', '%')),\n      ['between' || 'nbetween']: Between(\n        value.split('_')[0],\n        value.split('_')[1],\n      ),\n      ['gt' || 'ngt']: MoreThan(value),\n      ['gte' || 'ngte']: MoreThanOrEqual(value),\n      ['lt' || 'nlt']: LessThan(value),\n      ['lte' || 'nlte']: LessThanOrEqual(value),\n      ['isNull' || 'nisNull']: IsNull(),\n    };\n\n    return type.startsWith('n') ? Not(types[type]) : types[type];\n  }\n\n  resolveFilters(filters: { [key: string]: any }) {\n    if (!filters) return {};\n\n    const _filters = {};\n    for (const filter of Object.entries(filters)) {\n      const [key, value] = filter;\n      if (typeof value === 'object' && Object.keys(value).length === 1) {\n        _filters[key] = this.resolveFilters(value);\n      } else {\n        return this.resolveFilterType(key, value);\n      }\n    }\n\n    return _filters;\n  }\n\n  paginationFragment(\n    limit: number | string = null,\n    page: number | string = null,\n  ): PaginationInterface | object {\n    if (limit !== null && page !== null) {\n      const start = (+page - 1) * +limit;\n      return {\n        skip: start,\n        take: limit,\n      };\n    }\n\n    return {};\n  }\n\n  apiSuccessResponse(\n    res: Response,\n    req: Request,\n    data: any,\n    status: HttpStatus = HttpStatus.OK,\n  ) {\n    const payload: any = this.getBasicDataForResponse(req, status);\n\n    if (Array.isArray(data)) payload.items = data.filter(Boolean);\n    else payload.items = [data].filter(Boolean);\n\n    res.status(status).json(payload);\n  }\n\n  apiErrorResponse(\n    res: Response,\n    req: Request,\n    error: any,\n    status: HttpStatus = HttpStatus.BAD_REQUEST,\n  ) {\n    const payload: any = this.getBasicDataForResponse(req, status);\n\n    payload.error =\n      error?.detail ||\n      error?.message ||\n      (typeof error === 'string' ? error : null);\n\n    if (process.env.APP_MODE === AppMode.DEVELOPMENT) {\n      payload.dev = error;\n    }\n\n    res.status(status).json(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseDto.html":{"url":"classes/BaseDto.html","title":"class - BaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/BaseDto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class BaseDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/BaseEntity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'datetime', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/BaseEntity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'datetime', default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/BaseEntity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/BaseEntity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'datetime', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/BaseEntity.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, DeleteDateColumn} from 'typeorm';\n\nexport abstract class BaseEntity {\n  @PrimaryGeneratedColumn({ type: 'bigint' })\n  id: number;\n\n  @CreateDateColumn({ type: 'datetime', default: () => 'CURRENT_TIMESTAMP' })\n  createAt: Date;\n\n  @UpdateDateColumn({ type: 'datetime', default: () => 'CURRENT_TIMESTAMP' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ type: 'datetime', default: null, nullable: true })\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/BaseService.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ServiceInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    Async\n                                deleteSoftOneById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneBy\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/base/BaseService.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createDto: any)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseService.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseService.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteSoftOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSoftOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseService.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseService.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneBy\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneBy(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseService.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number, params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseService.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneById(id: number, updateDto: BaseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseService.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                BaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Repository,\n    DeleteResult,\n    UpdateResult,\n    FindOptionsWhere,\n    FindOptionsSelectByString,\n    FindOptionsSelect\n} from 'typeorm';\nimport {FindOptionsRelationByString, FindOptionsRelations} from \"typeorm/find-options/FindOptionsRelations\";\nimport {BaseDto} from \"./BaseDto\";\nimport {ServiceInterface} from \"../interfaces/Service.interface\";\nimport {BaseEntity} from \"./BaseEntity\";\nexport class BaseService implements ServiceInterface {\n    constructor(private repository: Repository) {}\n    async findAll(params: {\n        pagination?: object | PaginationInterface,\n        relations?: FindOptionsRelations | FindOptionsRelationByString,\n        where?: FindOptionsWhere | FindOptionsWhere[],\n        select?: FindOptionsSelect | FindOptionsSelectByString,\n    }): Promise {\n        const paging = params.pagination ?? {}\n        return await this.repository.find({\n            ...paging,\n            relations: params.relations ?? [],\n            where: params.where ?? [],\n            select: params.select ?? [],\n            withDeleted: false,\n        });\n    }\n\n    async findOneBy(params: {\n        where: FindOptionsWhere | FindOptionsWhere[],\n        relations?: FindOptionsRelations | FindOptionsRelationByString,\n        select?: FindOptionsSelect | FindOptionsSelectByString,\n    }): Promise {\n        return await this.repository.findOne({\n            where: params.where ?? [],\n            relations: params.relations ?? [],\n            select: params.select ?? [],\n            withDeleted: false,\n        });\n    }\n\n    async findOneById(id: number, params: {\n        relations?: FindOptionsRelations | FindOptionsRelationByString,\n        select?: FindOptionsSelect | FindOptionsSelectByString,\n    }): Promise {\n        return await this.repository.findOne({\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            where: { id: params.id },\n            relations: params.relations ?? [],\n            select: params.select ?? [],\n            withDeleted: false,\n        });\n    }\n\n    async updateOneById(id: number, updateDto: BaseDto): Promise {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        return await this.repository.update({ id }, { ...updateDto });\n    }\n\n    async create(createDto: any): Promise {\n        const item = this.repository.create(createDto);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        return await this.repository.save(item);\n    }\n\n    async deleteSoftOneById(id: number): Promise {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        return await this.repository.softDelete({ id });\n    }\n\n    async deleteOneById(id: number): Promise {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        return await this.repository.delete({ id });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicResponseInterface.html":{"url":"interfaces/BasicResponseInterface.html","title":"interface - BasicResponseInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BasicResponseInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/BasicResponse.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ip\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface BasicResponseInterface {\n  method: string;\n  url: string;\n  ip: string;\n  status: number | string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Competition.html":{"url":"entities/Competition.html","title":"entity - Competition","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Competition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/typeorm/entities/Competition.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                regulationUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Competition.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Competition.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        regulationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Competition.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column } from 'typeorm';\nimport { BaseEntity } from '../../base/BaseEntity';\n\n@Entity({ name: 'competitions' })\nexport class Competition extends BaseEntity {\n    @Column({ nullable: false })\n    name: string;\n\n    @Column({ type: 'text', nullable: true })\n    description: string\n\n    @Column({ nullable: true })\n    regulationUrl: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControllerInterface.html":{"url":"interfaces/ControllerInterface.html","title":"interface - ControllerInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ControllerInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/Controller.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        deleteOneById\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getOneById\n                                    \n                                \n                                \n                                    \n                                        updateOneById\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(req: Request, res: Response, createDto: BaseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Controller.interface.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createDto\n                                    \n                                                BaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \ndeleteOneById(req: Request, res: Response, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Controller.interface.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(req: Request, res: Response, limit: number, page: number, q)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Controller.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    q\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOneById\n                        \n                    \n                \n            \n            \n                \ngetOneById(req: Request, res: Response, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Controller.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOneById\n                        \n                    \n                \n            \n            \n                \nupdateOneById(req: Request, res: Response, id: number, updateDto: BaseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Controller.interface.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                BaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Request, Response } from 'express';\nimport { BaseDto } from '../base/BaseDto';\n\nexport interface ControllerInterface {\n  getOneById(req: Request, res: Response, id: number): Promise;\n\n  getAll(\n    req: Request,\n    res: Response,\n    limit: number,\n    page: number,\n    q,\n  ): Promise;\n\n  updateOneById(\n    req: Request,\n    res: Response,\n    id: number,\n    updateDto: BaseDto,\n  ): Promise;\n\n  create(req: Request, res: Response, createDto: BaseDto): Promise;\n\n  deleteOneById(req: Request, res: Response, id: number): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompetitionDto.html":{"url":"classes/CreateCompetitionDto.html","title":"class - CreateCompetitionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompetitionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/events/dtos/Competition.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                regulationUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Competition.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Competition.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        regulationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Competition.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCompetitionDto {\n    name: string;\n    \n    description?: string\n    regulationUrl?: string\n}\n\nexport class UpdateCompetitionDto {\n    name?: string;\n    description?: string\n    regulationUrl?: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEventDto.html":{"url":"classes/CreateEventDto.html","title":"class - CreateEventDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEventDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/events/dtos/Event.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                locationCity\n                            \n                            \n                                    Optional\n                                locationCountry\n                            \n                            \n                                    Optional\n                                locationDescription\n                            \n                            \n                                locationNumber\n                            \n                            \n                                locationPostalCode\n                            \n                            \n                                locationStreet\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationCity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        locationCountry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        locationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationPostalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationStreet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateEventDto {\n    name: string;\n    locationCity: string\n    locationPostalCode: string\n    locationStreet: string\n    locationNumber: string\n\n    description?: string;\n    locationCountry?: string\n    locationDescription?: string\n}\n\nexport class UpdateEventDto {\n    name?: string;\n    locationCity?: string\n    locationPostalCode?: string\n    locationStreet?: string\n    locationNumber?: string\n    description?: string\n    locationCountry?: string\n    locationDescription?: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/User.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                confirmPassword\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                pet\n                            \n                            \n                                    Optional\n                                profile\n                            \n                            \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/User.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/User.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/User.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserPetDto | any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/User.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserProfileDto | any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/User.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/User.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserProfileDto } from \"./UserProfile.dto\";\nimport { CreateUserPetDto } from \"./UserPet.dto\";\nimport { Role } from \"../../../constants/Role\";\n\nexport class CreateUserDto {\n    email: string\n    password: string\n    confirmPassword?: string\n    role?: Role\n\n    profile?: CreateUserProfileDto | any\n    pet?: CreateUserPetDto | any\n}\n\nexport class UpdateUserDto {\n    email?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserPetDto.html":{"url":"classes/CreateUserPetDto.html","title":"class - CreateUserPetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserPetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/UserPet.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthDate\n                            \n                            \n                                    Optional\n                                breed\n                            \n                            \n                                    Optional\n                                breeding\n                            \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                gender\n                            \n                            \n                                    Optional\n                                images\n                            \n                            \n                                name\n                            \n                            \n                                passportNumber\n                            \n                            \n                                    Optional\n                                personality\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                    Optional\n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        breeding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array | any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passportNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        personality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Gender } from \"../../../constants/Gender\";\nimport { User } from \"../../../typeorm/entities/User\";\n\nexport class CreateUserPetDto {\n    name: string\n    passportNumber: string\n\n    breed?: string\n    color?: string\n    description?: string\n    personality?: string\n    birthDate?: Date\n    weight?: number\n    breeding?: string\n    gender?: Gender\n\n    images?: Array | any\n    user?: User | any\n}\n\nexport class UpdateUserPetDto {\n    name?: string\n    passportNumber?: string\n\n    breed?: string\n    color?: string\n    description?: string\n    personality?: string\n    birthDate?: Date\n    weight?: number\n    breeding?: string\n    gender?: Gender\n\n    images?: Array\n    user?: User | any\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserProfileDto.html":{"url":"classes/CreateUserProfileDto.html","title":"class - CreateUserProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/UserProfile.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                birthDate\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                firstName\n                            \n                            \n                                    Optional\n                                gender\n                            \n                            \n                                    Optional\n                                isPrimary\n                            \n                            \n                                lastName\n                            \n                            \n                                    Optional\n                                nickname\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         File | any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isPrimary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {BaseDto} from \"../../../base/BaseDto\";\nimport {User} from \"../../../typeorm/entities/User\";\n\nexport class CreateUserProfileDto extends BaseDto {\n    firstName: string\n    lastName: string\n\n    nickname?: string\n    gender?: string\n    description?: string\n    isPrimary?: boolean\n    birthDate?: Date\n\n    user?: User | any\n    avatar?: File | any\n}\n\nexport class UpdateUserProfileDto extends BaseDto {\n    firstName?: string\n    lastName?: string\n    nickname?: string\n    gender?: string\n    description?: string\n    birthDate?: Date\n    isPrimary?: boolean\n\n    avatar?: File | any\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Event.html":{"url":"entities/Event.html","title":"entity - Event","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Event\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/typeorm/entities/Event.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                locationCity\n                            \n                            \n                                    \n                                locationCountry\n                            \n                            \n                                    \n                                locationDescription\n                            \n                            \n                                    \n                                locationNumber\n                            \n                            \n                                    \n                                locationPostalCode\n                            \n                            \n                                    \n                                locationStreet\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Event.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locationCity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Event.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locationCountry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, default: 'Polska'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Event.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Event.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locationNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Event.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locationPostalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Event.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locationStreet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Event.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Event.ts:7\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column } from 'typeorm';\nimport { BaseEntity } from '../../base/BaseEntity';\n\n@Entity({ name: 'events' })\nexport class Event extends BaseEntity {\n    @Column({ nullable: false })\n    name: string;\n\n    @Column({ type: 'text', nullable: true })\n    description: string;\n\n    @Column({ nullable: true, default: 'Polska' })\n    locationCountry: string\n\n    @Column({ nullable: false })\n    locationCity: string\n\n    @Column({ nullable: false })\n    locationPostalCode: string\n\n    @Column({ nullable: false })\n    locationStreet: string\n\n    @Column({ nullable: true })\n    locationNumber: string\n\n    @Column({ type: 'text', nullable: true })\n    locationDescription: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/events/events.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Event } from 'src/typeorm/entities/Event';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Competition } from 'src/typeorm/entities/Competition';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Event, Competition])],\n  providers: [],\n  controllers: []\n})\nexport class EventsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/File.html":{"url":"entities/File.html","title":"entity - File","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/typeorm/entities/File.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                filename\n                            \n                            \n                                    \n                                mimetype\n                            \n                            \n                                    \n                                orginalName\n                            \n                            \n                                    \n                                path\n                            \n                            \n                                    \n                                pet\n                            \n                            \n                                    \n                                    \n                                userProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/File.ts:30\n                        \n                    \n\n            \n                \n                     Filename\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mimetype\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/File.ts:38\n                        \n                    \n\n            \n                \n                     File mimetype\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        orginalName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/File.ts:14\n                        \n                    \n\n            \n                \n                     Orginal file name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/File.ts:22\n                        \n                    \n\n            \n                \n                     Path to file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserPet\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userPet => userPet.images, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/File.ts:55\n                        \n                    \n\n            \n                \n                     Assigned file user user-user-pets\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, userProfile => userProfile.avatar, {nullable: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/File.ts:47\n                        \n                    \n\n            \n                \n                     Assigned file user profile\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import {Entity, Column, ManyToOne, OneToOne, JoinColumn} from 'typeorm';\nimport { BaseEntity } from '../../base/BaseEntity';\nimport {UserPet} from \"./UserPet\";\nimport {UserProfile} from \"./UserProfile\";\n\n@Entity({ name: 'files' })\nexport class File extends BaseEntity {\n    /**\n     *  Orginal file name\n     * @Required true\n     * @Type string\n     */\n    @Column()\n    orginalName: string;\n\n    /**\n     *  Path to file\n     * @Required true\n     * @Type string\n     */\n    @Column()\n    path: string;\n\n    /**\n     *  Filename\n     * @Required true\n     * @Type string\n     */\n    @Column()\n    filename: string;\n\n    /**\n     *  File mimetype\n     * @Required true\n     * @Type string\n     */\n    @Column()\n    mimetype: string;\n\n    /**\n     *  Assigned file user profile\n     * @Required false\n     * @Type UserProfile\n     */\n    @OneToOne(() => UserProfile, (userProfile) => userProfile.avatar, { nullable: true })\n    @JoinColumn()\n    userProfile: UserProfile\n\n    /**\n     *  Assigned file user user-user-pets\n     * @Required false\n     * @Type UserPet\n     */\n    @ManyToOne(() => UserPet, (userPet) => userPet.images, { nullable: true })\n    pet: UserPet\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guard/jwt-auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshAuthGuard.html":{"url":"injectables/JwtRefreshAuthGuard.html","title":"injectable - JwtRefreshAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guard/jwt-refresh-auth/jwt-refresh-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtRefreshAuthGuard extends AuthGuard('jwt-refresh') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshStrategy.html":{"url":"injectables/JwtRefreshStrategy.html","title":"injectable - JwtRefreshStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategy/jwt-refresh.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategy/jwt-refresh.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(req: Request, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategy/jwt-refresh.strategy.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport appConfig from 'src/config/app.config';\nimport { Request } from 'express';\nimport {UsersService} from \"../../users/service/users/users.service\";\n\n@Injectable()\nexport class JwtRefreshStrategy extends PassportStrategy(\n  Strategy,\n  'jwt-refresh',\n) {\n  constructor(private usersService: UsersService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      passReqToCallback: true,\n      secretOrKey: appConfig().jwtRefreshSecret,\n    });\n  }\n\n  async validate(req: Request, payload: any) {\n    const { email } = payload;\n    const user = await this.usersService.findOneBy({ where: { email } });\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    const refreshToken: string = req\n      .get('Authorization')\n      .replace('Bearer', '')\n      .trim();\n    return { ...user, refreshToken };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategy/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategy/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport appConfig from 'src/config/app.config';\nimport {UsersService} from \"../../users/service/users/users.service\";\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(private usersService: UsersService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: appConfig().jwtSecret,\n    });\n  }\n\n  async validate(payload: any) {\n    const { email } = payload;\n    const user = await this.usersService.findOneBy({ where: { email } });\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return { ...user };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guard/local-auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategy/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategy/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategy/local.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { AuthService } from '../service/auth/auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'email',\n    });\n  }\n\n  async validate(email: string, password: string): Promise {\n    if (!email || !password) {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/LoginUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/LoginUser.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/LoginUser.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginUserDto {\n    email: string\n    password: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationInterface.html":{"url":"interfaces/PaginationInterface.html","title":"interface - PaginationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/Pagination.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            skip\n                                        \n                                \n                                \n                                        \n                                            take\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        take\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        take:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface PaginationInterface {\n  skip: number;\n  take: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenDto.html":{"url":"classes/RefreshTokenDto.html","title":"class - RefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/RefreshToken.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                refresh_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refresh_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/RefreshToken.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class RefreshTokenDto {\n  @ApiProperty()\n  @IsString()\n  refresh_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guard/role/role.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                matchRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guard/role/role.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guard/role/role.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchRoles\n                        \n                    \n                \n            \n            \n                \nmatchRoles(roles: string[], userRole: string)\n                \n            \n\n\n            \n                \n                    Defined in src/guard/role/role.guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRole\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class RoleGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n  matchRoles(roles: string[], userRole: string) {\n    return roles.some((role) => role === userRole);\n  }\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const roles = this.reflector.get('roles', context.getHandler());\n\n    if (!roles) return true;\n\n    const request = context.switchToHttp().getRequest();\n\n    const user = request.user;\n    return this.matchRoles(roles, user.role);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceInterface.html":{"url":"interfaces/ServiceInterface.html","title":"interface - ServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/Service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        deleteOneById\n                                    \n                                \n                                \n                                    \n                                        deleteSoftOneById\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findOneBy\n                                    \n                                \n                                \n                                    \n                                        findOneById\n                                    \n                                \n                                \n                                    \n                                        updateOneById\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createDto: BaseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Service.interface.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDto\n                                    \n                                                BaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \ndeleteOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Service.interface.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSoftOneById\n                        \n                    \n                \n            \n            \n                \ndeleteSoftOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Service.interface.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Service.interface.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneBy\n                        \n                    \n                \n            \n            \n                \nfindOneBy(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Service.interface.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number, params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Service.interface.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOneById\n                        \n                    \n                \n            \n            \n                \nupdateOneById(id: number, updateDto: BaseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Service.interface.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                BaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BaseDto } from '../base/BaseDto';\nimport { FindOptionsWhere } from 'typeorm/find-options/FindOptionsWhere';\nimport { BaseEntity } from '../base/BaseEntity';\nimport {\n  FindOptionsSelect,\n  FindOptionsSelectByString,\n} from 'typeorm/find-options/FindOptionsSelect';\nimport {\n  FindOptionsRelationByString,\n  FindOptionsRelations,\n} from 'typeorm/find-options/FindOptionsRelations';\nimport { DeleteResult, UpdateResult } from 'typeorm';\n\nexport interface ServiceInterface {\n  findAll(params: {\n    pagination?: PaginationInterface | object,\n    relations?: FindOptionsRelations | FindOptionsRelationByString,\n    where?: FindOptionsWhere[] | FindOptionsWhere,\n    select?: FindOptionsSelect | FindOptionsSelectByString,\n  }): Promise;\n\n\n  findOneBy(params: {\n    where: FindOptionsWhere[] | FindOptionsWhere,\n    relations?: FindOptionsRelations | FindOptionsRelationByString,\n    select?: FindOptionsSelect | FindOptionsSelectByString,\n  }): Promise;\n\n  findOneById(id: number, params: {\n    relations?: FindOptionsRelations | FindOptionsRelationByString,\n    select?: FindOptionsSelect | FindOptionsSelectByString,\n  }): Promise;\n\n  updateOneById(id: number, updateDto: BaseDto): Promise;\n\n  create(createDto: BaseDto): Promise;\n\n  deleteOneById(id: number): Promise;\n  deleteSoftOneById(id: number): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignupDto.html":{"url":"classes/SignupDto.html","title":"class - SignupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/Signup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                confirmPassword\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                pet\n                            \n                            \n                                profile\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/Signup.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/Signup.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/Signup.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserPetDto\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/Signup.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserProfileDto\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/Signup.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/Signup.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserPetDto } from \"../../users/dtos/UserPet.dto\";\nimport { CreateUserProfileDto } from \"../../users/dtos/UserProfile.dto\";\n\nexport class SignupDto {\n    username?: string\n    email: string\n    password: string\n    confirmPassword?: string\n\n    pet: CreateUserPetDto\n    profile: CreateUserProfileDto\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompetitionDto.html":{"url":"classes/UpdateCompetitionDto.html","title":"class - UpdateCompetitionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompetitionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/events/dtos/Competition.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                regulationUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Competition.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Competition.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        regulationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Competition.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCompetitionDto {\n    name: string;\n    \n    description?: string\n    regulationUrl?: string\n}\n\nexport class UpdateCompetitionDto {\n    name?: string;\n    description?: string\n    regulationUrl?: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEventDto.html":{"url":"classes/UpdateEventDto.html","title":"class - UpdateEventDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEventDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/events/dtos/Event.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                locationCity\n                            \n                            \n                                    Optional\n                                locationCountry\n                            \n                            \n                                    Optional\n                                locationDescription\n                            \n                            \n                                    Optional\n                                locationNumber\n                            \n                            \n                                    Optional\n                                locationPostalCode\n                            \n                            \n                                    Optional\n                                locationStreet\n                            \n                            \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        locationCity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        locationCountry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        locationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        locationNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        locationPostalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        locationStreet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateEventDto {\n    name: string;\n    locationCity: string\n    locationPostalCode: string\n    locationStreet: string\n    locationNumber: string\n\n    description?: string;\n    locationCountry?: string\n    locationDescription?: string\n}\n\nexport class UpdateEventDto {\n    name?: string;\n    locationCity?: string\n    locationPostalCode?: string\n    locationStreet?: string\n    locationNumber?: string\n    description?: string\n    locationCountry?: string\n    locationDescription?: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/User.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/User.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserProfileDto } from \"./UserProfile.dto\";\nimport { CreateUserPetDto } from \"./UserPet.dto\";\nimport { Role } from \"../../../constants/Role\";\n\nexport class CreateUserDto {\n    email: string\n    password: string\n    confirmPassword?: string\n    role?: Role\n\n    profile?: CreateUserProfileDto | any\n    pet?: CreateUserPetDto | any\n}\n\nexport class UpdateUserDto {\n    email?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserPetDto.html":{"url":"classes/UpdateUserPetDto.html","title":"class - UpdateUserPetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserPetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/UserPet.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthDate\n                            \n                            \n                                    Optional\n                                breed\n                            \n                            \n                                    Optional\n                                breeding\n                            \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                gender\n                            \n                            \n                                    Optional\n                                images\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                passportNumber\n                            \n                            \n                                    Optional\n                                personality\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                    Optional\n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        breeding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        passportNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        personality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Gender } from \"../../../constants/Gender\";\nimport { User } from \"../../../typeorm/entities/User\";\n\nexport class CreateUserPetDto {\n    name: string\n    passportNumber: string\n\n    breed?: string\n    color?: string\n    description?: string\n    personality?: string\n    birthDate?: Date\n    weight?: number\n    breeding?: string\n    gender?: Gender\n\n    images?: Array | any\n    user?: User | any\n}\n\nexport class UpdateUserPetDto {\n    name?: string\n    passportNumber?: string\n\n    breed?: string\n    color?: string\n    description?: string\n    personality?: string\n    birthDate?: Date\n    weight?: number\n    breeding?: string\n    gender?: Gender\n\n    images?: Array\n    user?: User | any\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserProfileDto.html":{"url":"classes/UpdateUserProfileDto.html","title":"class - UpdateUserProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/UserProfile.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                birthDate\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                gender\n                            \n                            \n                                    Optional\n                                isPrimary\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                nickname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         File | any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isPrimary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {BaseDto} from \"../../../base/BaseDto\";\nimport {User} from \"../../../typeorm/entities/User\";\n\nexport class CreateUserProfileDto extends BaseDto {\n    firstName: string\n    lastName: string\n\n    nickname?: string\n    gender?: string\n    description?: string\n    isPrimary?: boolean\n    birthDate?: Date\n\n    user?: User | any\n    avatar?: File | any\n}\n\nexport class UpdateUserProfileDto extends BaseDto {\n    firstName?: string\n    lastName?: string\n    nickname?: string\n    gender?: string\n    description?: string\n    birthDate?: Date\n    isPrimary?: boolean\n\n    avatar?: File | any\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UploaderController.html":{"url":"controllers/UploaderController.html","title":"controller - UploaderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UploaderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/uploader/controller/uploader/uploader.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                uploader\n            \n\n\n\n            \n                Extends\n            \n            \n                        BaseController\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                uploadFile\n                            \n                            \n                                apiErrorResponse\n                            \n                            \n                                apiSuccessResponse\n                            \n                            \n                                    Protected\n                                getBasicDataForResponse\n                            \n                            \n                                paginationFragment\n                            \n                            \n                                resolveFilters\n                            \n                            \n                                    Protected\n                                resolveFilterType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(req: Request, res: Response, files: Array)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/uploader/controller/uploader/uploader.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiErrorResponse\n                        \n                    \n                \n            \n            \n                \napiErrorResponse(res: Response, req: Request, error: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.BAD_REQUEST\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiSuccessResponse\n                        \n                    \n                \n            \n            \n                \napiSuccessResponse(res: Response, req: Request, data: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.OK\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBasicDataForResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBasicDataForResponse(req: Request, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasicResponseInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginationFragment\n                        \n                    \n                \n            \n            \n                \npaginationFragment(limit: number | string, page: number | string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PaginationInterface | object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFilters\n                        \n                    \n                \n            \n            \n                \nresolveFilters(filters: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        resolveFilterType\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveFilterType(type: string, value)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'eq'\n                                    \n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Controller, Post, Req, Res, UploadedFiles, UseInterceptors} from '@nestjs/common';\nimport {FilesInterceptor} from \"@nestjs/platform-express\";\nimport {diskStorage} from \"multer\";\nimport {UploaderService} from \"../../service/uploader/uploader.service\";\nimport {BaseController} from \"../../../../base/BaseController\";\nimport {Request, Response} from \"express\";\nimport {File} from \"../../../../typeorm/entities/File\";\n\nexport const editFileName = (req, file, callback) => {\n    const name = file.originalname.split('.')[0];\n    const fileExtName = file.originalname.split('.').at(-1);\n    const randomName = Array(4)\n        .fill(null)\n        .map(() => Math.round(Math.random() * 16).toString(16))\n        .join('');\n    callback(null, `${name}-${randomName}.${fileExtName}`);\n};\n\n@Controller('uploader')\nexport class UploaderController extends BaseController {\n    constructor(private uploaderService: UploaderService) {\n        super()\n    }\n\n    @Post('upload')\n    @UseInterceptors(FilesInterceptor('files[]', 20, {\n        storage: diskStorage({\n            destination: './uploads',\n            filename: editFileName,\n        }),\n    }))\n    async uploadFile(\n        @Req() req: Request,\n        @Res() res: Response,\n        @UploadedFiles() files: Array,\n    ) {\n        try {\n            const uploadedFiles: File[] = await this.uploaderService.createFiles(files)\n            this.apiSuccessResponse(res, req, uploadedFiles)\n        } catch (err) {\n            this.apiErrorResponse(res, req, err)\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UploaderModule.html":{"url":"modules/UploaderModule.html","title":"module - UploaderModule","body":"\n                   \n\n\n\n\n    Modules\n    UploaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UploaderModule\n\n\n\ncluster_UploaderModule_providers\n\n\n\n\nUploaderService\n\nUploaderService\n\n\n\nUploaderModule\n\nUploaderModule\n\nUploaderModule -->\n\nUploaderService->UploaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/uploader/uploader.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UploaderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UploaderController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UploaderController } from './controller/uploader/uploader.controller';\nimport { UploaderService } from './service/uploader/uploader.service';\nimport {TypeOrmModule} from \"@nestjs/typeorm\";\nimport {File} from \"../../typeorm/entities/File\";\n@Module({\n  controllers: [UploaderController],\n  imports: [TypeOrmModule.forFeature([File])],\n  providers: [UploaderService],\n})\nexport class UploaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploaderService.html":{"url":"injectables/UploaderService.html","title":"injectable - UploaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/uploader/service/uploader/uploader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/uploader/service/uploader/uploader.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    createFiles(files: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/uploader/service/uploader/uploader.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@nestjs/common';\nimport {Repository} from \"typeorm\";\nimport {InjectRepository} from \"@nestjs/typeorm\";\nimport {File} from \"../../../../typeorm/entities/File\";\n\n@Injectable()\nexport class UploaderService {\n    constructor(@InjectRepository(File) private fileRepository: Repository) {}\n\n    async createFiles(files: Array) {\n        const entities: Array = []\n\n        console.log('leca', JSON.stringify(files))\n        files.forEach(file => {\n            const fileEntity = new File()\n\n            console.log(file.originalname)\n            fileEntity.orginalName = file.originalname\n            fileEntity.path = file.path\n            fileEntity.mimetype = file.mimetype\n            fileEntity.filename = file.filename\n\n            entities.push(fileEntity)\n        })\n\n        return await this.fileRepository.save(entities)\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/typeorm/entities/User.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                pets\n                            \n                            \n                                    \n                                    \n                                profiles\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/User.ts:17\n                        \n                    \n\n            \n                \n                     User account email address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/User.ts:25\n                        \n                    \n\n            \n                \n                     User password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        pets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserPet[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, pet => pet.user)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/User.ts:42\n                        \n                    \n\n            \n                \n                     List of all assigned pets\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserProfile[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, profile => profile.user)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/User.ts:51\n                        \n                    \n\n            \n                \n                     User profiles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/User.ts:60\n                        \n                    \n\n            \n                \n                     Refresh authorization token\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('enum', {default: undefined, enum: Role})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/User.ts:33\n                        \n                    \n\n            \n                \n                     Rank of user\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, OneToMany, JoinTable } from 'typeorm';\nimport { BaseEntity } from '../../base/BaseEntity';\nimport { UserPet } from './UserPet';\nimport { UserProfile } from './UserProfile';\nimport {Exclude} from \"class-transformer\";\nimport {Role} from \"../../constants/Role\";\n\n@Entity({ name: 'users' })\nexport class User extends BaseEntity {\n    /**\n     *  User account email address\n     * @Required true\n     * @Unique true\n     * @Type string\n     */\n    @Column({ unique: true, nullable: false })\n    email: string;\n\n    /**\n     *  User password\n     * @Required true\n     * @Type string\n     */\n    @Column({ nullable: false, select: false })\n    password: string;\n\n    /**\n     *  Rank of user\n     * @Required true\n     * @Type Rank\n     */\n    @Column('enum', { default: Role.USER, enum: Role })\n    role: Role;\n\n    /**\n     *  List of all assigned pets\n     * @Required true\n     * @Type Pet[]\n     */\n    @OneToMany(() => UserPet, (pet) => pet.user)\n    @JoinTable()\n    pets: UserPet[]\n\n    /**\n     *  User profiles\n     * @Required true\n     * @Type UserProfile[]\n     */\n    @OneToMany(() => UserProfile, (profile) => profile.user)\n    @JoinTable()\n    profiles: UserProfile[]\n\n    /**\n     *  Refresh authorization token\n     * @Required false\n     * @Type string\n     */\n    @Column({ nullable: true })\n    @Exclude()\n    public refreshToken?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserPet.html":{"url":"entities/UserPet.html","title":"entity - UserPet","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserPet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/typeorm/entities/UserPet.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                birthDate\n                            \n                            \n                                    \n                                breed\n                            \n                            \n                                    \n                                breeding\n                            \n                            \n                                    \n                                color\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                    \n                                images\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                passportNumber\n                            \n                            \n                                    \n                                personality\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                            \n                                    \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:87\n                        \n                    \n\n            \n                \n                     Date of do birthday\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:31\n                        \n                    \n\n            \n                \n                     Dog breed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        breeding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:55\n                        \n                    \n\n            \n                \n                     Dog breeding\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:47\n                        \n                    \n\n            \n                \n                     Color of the dog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:79\n                        \n                    \n\n            \n                \n                     Dog description\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('enum', {default: undefined, enum: Gender})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:71\n                        \n                    \n\n            \n                \n                     Dog gender\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :         File[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, file => file.pet)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:105\n                        \n                    \n\n            \n                \n                     Dog images\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:15\n                        \n                    \n\n            \n                \n                     Name of the dog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passportNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:23\n                        \n                    \n\n            \n                \n                     Number of dog passport\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        personality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:63\n                        \n                    \n\n            \n                \n                     Dog personality\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.pets)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:96\n                        \n                    \n\n            \n                \n                     Dog owner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:39\n                        \n                    \n\n            \n                \n                     Dog weight\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, ManyToOne, JoinTable, OneToMany, JoinColumn } from 'typeorm';\nimport { BaseEntity } from '../../base/BaseEntity';\nimport { Gender } from \"../../constants/Gender\";\nimport { User } from './User';\nimport { File } from \"./File\";\n\n@Entity({ name: 'user_pets' })\nexport class UserPet extends BaseEntity {\n    /**\n     *  Name of the dog\n     * @Required true\n     * @Type string\n     */\n    @Column()\n    name: string\n\n    /**\n     *  Number of dog passport\n     * @Required true\n     * @Type string\n     */\n    @Column()\n    passportNumber: string\n\n    /**\n     *  Dog breed\n     * @Required false\n     * @Type string\n     */\n    @Column({ nullable: true })\n    breed: string\n\n    /**\n     *  Dog weight\n     * @Required false\n     * @Type number\n     */\n    @Column({ nullable: true })\n    weight: number\n\n    /**\n     *  Color of the dog\n     * @Required false\n     * @Type string\n     */\n    @Column({ nullable: true })\n    color: string\n\n    /**\n     *  Dog breeding\n     * @Required false\n     * @Type string\n     */\n    @Column({ nullable: true })\n    breeding: string\n\n    /**\n     *  Dog personality\n     * @Required false\n     * @Type string\n     */\n    @Column({ nullable: true })\n    personality: string\n\n    /**\n     *  Dog gender\n     * @Required false\n     * @Type Gender\n     */\n    @Column('enum', { default: Gender.MALE, enum: Gender })\n    gender: Gender;\n\n    /**\n     *  Dog description\n     * @Required false\n     * @Type text\n     */\n    @Column({ nullable: true, type: 'text' })\n    description: string\n\n    /**\n     *  Date of do birthday\n     * @Required false\n     * @Type datetime\n     */\n    @Column({ nullable: true, type: 'datetime' })\n    birthDate: Date;\n\n    /**\n     *  Dog owner\n     * @Required true\n     * @Type User\n     */\n    @ManyToOne(() => User, (user) => user.pets)\n    @JoinTable()\n    user: User\n\n    /**\n     *  Dog images\n     * @Required false\n     * @Type File[]\n     */\n    @OneToMany(() => File, file => file.pet)\n    @JoinColumn()\n    images: File[]\n\n    // @OneToMany(() => EventRegistration, (eventRegistration) => eventRegistration.user-user-pets)\n    // @JoinTable()\n    // eventRegistrations: EventRegistration[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserPetsController.html":{"url":"controllers/UserPetsController.html","title":"controller - UserPetsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserPetsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/controller/user-pets/user-pets.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                pets\n            \n\n\n\n            \n                Extends\n            \n            \n                        BaseController\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    Async\n                                getOneById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateOneById\n                            \n                            \n                                apiErrorResponse\n                            \n                            \n                                apiSuccessResponse\n                            \n                            \n                                    Protected\n                                getBasicDataForResponse\n                            \n                            \n                                paginationFragment\n                            \n                            \n                                resolveFilters\n                            \n                            \n                                    Protected\n                                resolveFilterType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(req: Request, res: Response, createDto: CreateUserPetDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-pets/user-pets.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createDto\n                                    \n                                                CreateUserPetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(req: Request, res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-pets/user-pets.controller.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(req: Request, res: Response, limit: number, page: number, q)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-pets/user-pets.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        25\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                \n                                \n                                    q\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneById(req: Request, res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-pets/user-pets.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneById(req: Request, res: Response, id: number, updateDto: UpdateUserPetDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-pets/user-pets.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                UpdateUserPetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiErrorResponse\n                        \n                    \n                \n            \n            \n                \napiErrorResponse(res: Response, req: Request, error: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.BAD_REQUEST\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiSuccessResponse\n                        \n                    \n                \n            \n            \n                \napiSuccessResponse(res: Response, req: Request, data: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.OK\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBasicDataForResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBasicDataForResponse(req: Request, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasicResponseInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginationFragment\n                        \n                    \n                \n            \n            \n                \npaginationFragment(limit: number | string, page: number | string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PaginationInterface | object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFilters\n                        \n                    \n                \n            \n            \n                \nresolveFilters(filters: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        resolveFilterType\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveFilterType(type: string, value)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'eq'\n                                    \n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { BaseController } from '../../../../base/BaseController';\nimport { UserPetsService } from '../../service/user-pets/user-pets.service';\nimport {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    Param,\n    ParseIntPipe,\n    Patch,\n    Post,\n    Query,\n    Req,\n    Res,\n    UseGuards\n} from '@nestjs/common';\nimport { CreateUserPetDto, UpdateUserPetDto } from '../../dtos/UserPet.dto';\nimport { JwtAuthGuard } from 'src/guard/jwt-auth/jwt-auth.guard';\nimport { Request, Response } from 'express';\nimport { UserPet } from \"../../../../typeorm/entities/UserPet\";\nimport { Roles } from \"../../../../decorators/roles.decorator\";\nimport { Role } from \"../../../../constants/Role\";\nimport { UpdateResult } from \"typeorm\";\n\n@Controller('pets')\n@UseGuards(JwtAuthGuard)\nexport class UserPetsController extends BaseController {\n    constructor(private petService: UserPetsService) {\n        super()\n    }\n\n    @Get()\n    async getAll(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Query('limit') limit = 25,\n        @Query('page') page = 1,\n        @Query('q') q,\n    ) {\n        try {\n            const pets: UserPet[] = await this.petService.findAll({\n                pagination: this.paginationFragment(limit, page),\n                relations: ['user'],\n                where: this.resolveFilters(q),\n            });\n\n            this.apiSuccessResponse(res, req, pets);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    //\n    @Get(':id')\n    async getOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n    ) {\n        try {\n            const pet: UserPet = await this.petService.findOneById(id, {\n                relations: ['user']\n            });\n\n            this.apiSuccessResponse(res, req, pet);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Post()\n    @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async create(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Body() createDto: CreateUserPetDto,\n    ) {\n        try {\n            const pet: UserPet = await this.petService.create(createDto);\n\n            this.apiSuccessResponse(res, req, pet);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Patch(':id')\n    @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async updateOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n        @Body() updateDto: UpdateUserPetDto,\n    ) {\n        try {\n            const updateResult: UpdateResult = await this.petService.updateOneById(\n                id,\n                updateDto,\n            );\n\n            this.apiSuccessResponse(res, req, updateResult);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Delete(':id')\n    @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async deleteOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n    ) {\n        try {\n            const deleteResult: UpdateResult =\n                await this.petService.deleteSoftOneById(id);\n\n            this.apiSuccessResponse(res, req, deleteResult);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserPetsService.html":{"url":"injectables/UserPetsService.html","title":"injectable - UserPetsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserPetsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/service/user-pets/user-pets.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    Async\n                                deleteSoftOneById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneBy\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(petRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/service/user-pets/user-pets.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        petRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPetDto: CreateUserPetDto)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPetDto\n                                    \n                                                CreateUserPetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(id: number)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteSoftOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSoftOneById(id: number)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:71\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneBy\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneBy(params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number, params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneById(id: number, updateDto: BaseDto)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                BaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserPet } from 'src/typeorm/entities/UserPet';\nimport { CreateUserPetDto, UpdateUserPetDto } from '../../dtos/UserPet.dto';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport {BaseService} from \"../../../../base/BaseService\";\nimport {File} from \"../../../../typeorm/entities/File\";\n\n@Injectable()\nexport class UserPetsService extends BaseService {\n    constructor(@InjectRepository(UserPet) private petRepository: Repository) {\n        super(petRepository)\n    }\n\n    async create(createPetDto: CreateUserPetDto): Promise {\n        const newPet: UserPet = this.petRepository.create({\n                ...createPetDto,\n                // images: createPetDto.images?.length ? createPetDto.images : null,\n                user:  createPetDto.user ?? null,\n            })\n\n        if (createPetDto.images?.length) {\n            newPet.images.push(...createPetDto.images.map(id => ({ id } as File)))\n        }\n\n        return await this.petRepository.save(newPet);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserProfile.html":{"url":"entities/UserProfile.html","title":"entity - UserProfile","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/typeorm/entities/UserProfile.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                birthDate\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isPrimary\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                nickname\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         File\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, file => file.userProfile)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:80\n                        \n                    \n\n            \n                \n                     User profile avatar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:55\n                        \n                    \n\n            \n                \n                     Player birthday\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:47\n                        \n                    \n\n            \n                \n                     Player description\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:15\n                        \n                    \n\n            \n                \n                     First name of player\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('enum', {default: undefined, enum: Gender})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:39\n                        \n                    \n\n            \n                \n                     Player gender\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isPrimary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:63\n                        \n                    \n\n            \n                \n                     Main user profile\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:23\n                        \n                    \n\n            \n                \n                     Last name of player\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:31\n                        \n                    \n\n            \n                \n                     Nickname of the player\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.pets)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:72\n                        \n                    \n\n            \n                \n                     User profile owner\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import {Entity, Column, ManyToOne, JoinTable, OneToOne} from 'typeorm';\nimport { BaseEntity } from '../../base/BaseEntity';\nimport { User } from './User';\nimport {File} from \"./File\";\nimport {Gender} from \"../../constants/Gender\";\n\n@Entity({ name: 'user_profiles' })\nexport class UserProfile extends BaseEntity {\n    /**\n     *  First name of player\n     * @Required true\n     * @Type string\n     */\n    @Column({ nullable: true })\n    firstName: string;\n\n    /**\n     *  Last name of player\n     * @Required true\n     * @Type string\n     */\n    @Column({ nullable: true })\n    lastName: string;\n\n    /**\n     *  Nickname of the player\n     * @Required false\n     * @Type string\n     */\n    @Column()\n    nickname: string;\n\n    /**\n     *  Player gender\n     * @Required false\n     * @Type Gender\n     */\n    @Column('enum', { default: Gender.MALE, enum: Gender })\n    gender: Gender;\n\n    /**\n     *  Player description\n     * @Required false\n     * @Type text\n     */\n    @Column({ nullable: true, type: 'text' })\n    description: string\n\n    /**\n     *  Player birthday\n     * @Required false\n     * @Type datetime\n     */\n    @Column({ nullable: true, type: 'datetime' })\n    birthDate: Date;\n\n    /**\n     *  Main user profile\n     * @Required true\n     * @Type boolean\n     */\n    @Column({ default: false })\n    isPrimary: boolean;\n\n    /**\n     *  User profile owner\n     * @Required true\n     * @Type User\n     */\n    @ManyToOne(() => User, (user) => user.pets)\n    @JoinTable()\n    user: User\n\n    /**\n     *  User profile avatar\n     * @Required false\n     * @Type File\n     */\n    @OneToOne(() => File, (file) => file.userProfile)\n    avatar: File\n\n    // @OneToMany(() => EventRegistration, (eventRegistration) => eventRegistration.userProfile)\n    // @JoinTable()\n    // eventRegistrations: EventRegistration[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserProfilesController.html":{"url":"controllers/UserProfilesController.html","title":"controller - UserProfilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserProfilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/controller/user-profiles/user-profiles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/user/profiles\n            \n\n\n\n            \n                Extends\n            \n            \n                        BaseController\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    Async\n                                getOneById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateOneById\n                            \n                            \n                                apiErrorResponse\n                            \n                            \n                                apiSuccessResponse\n                            \n                            \n                                    Protected\n                                getBasicDataForResponse\n                            \n                            \n                                paginationFragment\n                            \n                            \n                                resolveFilters\n                            \n                            \n                                    Protected\n                                resolveFilterType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(req: Request, res: Response, createDto: CreateUserProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-profiles/user-profiles.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createDto\n                                    \n                                                CreateUserProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(req: Request, res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-profiles/user-profiles.controller.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(req: Request, res: Response, limit: number, page: number, q)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-profiles/user-profiles.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        25\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                \n                                \n                                    q\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneById(req: Request, res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-profiles/user-profiles.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneById(req: Request, res: Response, id: number, updateDto: UpdateUserProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-profiles/user-profiles.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                UpdateUserProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiErrorResponse\n                        \n                    \n                \n            \n            \n                \napiErrorResponse(res: Response, req: Request, error: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.BAD_REQUEST\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiSuccessResponse\n                        \n                    \n                \n            \n            \n                \napiSuccessResponse(res: Response, req: Request, data: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.OK\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBasicDataForResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBasicDataForResponse(req: Request, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasicResponseInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginationFragment\n                        \n                    \n                \n            \n            \n                \npaginationFragment(limit: number | string, page: number | string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PaginationInterface | object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFilters\n                        \n                    \n                \n            \n            \n                \nresolveFilters(filters: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        resolveFilterType\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveFilterType(type: string, value)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'eq'\n                                    \n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { BaseController } from '../../../../base/BaseController';\nimport {Controller, Param, ParseIntPipe, Body, Patch, Delete, Get, Req, Res, Query, Post} from \"@nestjs/common\";\nimport {CreateUserProfileDto, UpdateUserProfileDto} from \"../../dtos/UserProfile.dto\";\nimport { UserProfilesService } from \"../../service/user-profiles/user-profiles.service\";\nimport { Request, Response } from 'express';\nimport {Roles} from \"../../../../decorators/roles.decorator\";\nimport {Role} from \"../../../../constants/Role\";\nimport {UpdateResult} from \"typeorm\";\nimport {UserProfile} from \"../../../../typeorm/entities/UserProfile\";\n\n@Controller('api/user/profiles')\nexport class UserProfilesController extends BaseController {\n    constructor(private userProfileService: UserProfilesService) {\n        super();\n    }\n\n    @Get()\n    async getAll(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Query('limit') limit = 25,\n        @Query('page') page = 1,\n        @Query('q') q,\n    ) {\n        try {\n            const userProfiles: UserProfile[] = await this.userProfileService.findAll({\n                pagination: this.paginationFragment(limit, page),\n                relations: ['user'],\n                where: this.resolveFilters(q),\n            });\n\n            this.apiSuccessResponse(res, req, userProfiles);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Get(':id')\n    async getOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n    ) {\n        try {\n            const userProfile: UserProfile = await this.userProfileService.findOneById(id, {\n                relations: ['user']\n            });\n\n            this.apiSuccessResponse(res, req, userProfile);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Post()\n    @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async create(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Body() createDto: CreateUserProfileDto,\n    ) {\n        try {\n            const userProfile: UserProfile = await this.userProfileService.create(createDto);\n\n            this.apiSuccessResponse(res, req, userProfile);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Patch(':id')\n    @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async updateOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n        @Body() updateDto: UpdateUserProfileDto,\n    ) {\n        try {\n            const updateResult: UpdateResult = await this.userProfileService.updateOneById(\n                id,\n                updateDto,\n            );\n\n            this.apiSuccessResponse(res, req, updateResult);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Delete(':id')\n    @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async deleteOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n    ) {\n        try {\n            const deleteResult: UpdateResult =\n                await this.userProfileService.deleteSoftOneById(id);\n\n            this.apiSuccessResponse(res, req, deleteResult);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserProfilesService.html":{"url":"injectables/UserProfilesService.html","title":"injectable - UserProfilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserProfilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/service/user-profiles/user-profiles.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    Async\n                                deleteSoftOneById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneBy\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userProfileRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/service/user-profiles/user-profiles.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userProfileRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(profileData: CreateUserProfileDto)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileData\n                                    \n                                                CreateUserProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(id: number)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteSoftOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSoftOneById(id: number)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:71\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneBy\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneBy(params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number, params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneById(id: number, updateDto: BaseDto)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                BaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserProfile } from 'src/typeorm/entities/UserProfile';\nimport {\n    Repository,\n} from 'typeorm';\nimport { CreateUserProfileDto } from '../../dtos/UserProfile.dto';\nimport {BaseService} from \"../../../../base/BaseService\";\nimport {File} from \"../../../../typeorm/entities/File\";\n@Injectable()\nexport class UserProfilesService extends BaseService{\n    constructor(@InjectRepository(UserProfile) private userProfileRepository: Repository) {\n        super(userProfileRepository)\n    }\n    async create(profileData: CreateUserProfileDto): Promise {\n        const newUser: UserProfile = this.userProfileRepository.create({\n            ...profileData,\n            user:  profileData?.user ?? null,\n        } as UserProfile)\n\n        if (profileData.avatar) {\n            newUser.avatar = { id: profileData.avatar } as File\n        }\n\n        return await this.userProfileRepository.save(newUser);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/controller/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/users\n            \n\n\n\n            \n                Extends\n            \n            \n                        BaseController\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                createUserPet\n                            \n                            \n                                    \n                                    Async\n                                createUserProfile\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getOneById\n                            \n                            \n                                    \n                                    Async\n                                getUserPets\n                            \n                            \n                                    \n                                    Async\n                                getUserProfiles\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateOneById\n                            \n                            \n                                apiErrorResponse\n                            \n                            \n                                apiSuccessResponse\n                            \n                            \n                                    Protected\n                                getBasicDataForResponse\n                            \n                            \n                                paginationFragment\n                            \n                            \n                                resolveFilters\n                            \n                            \n                                    Protected\n                                resolveFilterType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(req: Request, res: Response, createDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createUserPet\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserPet(req: Request, res: Response, id: number, createPetDto: CreateUserPetDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/pets')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createPetDto\n                                    \n                                                CreateUserPetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createUserProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserProfile(req: Request, res: Response, id: number, createUserProfileDto: CreateUserProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/profiles')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserProfileDto\n                                    \n                                                CreateUserProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(req: Request, res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(req: Request, res: Response, limit: number, page: number, q)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        25\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                \n                                \n                                    q\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneById(req: Request, res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getUserPets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserPets(req: Request, res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/pets')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getUserProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserProfiles(req: Request, res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/profiles')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneById(req: Request, res: Response, id: number, updateDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiErrorResponse\n                        \n                    \n                \n            \n            \n                \napiErrorResponse(res: Response, req: Request, error: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.BAD_REQUEST\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiSuccessResponse\n                        \n                    \n                \n            \n            \n                \napiSuccessResponse(res: Response, req: Request, data: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.OK\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBasicDataForResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBasicDataForResponse(req: Request, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasicResponseInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginationFragment\n                        \n                    \n                \n            \n            \n                \npaginationFragment(limit: number | string, page: number | string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PaginationInterface | object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFilters\n                        \n                    \n                \n            \n            \n                \nresolveFilters(filters: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        resolveFilterType\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveFilterType(type: string, value)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'eq'\n                                    \n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateUserDto, UpdateUserDto } from '../../dtos/User.dto';\nimport {\n    Body,\n    Controller,\n    Get,\n    ParseIntPipe,\n    Post,\n    Query,\n} from '@nestjs/common';\nimport {\n    Delete,\n    Param,\n    Patch,\n    Req,\n    Res,\n    UseGuards,\n} from '@nestjs/common/decorators';\nimport { Request, Response } from 'express';\nimport { BaseController } from 'src/base/BaseController';\nimport { JwtAuthGuard } from 'src/guard/jwt-auth/jwt-auth.guard';\nimport { ControllerInterface } from '../../../../interfaces/Controller.interface';\nimport { User } from '../../../../typeorm/entities/User';\nimport { UpdateResult } from 'typeorm';\nimport { RoleGuard } from '../../../../guard/role/role.guard';\nimport { Role } from '../../../../constants/Role';\nimport { Roles } from '../../../../decorators/roles.decorator';\nimport {UserProfilesService} from \"../../service/user-profiles/user-profiles.service\";\nimport {UserPetsService} from \"../../service/user-pets/user-pets.service\";\nimport {UsersService} from \"../../service/users/users.service\";\nimport {CreateUserProfileDto} from \"../../dtos/UserProfile.dto\";\nimport { CreateUserPetDto } from \"../../dtos/UserPet.dto\";\nimport {UserPet} from \"../../../../typeorm/entities/UserPet\";\nimport {UserProfile} from \"../../../../typeorm/entities/UserProfile\";\n\n// @UseGuards(JwtAuthGuard, RoleGuard)\n@Controller('api/users')\nexport class UsersController\n    extends BaseController\n    implements ControllerInterface\n{\n    constructor(\n        private userService: UsersService,\n        private userProfileService: UserProfilesService,\n        private petService: UserPetsService,\n    ) {\n        super();\n    }\n    @Get()\n    // @Roles(Ranks.WORKER, Ranks.ADMIN, Ranks.SUPER_ADMIN, Ranks.USER)\n    async getAll(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Query('limit') limit = 25,\n        @Query('page') page = 1,\n        @Query('q') q,\n    ) {\n        try {\n            const users: User[] = await this.userService.findAll({\n                pagination: this.paginationFragment(limit, page),\n                relations: ['profiles'],\n                where: this.resolveFilters(q),\n            });\n\n            this.apiSuccessResponse(res, req, users);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Get(':id')\n    @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async getOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n    ) {\n        try {\n            const user: User = await this.userService.findOneById(id, {\n                relations: ['profiles']\n            });\n\n            this.apiSuccessResponse(res, req, user);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Post()\n    @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async create(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Body() createDto: CreateUserDto,\n    ) {\n        const { confirmPassword, ...userDetails } = createDto;\n\n        if (confirmPassword !== userDetails.password)\n            this.apiErrorResponse(res, req, null);\n\n        try {\n            const users: User = await this.userService.create(createDto);\n\n            this.apiSuccessResponse(res, req, users);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Patch(':id')\n    @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async updateOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n        @Body() updateDto: UpdateUserDto,\n    ) {\n        try {\n            const updateResult: UpdateResult = await this.userService.updateOneById(\n                id,\n                updateDto,\n            );\n\n            this.apiSuccessResponse(res, req, updateResult);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Delete(':id')\n    @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async deleteOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n    ) {\n        try {\n            const deleteResult: UpdateResult =\n                await this.userService.deleteSoftOneById(id);\n\n            this.apiSuccessResponse(res, req, deleteResult);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n\n    // User profiles\n    @Get(':id/profiles')\n    async getUserProfiles(\n        @Req() req: Request, @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number\n    ) {\n        try {\n            const data: UserProfile[] = await this.userProfileService.findAll({ where: {\n                user: { id }\n            }});\n\n            this.apiSuccessResponse(res, req, data)\n        } catch (error) {\n            this.apiErrorResponse(res, req, error)\n        }\n    }\n\n    @Post(':id/profiles')\n    async createUserProfile(\n        @Req() req: Request, @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n        @Body() createUserProfileDto: CreateUserProfileDto\n    ) {\n        try {\n            const data: UserProfile = await this.userProfileService.create({ ...createUserProfileDto, user: id })\n\n            this.apiSuccessResponse(res, req, data)\n        } catch (error) {\n            this.apiErrorResponse(res, req, error)\n        }\n    }\n\n    // Pet profiles\n    @Get(':id/pets')\n    async getUserPets(\n        @Req() req: Request, @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number\n    ) {\n        try {\n            const data: UserPet[] = await this.petService.findAll({ where: {\n                user: { id }\n            }});\n\n            this.apiSuccessResponse(res, req, data)\n        } catch (error) {\n            this.apiErrorResponse(res, req, error)\n        }\n    }\n\n    @Post(':id/pets')\n    async createUserPet(\n        @Req() req: Request, @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n        @Body() createPetDto: CreateUserPetDto\n    ) {\n        try {\n            const data: UserPet = await this.petService.create({ ...createPetDto, user: id })\n\n            this.apiSuccessResponse(res, req, data)\n        } catch (error) {\n            this.apiErrorResponse(res, req, error)\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUserPetsService \n\nUserPetsService \n\n\n\nUserProfilesService \n\nUserProfilesService \n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUserPetsService  -->\n\nUsersModule->UserPetsService \n\n\n\nUserProfilesService  -->\n\nUsersModule->UserProfilesService \n\n\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUserPetsService\n\nUserPetsService\n\nUsersModule -->\n\nUserPetsService->UsersModule\n\n\n\n\n\nUserProfilesService\n\nUserProfilesService\n\nUsersModule -->\n\nUserProfilesService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserPetsService\n                        \n                        \n                            UserProfilesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                        \n                            UserProfilesController\n                        \n                        \n                            UserPetsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserPetsService\n                        \n                        \n                            UserProfilesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { UsersService } from './service/users/users.service';\nimport { UsersController } from './controller/users/users.controller'\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Module } from '@nestjs/common';\nimport { User } from 'src/typeorm/entities/User';\nimport { UserPet } from 'src/typeorm/entities/UserPet';\nimport { UserProfile } from 'src/typeorm/entities/UserProfile';\nimport { UserProfilesService } from './service/user-profiles/user-profiles.service';\nimport { UserProfilesController } from './controller/user-profiles/user-profiles.controller';\nimport { UserPetsController } from './controller/user-pets/user-pets.controller';\nimport { UserPetsService } from './service/user-pets/user-pets.service';\n\n@Module({\n  exports: [UsersService, UserProfilesService, UserPetsService],\n  imports: [TypeOrmModule.forFeature([User, UserPet, UserProfile])],\n  controllers: [UsersController, UserProfilesController, UserPetsController],\n  providers: [UsersService, UserProfilesService, UserPetsService]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/service/users/users.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    Async\n                                deleteSoftOneById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneBy\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, userProfileService: UserProfilesService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/service/users/users.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userProfileService\n                                                  \n                                                        \n                                                                        UserProfilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(id: number)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteSoftOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSoftOneById(id: number)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:71\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneBy\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneBy(params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number, params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneById(id: number, updateDto: BaseDto)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                BaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { User } from 'src/typeorm/entities/User';\nimport {\n    DeleteResult,\n    FindOptionsSelect,\n    FindOptionsSelectByString,\n    FindOptionsWhere,\n    Repository,\n    UpdateResult,\n} from 'typeorm';\nimport { ServiceInterface } from '../../../../interfaces/Service.interface';\nimport { BaseDto } from 'src/base/BaseDto';\nimport {\n    FindOptionsRelationByString,\n    FindOptionsRelations,\n} from 'typeorm/find-options/FindOptionsRelations';\nimport * as argon2 from 'argon2';\nimport { CreateUserDto } from '../../dtos/User.dto';\nimport {BaseService} from \"../../../../base/BaseService\";\nimport {UserProfilesService} from \"../user-profiles/user-profiles.service\";\n\n@Injectable()\nexport class UsersService extends BaseService{\n    constructor(\n        @InjectRepository(User) private userRepository: Repository,\n        private userProfileService: UserProfilesService,\n    ) {\n        super(userRepository)\n    }\n\n    async create(createDto: CreateUserDto): Promise {\n        const { ...userDetails } = createDto\n        const newUser = this.userRepository.create({\n            ...userDetails,\n        });\n\n        newUser.password = await argon2.hash(userDetails.password);\n\n        if (userDetails.profile) {\n            newUser.profiles.push(await this.userProfileService.create({ ...userDetails.profile, isPrimary: true }))\n        }\n\n        return await this.userRepository.save(newUser);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidUserDto.html":{"url":"classes/ValidUserDto.html","title":"class - ValidUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/ValidUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/ValidUser.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/ValidUser.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/ValidUser.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/ValidUser.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/ValidUser.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidUserDto {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/base/BaseController.ts\n            \n            class\n            BaseController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/base/BaseDto.ts\n            \n            class\n            BaseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/BaseEntity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/base/BaseService.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/config/jwt.config.ts\n            \n            variable\n            jwtConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            typeOrmAsyncConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/Jwt.ts\n            \n            variable\n            Jwt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guard/jwt-auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guard/jwt-refresh-auth/jwt-refresh-auth.guard.ts\n            \n            injectable\n            JwtRefreshAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guard/local-auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guard/role/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces/BasicResponse.interface.ts\n            \n            interface\n            BasicResponseInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/Controller.interface.ts\n            \n            interface\n            ControllerInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/interfaces/Pagination.interface.ts\n            \n            interface\n            PaginationInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/Service.interface.ts\n            \n            interface\n            ServiceInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/controller/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/LoginUser.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/RefreshToken.dto.ts\n            \n            class\n            RefreshTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/Signup.dto.ts\n            \n            class\n            SignupDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/ValidUser.dto.ts\n            \n            class\n            ValidUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/service/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/auth/strategy/jwt-refresh.strategy.ts\n            \n            injectable\n            JwtRefreshStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/strategy/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/events/dtos/Competition.dto.ts\n            \n            class\n            CreateCompetitionDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/events/dtos/Competition.dto.ts\n            \n            class\n            UpdateCompetitionDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/events/dtos/Event.dto.ts\n            \n            class\n            CreateEventDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/events/dtos/Event.dto.ts\n            \n            class\n            UpdateEventDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/uploader/controller/uploader/uploader.controller.ts\n            \n            controller\n            UploaderController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/uploader/controller/uploader/uploader.controller.ts\n            \n            variable\n            editFileName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/uploader/service/uploader/uploader.service.ts\n            \n            injectable\n            UploaderService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/controller/user-pets/user-pets.controller.ts\n            \n            controller\n            UserPetsController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/users/controller/user-profiles/user-profiles.controller.ts\n            \n            controller\n            UserProfilesController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/users/controller/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/User.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/User.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/UserPet.dto.ts\n            \n            class\n            CreateUserPetDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/UserPet.dto.ts\n            \n            class\n            UpdateUserPetDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/UserProfile.dto.ts\n            \n            class\n            CreateUserProfileDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/UserProfile.dto.ts\n            \n            class\n            UpdateUserProfileDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/users/service/user-pets/user-pets.service.ts\n            \n            injectable\n            UserPetsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/users/service/user-profiles/user-profiles.service.ts\n            \n            injectable\n            UserProfilesService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/users/service/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/typeorm/entities/Competition.ts\n            \n            entity\n            Competition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/typeorm/entities/Event.ts\n            \n            entity\n            Event\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/typeorm/entities/File.ts\n            \n            entity\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/typeorm/entities/User.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/typeorm/entities/UserPet.ts\n            \n            entity\n            UserPet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/typeorm/entities/UserProfile.ts\n            \n            entity\n            UserProfile\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/serve-static : ^3.0.1\n        \n            @nestjs/swagger : ^6.3.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            argon2 : ^0.30.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            dotenv : ^16.0.3\n        \n            mysql2 : ^3.1.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.12\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppMode   (src/.../AppMode.ts)\n                        \n                        \n                            Gender   (src/.../Gender.ts)\n                        \n                        \n                            Role   (src/.../Role.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants/AppMode.ts\n    \n        \n            \n                \n                    \n                        \n                        AppMode\n                    \n                \n                        \n                            \n                                 DEVELOPMENT\n                            \n                        \n                        \n                            \n                                Value : DEVELOPMENT\n                            \n                        \n                        \n                            \n                                 PRODUCTION\n                            \n                        \n                        \n                            \n                                Value : PRODUCTION\n                            \n                        \n            \n        \n\n    src/constants/Gender.ts\n    \n        \n            \n                \n                    \n                        \n                        Gender\n                    \n                \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : FEMALE\n                            \n                        \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : MALE\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n    src/constants/Role.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 WORKER\n                            \n                        \n                        \n                            \n                                Value : WORKER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ yarn installRunning the app\n# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\n# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UploaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UploaderModule\n\n\n\ncluster_UploaderModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\n\n\nUploaderModule\n\nUploaderModule\n\nAppModule -->\n\nUploaderModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUserPetsService \n\nUserPetsService \n\nUserPetsService  -->\n\nUsersModule->UserPetsService \n\n\n\n\n\nUserProfilesService \n\nUserProfilesService \n\nUserProfilesService  -->\n\nUsersModule->UserProfilesService \n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshStrategy\n\nJwtRefreshStrategy\n\nAuthModule -->\n\nJwtRefreshStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUploaderService\n\nUploaderService\n\nUploaderModule -->\n\nUploaderService->UploaderModule\n\n\n\n\n\nUserPetsService\n\nUserPetsService\n\nUsersModule -->\n\nUserPetsService->UsersModule\n\n\n\n\n\nUserProfilesService\n\nUserProfilesService\n\nUsersModule -->\n\nUserProfilesService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            editFileName   (src/.../uploader.controller.ts)\n                        \n                        \n                            Jwt   (src/.../Jwt.ts)\n                        \n                        \n                            jwtConfig   (src/.../jwt.config.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            typeOrmAsyncConfig   (src/.../typeorm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/uploader/controller/uploader/uploader.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        editFileName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n    const name = file.originalname.split('.')[0];\n    const fileExtName = file.originalname.split('.').at(-1);\n    const randomName = Array(4)\n        .fill(null)\n        .map(() => Math.round(Math.random() * 16).toString(16))\n        .join('');\n    callback(null, `${name}-${randomName}.${fileExtName}`);\n}\n                    \n                \n\n\n        \n    \n\n    src/constants/Jwt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Jwt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret: process.env.JWT_SECRET || 'gwngwenewn1jf981jnv29en'\n}\n                    \n                \n\n\n        \n    \n\n    src/config/jwt.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtModuleAsyncOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  imports: [ConfigModule],\n  inject: [ConfigService],\n  useFactory: async (\n    configService: ConfigService,\n  ): Promise => {\n    return {\n      secret: appConfig().jwtSecret,\n      signOptions: { expiresIn: appConfig().jwtExpires + 's' },\n    };\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...args: string[]) => SetMetadata('roles', args)\n                    \n                \n\n\n        \n    \n\n    src/config/typeorm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        typeOrmAsyncConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleAsyncOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  imports: [ConfigModule],\n  inject: [ConfigService],\n  useFactory: async (\n    configService: ConfigService,\n  ): Promise => {\n    return {\n      type: 'mysql',\n      host: configService.get('DB_HOST'),\n      port: +configService.get('DB_PORT'),\n      username: configService.get('DB_USERNAME'),\n      password: configService.get('DB_PASSWORD'),\n      database: configService.get('DB_NAME'),\n      entities: [User, UserPet, UserProfile, Event, Competition, File],\n      synchronize: true || configService.get('APP_MODE') === AppMode.DEVELOPMENT,\n    };\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
