var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.554,1,2.674]],["body/controllers/AppController.html",[0,2.64,1,4.543,2,2.287,3,0.238,4,0.211,5,0.158,6,4.586,7,0.38,8,1.917,9,6.223,10,2.075,11,0.017,12,0.573,13,5.316,14,1.326,15,1.015,16,0.614,17,1.214,18,4.204,19,4.586,20,0.293,21,0.129,22,2.536,23,5.316,24,2.075,25,5.316,26,0.014,27,0.014]],["title/modules/AppModule.html",[28,1.718,29,2.674]],["body/modules/AppModule.html",[1,4.305,2,2.332,3,0.181,4,0.161,5,0.121,11,0.017,16,0.718,17,0.925,18,4.24,19,3.495,20,0.223,21,0.099,26,0.012,27,0.012,28,2.765,29,5.378,30,2.163,31,2.299,32,2.637,33,2.637,34,2.299,35,3.702,36,2.637,37,3.495,38,3.495,39,3.495,40,4.554,41,4.554,42,4.554,43,4.24,44,3.528,45,2.637,46,2.637,47,4.051,48,3.285,49,4.051,50,2.855,51,2.042,52,4.051,53,4.051,54,4.051,55,3.495,56,3.129,57,3.129,58,4.051,59,4.051,60,4.051,61,3.495,62,3.495,63,2.855,64,3.495,65,4.051,66,4.051,67,4.051,68,3.495,69,3.495,70,4.051,71,4.051,72,4.051,73,1.582,74,4.051]],["title/injectables/AppService.html",[18,2.299,75,0.867]],["body/injectables/AppService.html",[3,0.246,4,0.218,5,0.164,7,0.394,8,1.959,9,6.299,11,0.017,12,0.594,14,1.375,15,1.038,16,0.525,17,1.258,18,3.992,20,0.304,21,0.134,24,2.151,26,0.014,27,0.014,75,1.504,76,2.257,77,4.754,78,5.51,79,5.51,80,5.51]],["title/controllers/AuthController.html",[0,1.554,81,2.674]],["body/controllers/AuthController.html",[0,0.89,2,0.935,3,0.097,4,0.086,5,0.065,7,0.156,8,1.022,10,1.89,11,0.017,12,0.692,14,1.6,15,0.958,16,0.623,17,0.785,20,0.12,21,0.053,22,1.037,26,0.007,27,0.007,81,2.421,82,1.875,83,1.415,84,2.174,85,0.936,86,3.344,87,2.478,88,4.259,89,2.964,90,2.964,91,3.675,92,2.082,93,2.082,94,2.747,95,2.082,96,2.082,97,2.082,98,2.082,99,2.174,100,3.602,101,4.056,102,3.996,103,4.259,104,3.15,105,2.174,106,2.174,107,2.084,108,1.167,109,0.643,110,1.222,111,3.7,112,2.174,113,2.174,114,2.174,115,2.174,116,2.174,117,2.174,118,2.174,119,4.259,120,3.15,121,3.435,122,2.174,123,1.317,124,3.886,125,3.18,126,3.396,127,2.992,128,1.415,129,2.083,130,2.992,131,1.317,132,1.95,133,1.317,134,1.95,135,1.415,136,1.317,137,1.317,138,1.415,139,1.096,140,1.317,141,1.504,142,1.95,143,1.415,144,1.234,145,1.639,146,0.984,147,1.096,148,1.317,149,1.555,150,1.415,151,1.317,152,1.317,153,1.415,154,1.317,155,1.532,156,1.532,157,1.875,158,1.532,159,2.174,160,1.679,161,3.675,162,1.415,163,1.875,164,3.002,165,2.417,166,1.679,167,1.415,168,3.435,169,2.236,170,1.096,171,1.532,172,2.236,173,1.464,174,1.234,175,1.875,176,2.174,177,1.161,178,1.679,179,2.174,180,2.174,181,3.15,182,4.176,183,4.176,184,4.176,185,4.176,186,3.738,187,4.176,188,5.249,189,4.176,190,4.176,191,1.982,192,2.174,193,3.15,194,2.174,195,3.15,196,3.15,197,2.174,198,2.174,199,1.515,200,2.174,201,2.174,202,2.174,203,2.174,204,2.174,205,2.964,206,1.875,207,1.532,208,2.174,209,2.174,210,2.174]],["title/modules/AuthModule.html",[28,1.718,40,2.47]],["body/modules/AuthModule.html",[2,2.39,3,0.188,4,0.166,5,0.125,11,0.017,16,0.718,17,0.96,20,0.232,21,0.102,26,0.012,27,0.012,28,2.816,30,2.244,31,2.385,32,2.735,33,2.735,34,2.385,35,3.77,36,4.049,40,5.012,43,4.284,44,3.615,45,2.735,46,2.735,48,3.366,81,4.385,165,4.307,166,3.245,211,3.625,212,3.625,213,3.625,214,4.202,215,4.602,216,4.602,217,4.602,218,4.202,219,4.202,220,4.202,221,5.554,222,2.244,223,4.202,224,3.245,225,2.547,226,4.202,227,4.202,228,4.202,229,4.202,230,4.202,231,3.245,232,4.202,233,4.202]],["title/injectables/AuthService.html",[75,0.867,165,2.154]],["body/injectables/AuthService.html",[3,0.097,4,0.086,5,0.065,7,0.156,8,1.022,11,0.017,12,0.656,14,1.464,15,1.03,16,0.643,17,0.496,20,0.12,21,0.053,24,2.188,26,0.007,27,0.007,56,1.679,73,0.849,75,0.785,76,0.89,87,2.644,89,2.964,90,2.964,91,2.964,94,3.554,104,3.15,107,1.977,108,1.107,109,0.559,110,1.16,120,3.431,134,1.234,141,1.946,145,1.037,157,1.875,165,1.95,173,1.741,174,1.234,175,1.875,191,2.884,199,2.459,205,4.835,206,2.964,207,4.758,224,1.679,234,1.875,235,3.435,236,3.435,237,3.435,238,3.435,239,1.555,240,1.679,241,2.824,242,2.958,243,3.29,244,2.439,245,5.868,246,5.063,247,2.174,248,3.435,249,2.174,250,3.435,251,3.411,252,3.435,253,2.174,254,3.435,255,2.174,256,4.259,257,3.435,258,2.174,259,3.435,260,2.174,261,3.435,262,2.174,263,1.639,264,3.435,265,2.174,266,1.679,267,2.174,268,2.174,269,2.653,270,3.435,271,1.234,272,1.415,273,1.234,274,1.415,275,1.834,276,1.317,277,1.555,278,1.679,279,1.555,280,1.679,281,3.194,282,2.174,283,3.435,284,2.174,285,3.435,286,2.174,287,3.435,288,2.964,289,2.174,290,2.964,291,2.174,292,2.174,293,2.174,294,2.174,295,2.174,296,3.435,297,3.949,298,3.396,299,3.435,300,3.435,301,3.435,302,3.435,303,4.259,304,3.435,305,4.259,306,3.435,307,4.259,308,2.653,309,2.515,310,2.174,311,1.317,312,1.95,313,2.421,314,1.532,315,0.935,316,2.147,317,3.435,318,2.174,319,3.435,320,3.435,321,2.174,322,2.174,323,2.174,324,2.421,325,3.435,326,3.435,327,2.174,328,2.174,329,2.174,330,1.679,331,3.435,332,3.435,333,2.174,334,3.435,335,2.174,336,3.29,337,2.174,338,1.415,339,1.95,340,2.174,341,2.174,342,1.317,343,2.964,344,1.834,345,1.875,346,2.174,347,1.875,348,2.174]],["title/classes/BaseController.html",[21,0.092,86,2.026]],["body/classes/BaseController.html",[3,0.112,4,0.1,5,0.075,7,0.18,8,1.145,11,0.017,12,0.642,14,1.485,15,1.052,16,0.537,17,0.575,20,0.139,21,0.061,24,2.418,26,0.008,27,0.008,86,2.055,92,2.833,93,2.833,94,3.378,95,2.333,96,2.833,97,2.333,98,2.333,100,3.368,101,2.972,102,3.515,107,1.934,108,1.083,109,0.623,110,1.134,111,3.122,123,1.525,124,3.607,125,3.912,126,4.049,129,2.253,130,3.567,131,2.333,132,2.185,133,1.525,134,2.653,136,2.333,137,2.333,139,1.94,140,1.525,141,1.85,142,3.203,144,3.203,145,2.955,146,1.742,147,2.356,148,2.333,149,1.742,151,2.333,152,2.333,154,2.833,170,1.268,199,2.203,349,0.782,350,2.171,351,2.516,352,2.516,353,2.516,354,2.516,355,2.516,356,2.516,357,4.675,358,2.516,359,4.675,360,2.516,361,2.516,362,2.516,363,2.516,364,0.818,365,3.849,366,2.171,367,2.516,368,1.943,369,2.171,370,2.516,371,1.773,372,2.516,373,2.171,374,2.516,375,2.516,376,2.516,377,2.516,378,2.516,379,2.516,380,2.516,381,2.516,382,2.516,383,2.516,384,2.516,385,2.516,386,2.516,387,2.516,388,2.516,389,2.516,390,2.516,391,2.516,392,2.516,393,2.516,394,2.516,395,2.516,396,2.516,397,2.516,398,2.516,399,3.849,400,3.849,401,3.849,402,2.516,403,3.849,404,2.516,405,2.185,406,2.516,407,2.516,408,2.516,409,3.321,410,2.171,411,2.171,412,2.973,413,3.849,414,2.516,415,3.849,416,2.516,417,2.516,418,3.849,419,2.516,420,2.516,421,2.516,422,2.516,423,2.171,424,2.516]],["title/classes/BaseDto.html",[21,0.092,425,1.718]],["body/classes/BaseDto.html",[3,0.266,4,0.236,5,0.177,11,0.016,20,0.328,21,0.145,26,0.015,27,0.015,349,1.848,368,4.592,425,3.119,426,5.13]],["title/classes/BaseEntity.html",[21,0.092,427,1.718]],["body/classes/BaseEntity.html",[3,0.198,4,0.176,5,0.132,7,0.318,10,2.64,11,0.017,12,0.729,16,0.423,20,0.245,21,0.108,26,0.013,27,0.013,73,2.248,109,0.705,129,3.089,141,1.789,145,2.118,315,2.749,349,1.38,364,1.443,368,3.429,427,2.606,428,3.83,429,1.374,430,6.39,431,6.39,432,6.39,433,4.074,434,4.44,435,5.544,436,6.761,437,4.44,438,4.44,439,3.129,440,3.268,441,4.44,442,4.44,443,5.758,444,4.44,445,4.44,446,4.44,447,5.758,448,2.52,449,5.758,450,5.758,451,5.758]],["title/classes/BaseService.html",[21,0.092,452,2.299]],["body/classes/BaseService.html",[3,0.113,4,0.1,5,0.075,7,0.181,8,1.149,11,0.017,12,0.69,14,1.548,16,0.539,20,0.139,21,0.062,22,1.207,24,2.423,26,0.008,27,0.008,87,2.756,107,2.079,108,1.164,109,0.672,110,1.22,141,2.145,146,1.145,147,1.275,149,2.7,182,4.881,183,4.881,184,4.881,185,4.881,186,4.369,187,4.881,188,5.773,189,4.881,190,4.881,191,2.542,199,1.375,239,1.145,263,3.369,311,3.615,314,4.204,315,2.753,349,0.786,364,0.822,425,2.561,427,1.75,452,2.343,453,2.183,454,2.985,455,3.306,456,1.948,457,1.948,458,2.516,459,2.516,460,2.516,461,2.516,462,1.948,463,2.53,464,3.615,465,2.53,466,2.985,467,2.53,468,1.436,469,2.516,470,2.53,471,2.516,472,2.53,473,2.516,474,2.53,475,3.682,476,2.516,477,2.53,478,2.516,479,2.53,480,2.516,481,2.647,482,2.53,483,1.647,484,1.647,485,4.881,486,4.531,487,4.531,488,4.531,489,4.531,490,2.183,491,2.183,492,2.53,493,1.647,494,3.866,495,2.53,496,2.53,497,4.691,498,3.866,499,4.691,500,4.691,501,2.662,502,3.866,503,2.53,504,2.53,505,2.53,506,2.53,507,2.53,508,2.53]],["title/interfaces/BasicResponseInterface.html",[139,1.913,509,1.913]],["body/interfaces/BasicResponseInterface.html",[3,0.232,4,0.206,5,0.155,7,0.372,11,0.017,15,1.23,26,0.014,27,0.014,109,0.681,125,4.061,139,3.203,141,2.135,369,6.174,371,5.044,373,6.174,429,1.517,509,2.618,510,3.38,511,4.48]],["title/entities/Competition.html",[512,1.554,513,2.47]],["body/entities/Competition.html",[3,0.213,4,0.189,5,0.142,7,0.341,10,2.58,11,0.017,12,0.713,15,1.152,16,0.574,20,0.263,21,0.116,26,0.013,27,0.013,73,2.711,85,1.299,108,1.263,109,0.661,364,1.549,427,2.728,429,1.439,440,3.94,448,3.94,501,3.42,512,2.469,513,3.923,514,2.403,515,4.114,516,2.58,517,5.104,518,4.114,519,4.248,520,4.768,521,3.923,522,4.768,523,4.768,524,2.706,525,4.768]],["title/interfaces/ControllerInterface.html",[509,1.913,526,2.674]],["body/interfaces/ControllerInterface.html",[3,0.164,4,0.145,5,0.109,7,0.263,8,1.508,11,0.017,12,0.709,14,1.639,16,0.483,20,0.202,26,0.011,27,0.011,100,3.832,101,4.295,102,4.315,107,2.135,108,1.196,109,0.626,110,1.253,111,3.51,141,2.352,142,3.296,144,3.296,170,1.851,263,3.479,315,3.1,425,3.153,456,2.556,457,2.556,462,2.927,468,3.296,481,2.927,509,1.851,510,2.39,526,3.574,527,3.168,528,4.093,529,3.574,530,3.574,531,3.672,532,3.574,533,3.672,534,2.588,535,4.093,536,3.672,537,3.574,538,3.672,539,2.588,540,3.672,541,2.588]],["title/classes/CreateCompetitionDto.html",[21,0.092,542,2.674]],["body/classes/CreateCompetitionDto.html",[3,0.231,4,0.205,5,0.154,7,0.371,11,0.017,12,0.74,15,1.211,20,0.35,21,0.155,26,0.014,27,0.014,108,1.301,109,0.653,110,1.363,349,1.609,429,1.515,516,2.791,517,5.521,542,4.471,543,3.999,544,5.178,545,5.178,546,5.178,547,3.65]],["title/classes/CreateEventDto.html",[21,0.092,548,2.674]],["body/classes/CreateEventDto.html",[3,0.199,4,0.176,5,0.132,7,0.319,11,0.017,12,0.799,15,1.246,20,0.318,21,0.14,26,0.013,27,0.013,108,1.231,109,0.706,110,1.369,349,1.383,429,1.377,516,2.642,548,4.064,549,3.437,550,5.227,551,5.227,552,5.227,553,5.227,554,5.227,555,5.227,556,4.451,557,4.451,558,4.451,559,4.451,560,4.451,561,4.451,562,4.451,563,4.451,564,3.137]],["title/classes/CreateUserDto.html",[21,0.092,565,2.299]],["body/classes/CreateUserDto.html",[3,0.204,4,0.181,5,0.136,7,0.327,11,0.017,12,0.78,15,1.159,16,0.617,20,0.324,21,0.143,26,0.013,27,0.013,109,0.689,110,1.42,275,3.863,276,2.772,309,3.263,316,3.267,339,3.679,344,3.461,349,1.422,429,1.401,565,3.557,566,3.533,567,4.568,568,4.575,569,4.575,570,4.575,571,3.093,572,4.575,573,3.093,574,4.575,575,4.575,576,3.947,577,3.947,578,2.978]],["title/classes/CreateUserPetDto.html",[21,0.092,571,1.81]],["body/classes/CreateUserPetDto.html",[3,0.145,4,0.129,5,0.097,7,0.232,11,0.017,12,0.814,15,1.241,16,0.442,20,0.256,21,0.113,26,0.01,27,0.01,108,1.079,109,0.719,110,1.49,141,1.687,173,1.716,174,1.841,349,1.008,429,1.109,433,3.081,516,2.315,571,2.217,579,2.505,580,3.593,581,4.579,582,4.579,583,4.579,584,3.593,585,3.903,586,4.178,587,3.593,588,4.579,589,4.579,590,3.593,591,3.593,592,3.593,593,4.579,594,3.593,595,3.243,596,3.243,597,3.243,598,3.243,599,3.243,600,3.243,601,3.243,602,3.826,603,3.243,604,3.243,605,3.243,606,3.243,607,3.243,608,3.243,609,3.243,610,3.243,611,3.243,612,3.243,613,3.243,614,2.286,615,1.966]],["title/classes/CreateUserProfileDto.html",[21,0.092,573,1.81]],["body/classes/CreateUserProfileDto.html",[3,0.156,4,0.138,5,0.182,7,0.25,11,0.017,12,0.81,15,1.239,16,0.466,20,0.27,21,0.119,26,0.011,27,0.011,85,1.539,109,0.715,110,1.484,173,1.668,174,1.98,342,3.711,349,1.084,425,2.773,429,1.168,433,3.207,516,2.391,541,2.458,573,2.334,580,3.711,584,3.711,585,3.476,587,3.711,590,3.711,591,3.711,592,3.711,594,3.711,616,2.694,617,4.73,618,4.317,619,4.317,620,4.73,621,3.488,622,3.488,623,3.488,624,3.488,625,3.488,626,3.488,627,3.488,628,3.982,629,3.488,630,3.488,631,3.488,632,3.488,633,3.488,634,3.488,635,3.488,636,3.488,637,2.27]],["title/entities/Event.html",[512,1.554,638,2.47]],["body/entities/Event.html",[3,0.171,4,0.152,5,0.114,7,0.274,10,2.798,11,0.017,12,0.773,15,1.204,16,0.497,20,0.211,21,0.093,26,0.011,27,0.011,73,2.798,85,1.043,108,1.16,109,0.7,129,2.245,364,1.244,427,2.362,429,1.245,440,4.172,448,4.125,501,4.068,512,2.137,514,1.929,516,2.317,518,4.501,519,4.492,521,4.479,524,2.173,550,4.584,551,4.584,552,4.584,553,4.584,554,4.584,555,4.584,638,3.396,639,3.303,640,3.828,641,3.828,642,5.217,643,3.828,644,3.828,645,3.828,646,3.828,647,3.828,648,3.828,649,3.828]],["title/modules/EventsModule.html",[28,1.718,41,2.47]],["body/modules/EventsModule.html",[2,2.342,3,0.243,4,0.216,5,0.162,11,0.017,16,0.692,17,1.243,20,0.3,21,0.133,26,0.014,27,0.014,28,2.96,30,2.907,35,3.299,41,4.256,48,3.299,50,3.837,51,2.744,513,4.256,638,3.543,650,5.444,651,5.444,652,5.444,653,5.444]],["title/entities/File.html",[5,0.113,512,1.554]],["body/entities/File.html",[3,0.156,4,0.139,5,0.221,7,0.251,10,2.614,11,0.017,12,0.722,14,1.67,15,1.16,16,0.584,20,0.193,21,0.085,26,0.011,27,0.011,64,5.776,73,2.21,85,0.954,108,1.03,109,0.637,173,1.75,277,3.175,279,3.335,312,2.784,339,2.784,344,3.276,364,1.138,427,2.221,429,1.171,440,3.482,448,4.045,512,2.009,514,1.765,524,1.987,654,3.021,655,5.776,656,6.694,657,6.135,658,3.501,659,3.501,660,3.501,661,4.905,662,3.501,663,2.704,664,4.905,665,3.501,666,5.293,667,3.021,668,4.905,669,3.501,670,3.501,671,3.788,672,4.232,673,4.232,674,2.704]],["title/injectables/JwtAuthGuard.html",[75,0.867,167,2.47]],["body/injectables/JwtAuthGuard.html",[3,0.254,4,0.225,5,0.169,11,0.017,16,0.639,17,1.298,20,0.313,21,0.138,26,0.015,27,0.015,75,1.532,76,2.328,85,1.548,167,4.367,169,3.699,222,3.035,675,4.006,676,4.006,677,4.39,678,4.904]],["title/injectables/JwtRefreshAuthGuard.html",[75,0.867,171,2.674]],["body/injectables/JwtRefreshAuthGuard.html",[3,0.252,4,0.223,5,0.168,11,0.017,16,0.635,17,1.286,20,0.31,21,0.137,26,0.015,27,0.015,75,1.524,76,2.306,85,1.533,169,3.665,171,4.703,172,4.629,222,3.006,675,3.968,676,3.968,677,4.349,678,4.858]],["title/injectables/JwtRefreshStrategy.html",[75,0.867,215,2.47]],["body/injectables/JwtRefreshStrategy.html",[3,0.186,4,0.165,5,0.124,7,0.298,8,1.641,11,0.017,12,0.595,14,1.039,15,0.656,16,0.671,17,0.951,20,0.23,21,0.101,22,1.987,24,1.625,26,0.012,27,0.012,73,1.625,75,1.261,76,1.705,85,1.134,87,2.307,100,3.324,107,1.794,108,1.004,109,0.526,110,1.052,111,2.782,156,3.89,170,2.098,172,2.71,173,1.545,177,2.223,191,1.705,199,2.203,207,3.89,215,3.593,222,2.223,225,3.345,239,1.885,240,3.216,241,3.554,251,2.934,266,3.216,297,2.934,298,2.523,308,3.216,309,2.634,412,5.093,501,2.363,679,5.343,680,3.592,681,4.263,682,4.163,683,5.52,684,4.163,685,3.592,686,4.263,687,2.71,688,4.263,689,3.592,690,3.592,691,3.592,692,3.592,693,3.592,694,4.163,695,3.592,696,4.163,697,4.163,698,4.163,699,4.163]],["title/injectables/JwtStrategy.html",[75,0.867,216,2.47]],["body/injectables/JwtStrategy.html",[3,0.199,4,0.177,5,0.133,7,0.319,8,1.718,11,0.017,12,0.623,14,1.113,16,0.668,17,1.019,20,0.246,21,0.109,22,2.129,24,1.742,26,0.013,27,0.013,75,1.319,76,1.828,85,1.215,87,2.386,107,1.877,108,1.051,109,0.55,110,1.101,156,4.071,173,1.598,177,2.382,191,1.828,199,2.054,216,3.76,222,2.382,225,3.5,239,2.02,240,3.446,241,3.623,251,3.145,266,3.446,297,3.145,298,2.704,308,3.446,309,2.756,412,4.461,501,2.532,681,4.461,685,3.849,686,3.446,687,2.904,688,3.446,689,3.849,690,3.849,691,3.849,692,3.849,693,3.849,695,3.849,700,3.849,701,4.462,702,5.776,703,4.462,704,3.849,705,3.849]],["title/injectables/LocalAuthGuard.html",[75,0.867,158,2.674]],["body/injectables/LocalAuthGuard.html",[3,0.254,4,0.225,5,0.169,11,0.017,16,0.639,17,1.298,20,0.313,21,0.138,26,0.015,27,0.015,75,1.532,76,2.328,85,1.548,158,4.729,160,4.39,222,3.035,676,4.006,677,4.39,706,4.904,707,5.684]],["title/injectables/LocalStrategy.html",[75,0.867,217,2.47]],["body/injectables/LocalStrategy.html",[3,0.205,4,0.182,5,0.137,7,0.329,8,1.751,11,0.017,12,0.635,14,1.147,15,1.141,16,0.652,17,1.05,20,0.253,21,0.112,22,2.194,24,1.795,26,0.013,27,0.013,73,1.795,75,1.345,76,1.883,85,1.252,87,2.42,107,1.914,108,1.071,109,0.561,110,1.123,156,4.151,165,4.112,166,3.551,177,2.455,217,3.833,222,2.455,239,2.082,263,2.81,297,3.241,298,2.786,309,3.1,316,3.453,681,4.548,686,3.551,687,2.993,688,3.551,704,3.967,708,3.967,709,4.598,710,4.598,711,5.889,712,4.598,713,3.967,714,4.598]],["title/classes/LoginUserDto.html",[21,0.092,104,2.47]],["body/classes/LoginUserDto.html",[3,0.249,4,0.22,5,0.165,7,0.398,11,0.017,12,0.714,15,1.153,20,0.307,21,0.135,26,0.014,27,0.014,104,4.311,109,0.631,309,3.375,316,3.566,349,1.728,429,1.581,715,4.798,716,5.561,717,5.561]],["title/interfaces/PaginationInterface.html",[146,1.718,509,1.913]],["body/interfaces/PaginationInterface.html",[3,0.249,4,0.221,5,0.166,7,0.399,11,0.017,26,0.014,27,0.014,109,0.632,141,2.361,146,3.004,410,6.324,411,6.324,429,1.584,509,2.812,510,3.631,718,4.813]],["title/classes/RefreshTokenDto.html",[21,0.092,719,2.931]],["body/classes/RefreshTokenDto.html",[3,0.243,4,0.216,5,0.162,7,0.39,10,2.125,11,0.017,12,0.587,15,1.03,16,0.623,20,0.3,21,0.159,26,0.014,27,0.014,109,0.518,349,1.692,429,1.561,719,5.051,720,4.697,721,7.01,722,5.444,723,5.444,724,5.642,725,4.204,726,6.54,727,4.204]],["title/guards/RoleGuard.html",[728,2.931,729,2.674]],["body/guards/RoleGuard.html",[3,0.19,4,0.169,5,0.127,7,0.305,8,1.667,11,0.017,12,0.676,14,1.398,15,1.118,16,0.596,17,0.973,20,0.235,21,0.104,22,2.033,24,2.446,26,0.012,27,0.012,73,1.664,75,1.28,100,2.148,107,2.036,108,1.14,109,0.596,110,1.194,173,1.063,199,2.228,239,1.929,263,2.675,275,2.275,454,3.291,628,3.951,729,3.951,730,4.262,731,3.677,732,6.914,733,5.606,734,4.262,735,7.098,736,4.262,737,4.262,738,6.655,739,4.262,740,5.606,741,6.264,742,5.606,743,6.655,744,4.262,745,4.077,746,3.677,747,3.677,748,4.262,749,4.262,750,4.262,751,4.262,752,4.262,753,4.262,754,4.262]],["title/interfaces/ServiceInterface.html",[455,2.674,509,1.913]],["body/interfaces/ServiceInterface.html",[3,0.152,4,0.135,5,0.101,7,0.244,8,1.43,11,0.017,12,0.735,14,1.701,16,0.632,20,0.188,26,0.01,27,0.01,107,2.215,108,1.24,109,0.704,110,1.3,141,2.278,146,1.54,147,1.715,149,3.003,263,3.55,311,3.378,314,3.929,315,2.607,364,1.106,425,3.086,427,1.54,455,3.388,456,2.423,457,2.423,458,3.129,459,3.129,460,3.129,461,3.129,462,2.423,466,3.713,468,1.931,469,3.129,471,3.129,473,3.129,475,4.159,476,3.129,478,3.129,480,3.129,481,2.81,483,2.215,484,2.215,485,5.513,486,5.226,487,5.226,488,5.226,489,5.226,490,4.809,491,2.935,493,2.215,509,1.715,510,2.215,524,1.931,541,2.398,755,2.935,756,3.402,757,3.402,758,3.402,759,3.402,760,3.402,761,3.402,762,3.402,763,3.402,764,3.402]],["title/classes/SignupDto.html",[21,0.092,120,2.47]],["body/classes/SignupDto.html",[3,0.215,4,0.191,5,0.143,7,0.345,11,0.017,12,0.791,15,1.186,16,0.578,20,0.266,21,0.117,26,0.013,27,0.013,109,0.698,110,1.329,120,3.949,309,3.168,316,3.347,330,5.129,339,3.769,344,3.545,349,1.498,429,1.448,567,4.68,571,3.168,573,3.168,765,4.158,766,4.819,767,4.819,768,4.819,769,4.819,770,4.819,771,4.819,772,4.819,773,4.819]],["title/classes/UpdateCompetitionDto.html",[21,0.092,547,2.674]],["body/classes/UpdateCompetitionDto.html",[3,0.23,4,0.204,5,0.153,7,0.369,11,0.017,12,0.738,15,1.21,20,0.349,21,0.154,26,0.014,27,0.014,108,1.298,109,0.651,110,1.421,349,1.6,429,1.509,516,2.786,517,5.511,542,3.629,543,3.977,547,4.456,774,5.149,775,5.149,776,5.149]],["title/classes/UpdateEventDto.html",[21,0.092,564,2.674]],["body/classes/UpdateEventDto.html",[3,0.194,4,0.172,5,0.129,7,0.311,11,0.017,12,0.795,15,1.244,20,0.313,21,0.138,26,0.012,27,0.012,108,1.22,109,0.702,110,1.479,349,1.35,429,1.355,516,2.617,548,3.061,549,3.355,550,5.178,551,5.178,552,5.178,553,5.178,554,5.178,555,5.178,564,4.001,777,4.344,778,4.344,779,4.344,780,4.344,781,4.344,782,4.344,783,4.344,784,4.344]],["title/classes/UpdateUserDto.html",[21,0.092,578,2.47]],["body/classes/UpdateUserDto.html",[3,0.229,4,0.203,5,0.153,7,0.368,11,0.017,12,0.554,15,1.152,16,0.651,20,0.348,21,0.154,26,0.014,27,0.014,109,0.489,110,1.203,275,3.648,276,3.111,309,3.401,316,2.588,339,2.914,344,2.741,349,1.596,429,1.507,565,3.111,566,3.965,567,3.619,571,3.011,573,3.011,576,4.429,577,4.429,578,4.108,785,5.134]],["title/classes/UpdateUserPetDto.html",[21,0.092,615,2.299]],["body/classes/UpdateUserPetDto.html",[3,0.144,4,0.128,5,0.096,7,0.231,11,0.017,12,0.814,15,1.241,16,0.441,20,0.255,21,0.113,26,0.01,27,0.01,108,1.076,109,0.718,110,1.497,141,1.682,173,1.713,174,1.831,349,1.003,429,1.105,433,3.072,516,2.309,571,1.539,579,2.492,580,3.584,581,4.567,582,4.567,583,4.567,584,3.584,585,3.898,586,4.168,587,3.584,588,4.567,589,4.567,590,3.584,591,3.584,592,3.584,593,4.567,594,3.584,602,3.815,614,2.274,615,2.805,786,3.226,787,3.226,788,3.226,789,3.226,790,3.226,791,3.226,792,3.226,793,3.226,794,3.226,795,3.226,796,3.226,797,3.226,798,3.226,799,3.226,800,3.226,801,3.226,802,3.226,803,3.226]],["title/classes/UpdateUserProfileDto.html",[21,0.092,637,2.47]],["body/classes/UpdateUserProfileDto.html",[3,0.158,4,0.14,5,0.183,7,0.253,11,0.017,12,0.807,15,1.24,16,0.47,20,0.272,21,0.12,26,0.011,27,0.011,85,1.548,109,0.712,110,1.49,173,1.418,174,2.003,342,3.73,349,1.097,425,2.787,429,1.177,433,3.227,516,2.403,541,2.487,573,1.684,580,3.73,584,3.73,585,3.494,587,3.73,590,3.73,591,3.73,592,3.73,594,3.73,616,2.725,617,4.754,618,4.339,619,4.339,620,4.754,628,4.007,637,3.21,804,3.529,805,3.529,806,3.529,807,3.529,808,3.529,809,3.529,810,3.529,811,3.529,812,3.529,813,3.529,814,3.529,815,3.529,816,3.529,817,3.529]],["title/controllers/UploaderController.html",[0,1.554,818,2.674]],["body/controllers/UploaderController.html",[0,1.195,2,1.256,3,0.13,4,0.116,5,0.168,7,0.209,8,1.28,10,1.139,11,0.017,12,0.702,14,1.624,15,0.991,16,0.62,17,0.667,20,0.237,21,0.071,22,1.393,26,0.009,27,0.009,63,2.057,68,2.518,83,1.9,85,1.172,86,3.641,87,1.904,92,2.608,93,2.608,94,3.202,95,2.608,96,2.608,97,2.608,98,2.608,100,3.496,101,3.694,102,3.791,107,2.115,108,1.241,109,0.66,110,1.241,111,3.587,123,1.769,124,2.608,125,3.572,126,3.814,127,3.36,128,1.9,129,2.427,130,3.36,131,1.769,132,2.442,133,1.769,134,2.442,135,1.9,136,1.769,137,1.769,138,1.9,139,1.471,140,1.769,141,1.753,142,2.442,143,1.9,144,1.656,145,2.053,146,1.321,147,1.471,148,1.769,149,1.948,150,1.9,151,1.769,152,1.769,153,1.9,154,1.769,155,2.057,162,1.9,170,2.169,177,1.558,181,1.9,191,1.195,193,1.9,195,1.9,196,1.9,199,2.14,405,1.656,602,3.603,655,2.518,674,3.948,818,3.033,819,2.254,820,2.918,821,5.111,822,2.918,823,2.918,824,2.918,825,5.641,826,2.918,827,2.918,828,2.518,829,4.303,830,2.918,831,3.098,832,2.518,833,1.9,834,3.323,835,2.518,836,2.518,837,2.518,838,2.518,839,2.518,840,2.518,841,2.518,842,2.518,843,2.518,844,2.518,845,2.518,846,2.518,847,2.918,848,2.918,849,2.918,850,2.918,851,2.918,852,2.918,853,2.918,854,4.303]],["title/modules/UploaderModule.html",[28,1.718,42,2.47]],["body/modules/UploaderModule.html",[2,2.692,3,0.226,4,0.201,5,0.186,11,0.017,16,0.694,17,1.156,20,0.279,21,0.123,26,0.014,27,0.014,28,3.074,30,2.703,31,2.873,32,3.295,33,3.295,34,2.873,35,4.115,36,3.295,42,4.832,44,4.072,45,3.295,46,3.295,48,3.068,50,3.568,51,2.552,818,4.786,831,4.499,832,4.367,833,3.295,855,4.367,856,4.367,857,5.062,858,5.062,859,5.062]],["title/injectables/UploaderService.html",[75,0.867,831,2.299]],["body/injectables/UploaderService.html",[3,0.205,4,0.182,5,0.193,7,0.329,8,1.751,11,0.017,12,0.635,14,1.147,16,0.652,17,1.05,20,0.253,21,0.112,24,1.795,26,0.013,27,0.013,51,2.318,75,1.345,76,1.883,87,2.42,107,1.914,108,1.071,109,0.561,110,1.123,191,1.883,199,2.095,239,2.082,251,3.241,281,2.786,298,2.786,364,1.494,464,4.151,514,2.318,602,4.828,674,3.551,831,3.569,833,2.993,860,3.967,861,5.889,862,4.598,863,4.598,864,5.889,865,5.889,866,4.598,867,3.241,868,4.598,869,4.598,870,4.598,871,4.598,872,4.598,873,4.598,874,4.598,875,4.598,876,4.598,877,4.598,878,4.598,879,4.598,880,4.598,881,4.598,882,4.598,883,4.598]],["title/entities/User.html",[173,0.947,512,1.554]],["body/entities/User.html",[3,0.133,4,0.118,5,0.089,7,0.214,10,2.56,11,0.017,12,0.707,14,1.583,15,1.059,16,0.64,20,0.165,21,0.126,26,0.01,27,0.01,69,3.775,73,2.371,85,0.813,108,0.543,109,0.624,110,1.087,129,1.883,132,1.695,172,2.848,173,1.784,207,4.02,275,3.663,276,1.81,277,2.749,279,3.157,309,3.028,312,3.601,313,4.472,314,3.084,316,3.198,338,1.944,339,3.237,342,2.652,344,2.766,364,0.97,427,1.981,429,1.045,439,2.105,440,3.237,448,3.237,501,3.601,512,1.793,514,1.505,521,2.848,524,1.695,666,3.775,724,2.576,725,2.306,727,2.306,884,2.576,885,6.345,886,5.704,887,2.986,888,2.986,889,4.376,890,4.376,891,2.986,892,3.775,893,2.986,894,2.986,895,4.376,896,5.18,897,2.986,898,4.376,899,2.986,900,2.986,901,2.986,902,2.986,903,4.376,904,4.376,905,3.38,906,3.38,907,2.986,908,5.18,909,4.001,910,4.001,911,4.376,912,4.376,913,4.376,914,4.376,915,2.576,916,2.576,917,2.986,918,2.986,919,2.986,920,2.986,921,2.986,922,2.986,923,2.986]],["title/entities/UserPet.html",[277,1.718,512,1.554]],["body/entities/UserPet.html",[3,0.091,4,0.08,5,0.182,7,0.145,10,2.735,11,0.017,12,0.756,14,1.748,15,1.194,16,0.485,20,0.112,21,0.049,26,0.007,27,0.007,73,2.862,85,0.552,108,1.039,109,0.685,129,1.398,141,1.583,173,1.656,277,1.471,312,1.151,364,0.659,371,4.605,427,1.471,429,0.776,433,2.641,435,3.141,439,1.429,440,3.766,448,3.976,512,1.331,514,1.022,516,2.122,519,2.867,521,4.32,524,1.151,580,2.82,581,4.198,582,4.198,583,4.198,584,2.82,585,3.708,586,3.831,587,2.82,588,3.594,589,4.198,590,2.82,591,2.465,592,2.82,593,4.198,594,2.82,614,1.429,663,1.566,671,2.51,673,2.804,687,2.115,892,1.749,905,2.51,906,2.51,909,3.141,910,3.141,924,1.749,925,2.027,926,2.804,927,2.027,928,7.194,929,2.027,930,2.027,931,2.027,932,2.027,933,5.636,934,5.636,935,2.027,936,2.027,937,2.027,938,2.027,939,2.027,940,2.027,941,2.027,942,2.027,943,2.027,944,1.749,945,2.027,946,2.804,947,2.027,948,2.027,949,2.027,950,2.027,951,1.749,952,1.566,953,1.749,954,2.027,955,3.509,956,2.027,957,1.749]],["title/controllers/UserPetsController.html",[0,1.554,958,2.674]],["body/controllers/UserPetsController.html",[0,0.811,2,0.852,3,0.089,4,0.078,5,0.059,7,0.142,8,0.948,10,1.965,11,0.017,12,0.687,14,1.59,15,0.847,16,0.539,17,0.452,20,0.109,21,0.048,22,0.945,26,0.007,27,0.007,83,1.289,85,0.869,86,3.242,87,2.523,92,1.933,93,1.933,94,2.605,95,1.933,96,1.933,97,1.933,98,1.933,100,3.612,101,4.09,102,4.017,107,2.071,108,1.159,109,0.637,110,1.215,111,3.748,123,1.2,124,3.934,125,3.052,126,3.259,127,2.872,128,1.289,129,2.166,130,3.02,131,1.2,132,1.81,133,1.2,134,1.81,135,1.289,136,1.2,137,1.2,138,1.289,139,0.998,140,1.2,141,2.149,142,3.052,143,1.289,144,2.605,145,1.522,146,0.897,147,0.998,148,1.2,149,1.444,150,1.289,151,1.2,152,1.2,153,1.289,154,1.2,155,1.396,162,2.606,164,2.822,170,0.998,173,0.796,177,1.057,178,1.53,181,3.276,191,2.062,193,3.276,195,3.276,196,3.276,199,1.79,243,1.53,244,1.608,271,3.21,272,1.289,277,2.078,278,1.53,311,1.933,312,1.81,315,2.682,324,1.396,338,2.606,344,2.451,364,0.644,405,1.81,456,2.018,457,2.018,462,2.018,468,2.273,481,2.314,483,2.076,484,3.276,493,1.289,528,2.822,529,2.822,530,1.396,532,1.396,534,1.396,535,2.822,537,1.396,539,1.396,571,2.19,615,2.782,958,2.248,959,4.154,960,1.709,961,1.981,962,1.981,963,2.463,964,1.981,965,1.981,966,2.463,967,2.463,968,1.981,969,2.463,970,1.981,971,1.53,972,3.546,973,1.53,974,1.53,975,1.53,976,1.396,977,1.981,978,1.53,979,1.53,980,1.53,981,1.709,982,1.53,983,1.53,984,3.093,985,1.981,986,3.093,987,3.093,988,3.093,989,1.981,990,1.981,991,1.981]],["title/injectables/UserPetsService.html",[75,0.867,244,1.913]],["body/injectables/UserPetsService.html",[3,0.145,4,0.129,5,0.162,7,0.232,8,1.382,11,0.017,12,0.742,14,1.677,16,0.64,17,0.741,20,0.179,21,0.079,24,1.266,26,0.01,27,0.01,51,1.635,75,1.061,76,1.329,85,1.265,87,2.769,107,2.235,108,1.251,109,0.703,110,1.311,127,3.59,141,2.138,145,2.217,149,2.956,173,0.809,191,1.329,199,1.154,239,1.468,244,2.342,263,3.281,271,2.637,277,2.103,281,1.966,315,2.7,364,1.054,425,2.103,452,4.305,456,2.342,457,2.342,458,3.024,459,3.024,460,3.024,461,3.024,462,2.342,464,3.593,469,2.111,471,2.111,473,2.111,475,3.859,476,2.111,478,2.111,480,2.111,481,2.342,571,2.829,586,2.286,615,1.966,833,2.111,867,2.286,975,2.505,992,3.589,993,2.798,994,3.243,995,3.243,996,4.646,997,4.646,998,3.589,999,4.009,1000,2.505,1001,2.505,1002,2.505,1003,2.505,1004,2.505,1005,2.798,1006,2.505,1007,3.243,1008,3.243,1009,3.243,1010,3.243,1011,4.646,1012,3.243,1013,3.243,1014,3.243,1015,3.243]],["title/entities/UserProfile.html",[279,1.718,512,1.554]],["body/entities/UserProfile.html",[3,0.1,4,0.088,5,0.188,7,0.16,10,2.714,11,0.017,12,0.75,14,1.734,15,1.181,16,0.508,20,0.123,21,0.054,26,0.008,27,0.008,73,2.82,85,0.608,108,0.972,109,0.684,129,1.865,173,1.779,279,1.588,339,3.217,342,2.977,364,0.726,371,4.721,427,1.588,429,0.838,433,1.991,435,3.348,439,1.574,440,3.669,448,3.903,501,1.991,512,1.437,514,1.125,516,2.213,519,3.055,521,4.207,524,1.267,580,2.977,584,2.977,585,3.802,587,2.977,590,2.977,591,2.627,592,2.977,594,2.977,614,1.574,617,4.378,618,3.462,619,3.462,620,4.378,628,3.055,663,1.724,667,1.926,671,2.71,672,3.027,905,2.71,906,2.71,909,1.724,910,3.348,926,3.027,933,5.779,934,5.779,944,1.926,946,3.027,951,1.926,952,1.724,953,1.926,955,3.739,957,1.926,1016,1.926,1017,3.509,1018,2.233,1019,2.233,1020,6.699,1021,2.233,1022,2.233,1023,2.233,1024,3.509,1025,2.233,1026,2.233,1027,2.233,1028,2.233,1029,3.509,1030,2.233,1031,3.509,1032,2.233,1033,2.233,1034,2.233,1035,2.233,1036,2.233,1037,2.233,1038,2.233,1039,2.233]],["title/controllers/UserProfilesController.html",[0,1.554,1040,2.674]],["body/controllers/UserProfilesController.html",[0,0.816,2,0.857,3,0.089,4,0.079,5,0.059,7,0.143,8,0.953,10,1.97,11,0.017,12,0.688,14,1.592,15,0.849,16,0.579,17,0.455,20,0.11,21,0.049,22,0.95,26,0.007,27,0.007,83,1.296,85,0.873,86,3.248,87,2.526,92,1.941,93,1.941,94,2.614,95,1.941,96,1.941,97,1.941,98,1.941,100,3.616,101,4.093,102,4.021,107,2.074,108,1.161,109,0.638,110,1.217,111,3.75,123,1.207,124,3.94,125,3.06,126,3.267,127,2.879,128,1.296,129,2.172,130,3.026,131,1.207,132,1.818,133,1.207,134,1.818,135,1.296,136,1.207,137,1.207,138,1.296,139,1.004,140,1.207,141,2.151,142,3.06,143,1.296,144,2.614,145,1.529,146,0.902,147,1.004,148,1.207,149,1.45,150,1.296,151,1.207,152,1.207,153,1.296,154,1.207,155,1.404,162,2.616,164,2.833,170,1.004,173,0.799,177,1.063,181,3.285,191,2.067,193,3.285,195,3.285,196,3.285,199,1.795,242,1.615,273,3.217,274,1.296,275,1.063,276,1.207,279,2.669,280,1.538,311,1.941,315,2.687,324,1.404,338,2.616,364,0.647,405,1.818,456,2.026,457,2.026,462,2.026,468,2.281,481,2.321,483,2.085,484,3.285,493,1.296,528,2.833,529,2.833,530,1.404,532,1.404,534,1.404,535,2.833,537,1.404,539,1.404,573,2.197,637,2.998,745,1.296,959,4.164,963,2.474,966,2.474,967,2.474,969,2.474,971,1.538,972,3.557,973,1.538,974,1.538,976,1.404,978,1.538,979,1.538,980,1.538,982,1.538,983,1.538,984,3.104,986,3.104,987,3.104,988,3.104,1040,2.258,1041,1.718,1042,1.991,1043,1.991,1044,1.991,1045,1.991,1046,1.991,1047,1.991,1048,1.538,1049,1.718,1050,1.991,1051,1.538,1052,3.204,1053,1.718,1054,1.991,1055,1.991,1056,1.991,1057,1.991]],["title/injectables/UserProfilesService.html",[75,0.867,242,1.913]],["body/injectables/UserProfilesService.html",[3,0.147,4,0.13,5,0.163,7,0.235,8,1.394,11,0.017,12,0.744,14,1.684,16,0.643,17,0.75,20,0.181,21,0.08,24,1.282,26,0.01,27,0.01,51,1.656,75,1.071,76,1.345,85,1.277,87,2.774,107,2.242,108,1.255,109,0.705,110,1.315,127,3.603,141,2.145,145,1.567,149,2.968,173,0.819,191,1.345,199,1.168,239,1.487,242,2.363,263,3.292,273,2.661,279,2.475,281,1.991,315,2.713,336,2.537,364,1.067,425,2.123,452,4.317,456,2.363,457,2.363,458,3.052,459,3.052,460,3.052,461,3.052,462,2.363,464,3.613,469,2.138,471,2.138,473,2.138,475,3.881,476,2.138,478,2.138,480,2.138,481,2.363,573,2.845,833,2.138,867,2.315,992,3.621,998,3.621,1000,2.537,1001,2.537,1002,2.537,1003,2.537,1004,2.537,1006,2.537,1048,2.537,1058,2.834,1059,3.285,1060,3.285,1061,4.689,1062,4.689,1063,4.689,1064,2.834,1065,3.285,1066,3.285,1067,3.285,1068,3.285,1069,4.689,1070,3.285,1071,3.285]],["title/controllers/UsersController.html",[0,1.554,1072,2.674]],["body/controllers/UsersController.html",[0,0.578,2,0.607,3,0.063,4,0.056,5,0.042,7,0.101,8,0.716,10,2.084,11,0.017,12,0.669,14,1.547,15,0.716,16,0.622,17,0.322,20,0.078,21,0.034,26,0.005,27,0.005,83,0.918,85,0.656,86,2.85,87,2.589,92,1.459,93,1.459,94,2.112,95,1.459,96,1.459,97,1.459,98,1.459,100,3.616,101,4.137,102,4.04,107,2.015,108,1.128,109,0.615,110,1.182,111,3.778,123,0.855,124,4.001,125,2.581,126,2.756,127,2.428,128,0.918,129,1.797,130,2.593,131,0.855,132,1.366,133,0.855,134,3.139,135,0.918,136,0.855,137,0.855,138,0.918,139,0.711,140,0.855,141,2.183,142,2.581,143,0.918,144,2.112,145,1.502,146,0.639,147,0.711,148,0.855,149,1.09,150,0.918,151,0.855,152,0.855,153,0.918,154,0.855,161,1.217,162,2.049,163,1.217,164,2.943,167,0.918,169,0.918,170,0.711,173,1.422,174,0.801,177,0.753,178,1.09,181,3.475,191,2.187,193,3.475,195,3.475,196,3.6,199,1.967,239,0.639,241,1.213,242,1.213,243,1.09,244,1.213,271,0.801,272,0.918,273,0.801,274,0.918,275,0.753,276,0.855,277,1.425,278,1.09,279,1.425,280,1.09,281,1.908,311,1.459,312,1.366,313,2.622,315,2.974,324,0.994,338,2.422,344,0.753,345,1.217,364,0.459,405,1.366,454,1.09,456,1.587,457,1.587,462,1.587,468,2.112,481,1.875,483,1.567,484,2.718,493,0.918,526,1.697,528,2.219,529,2.219,530,0.994,532,0.994,534,0.994,535,2.219,537,0.994,539,0.994,565,2.255,567,1.697,571,1.775,573,2.441,578,2.422,675,0.994,729,1.697,745,0.918,916,3.21,963,1.859,966,1.859,967,1.859,969,1.859,971,1.09,972,3.951,973,1.09,974,1.09,975,1.09,976,1.697,978,1.09,979,1.09,980,1.09,981,1.217,982,1.09,983,1.09,984,3.75,986,2.873,987,2.873,988,2.873,999,3.21,1048,1.09,1049,1.217,1051,1.09,1053,1.217,1072,1.697,1073,1.217,1074,1.411,1075,3.148,1076,3.148,1077,3.148,1078,3.148,1079,1.411,1080,1.411,1081,2.407,1082,1.411,1083,1.411,1084,2.407,1085,1.411,1086,1.411,1087,1.411,1088,1.411,1089,1.411,1090,2.407,1091,1.411,1092,1.411,1093,2.407,1094,1.411,1095,1.411,1096,1.217,1097,1.411,1098,1.411,1099,1.411,1100,1.411,1101,1.217,1102,1.411,1103,1.411,1104,1.411,1105,1.411,1106,1.411,1107,1.411,1108,1.411,1109,1.411,1110,1.411,1111,1.217,1112,1.411,1113,1.411,1114,1.411,1115,1.411,1116,1.217]],["title/modules/UsersModule.html",[28,1.718,43,2.299]],["body/modules/UsersModule.html",[2,2.322,3,0.18,4,0.159,5,0.12,11,0.017,16,0.713,17,0.919,20,0.222,21,0.098,26,0.012,27,0.012,28,2.756,30,2.149,31,2.284,32,2.619,33,2.619,34,2.284,35,3.689,36,3.963,43,4.596,44,3.512,45,2.619,46,2.619,48,2.439,50,2.836,51,2.028,173,1.004,241,3.799,242,3.799,244,3.799,271,3.063,272,2.619,273,3.063,274,2.619,277,2.443,279,2.443,958,4.291,976,3.803,1005,3.472,1040,4.291,1064,3.472,1072,4.291,1101,3.472,1117,3.472,1118,3.472,1119,3.472,1120,4.024,1121,4.024,1122,3.472,1123,5.396,1124,4.024,1125,4.024,1126,4.024]],["title/injectables/UsersService.html",[75,0.867,241,1.913]],["body/injectables/UsersService.html",[3,0.137,4,0.121,5,0.091,7,0.219,8,1.324,11,0.017,12,0.73,14,1.648,16,0.657,17,0.698,20,0.169,21,0.074,24,1.193,26,0.01,27,0.01,51,1.541,73,1.193,75,1.017,76,1.252,85,1.212,87,2.743,107,2.199,108,1.231,109,0.696,110,1.29,127,3.526,141,2.103,149,2.896,173,1.529,191,1.823,199,1.583,239,2.015,241,2.244,242,2.907,244,3.329,263,3.229,269,3.438,271,1.735,272,1.99,273,1.735,274,1.99,281,3.182,312,1.735,313,2.154,315,2.482,336,2.361,342,1.852,343,3.841,347,2.637,364,0.993,425,2.015,452,4.249,456,2.244,457,2.244,458,2.898,459,2.898,460,2.898,461,2.898,462,2.244,464,3.495,466,3.438,468,2.527,469,1.99,471,1.99,473,1.99,475,3.754,476,1.99,478,1.99,480,1.99,481,2.244,565,3.495,867,2.154,998,2.361,1000,2.361,1001,2.361,1002,2.361,1003,2.361,1004,2.361,1006,2.361,1051,4.055,1096,2.637,1111,3.841,1116,2.637,1122,2.637,1127,2.637,1128,3.057,1129,3.057,1130,4.452,1131,3.057,1132,3.057,1133,3.057,1134,3.057,1135,3.057,1136,4.452,1137,3.057,1138,4.452,1139,3.057,1140,3.057,1141,3.057]],["title/classes/ValidUserDto.html",[21,0.092,1142,2.931]],["body/classes/ValidUserDto.html",[3,0.229,4,0.203,5,0.153,7,0.368,11,0.017,12,0.789,15,1.217,20,0.283,21,0.125,26,0.014,27,0.014,109,0.697,309,3.26,315,2.94,316,3.444,349,1.596,429,1.507,618,4.816,619,4.816,1142,4.874,1143,4.429,1144,5.134,1145,5.134,1146,5.134,1147,5.134,1148,5.134]],["title/coverage.html",[1149,4.005]],["body/coverage.html",[0,2.551,1,1.999,5,0.125,6,2.447,11,0.017,18,1.719,21,0.181,26,0.009,27,0.009,34,1.61,57,2.19,75,1.616,77,2.447,81,1.999,82,2.447,86,1.514,104,1.846,109,0.27,120,1.846,139,1.429,146,1.284,158,1.999,160,2.19,165,1.61,167,1.846,169,2.742,171,1.999,172,2.742,173,0.707,215,1.846,216,1.846,217,1.846,225,1.719,231,2.19,234,2.447,241,1.429,242,1.429,244,1.429,271,2.391,273,2.391,277,1.284,279,1.284,298,1.719,350,2.447,425,1.284,426,2.447,427,1.284,428,2.447,452,1.719,453,2.447,455,1.999,509,2.804,511,2.447,512,2.551,513,1.846,515,2.447,526,1.999,527,2.447,542,1.999,543,3.254,547,1.999,548,1.999,549,3.254,564,1.999,565,1.719,566,3.254,571,1.353,573,1.353,578,1.846,579,3.254,615,1.719,616,3.254,637,1.846,638,1.846,639,2.447,654,2.447,675,2.969,676,3.542,679,2.447,680,2.447,700,2.447,706,2.447,708,2.447,715,2.447,718,2.447,719,2.19,720,2.447,728,2.19,729,1.999,731,2.447,745,1.846,755,2.447,765,2.447,818,1.999,819,3.254,831,1.719,834,2.19,860,2.447,884,2.447,924,2.447,958,1.999,959,3.254,960,2.447,992,3.254,993,2.447,1016,2.447,1040,1.999,1041,2.447,1058,2.447,1072,1.999,1073,2.447,1127,2.447,1142,2.19,1143,2.447,1149,2.19,1150,2.836,1151,2.836,1152,2.836,1153,7.906,1154,5.563,1155,5.026,1156,7.324,1157,4.213,1158,6.449,1159,2.447,1160,5.944,1161,2.447,1162,2.447,1163,2.447,1164,5.026,1165,4.213,1166,6.229,1167,4.213,1168,2.447,1169,2.836,1170,2.836,1171,4.213,1172,4.213,1173,4.213,1174,2.836,1175,2.836,1176,2.836]],["title/dependencies.html",[31,2.591,1177,2.731]],["body/dependencies.html",[11,0.017,17,1.143,21,0.151,26,0.014,27,0.014,31,2.841,51,2.523,56,3.866,61,4.319,62,4.319,170,2.523,222,2.673,224,3.866,225,3.034,269,3.866,364,1.627,687,4.398,713,4.319,725,3.866,727,3.866,746,4.319,747,4.319,828,4.319,915,4.319,1178,6.756,1179,5.006,1180,5.006,1181,5.006,1182,5.006,1183,5.006,1184,5.006,1185,5.006,1186,5.006,1187,5.006,1188,5.006,1189,5.006,1190,5.006,1191,5.006,1192,5.006,1193,5.006,1194,5.006,1195,5.006,1196,5.006,1197,5.006,1198,5.006,1199,5.006]],["title/miscellaneous/enumerations.html",[1200,1.918,1201,3.939]],["body/miscellaneous/enumerations.html",[7,0.378,11,0.017,26,0.014,27,0.014,130,4.12,173,1.602,275,3.429,366,5.542,585,3.645,1200,3.202,1201,4.559,1202,5.284,1203,5.284,1204,5.284,1205,5.284,1206,5.542,1207,5.542,1208,5.284,1209,6.423,1210,6.423,1211,5.284,1212,6.423,1213,6.423,1214,6.423]],["title/miscellaneous/functions.html",[1200,1.918,1215,3.939]],["body/miscellaneous/functions.html",[7,0.43,11,0.015,26,0.015,27,0.015,34,4.145,1168,5.181,1200,3.639,1215,5.181,1216,6.005]],["title/index.html",[7,0.227,1217,3.165,1218,3.165]],["body/index.html",[4,0.186,11,0.017,26,0.013,27,0.013,63,3.308,186,3.625,409,4.049,464,2.844,516,1.832,952,3.625,1149,3.625,1206,4.049,1207,4.049,1219,4.694,1220,4.694,1221,5.967,1222,4.694,1223,4.694,1224,4.694,1225,4.694,1226,4.694,1227,4.694,1228,6.56,1229,4.694,1230,4.694,1231,7.401,1232,4.694,1233,4.694,1234,7.284,1235,4.694,1236,5.967,1237,4.694,1238,4.694,1239,4.694,1240,5.967,1241,5.967,1242,4.694,1243,4.694,1244,4.694,1245,5.967,1246,5.967,1247,4.694,1248,4.694,1249,4.694,1250,4.694,1251,4.694,1252,4.049,1253,4.694,1254,4.694,1255,4.694,1256,4.694,1257,4.694,1258,4.694,1259,4.694,1260,4.694,1261,4.694,1262,4.049,1263,4.694,1264,4.694,1265,4.694,1266,4.694,1267,4.694,1268,4.049]],["title/modules.html",[30,2.769]],["body/modules.html",[11,0.015,26,0.015,27,0.015,29,4.006,30,3.035,40,3.699,41,3.699,42,3.699,43,3.444,1252,6.363,1269,7.375,1270,7.375,1271,7.525,1272,5.684,1273,5.684]],["title/overview.html",[1274,4.474]],["body/overview.html",[2,1.775,11,0.017,18,3.736,26,0.012,27,0.012,28,1.868,29,5.333,30,2.203,31,2.341,32,2.685,33,2.685,34,2.341,35,2.5,36,2.685,37,3.559,38,3.559,39,3.559,40,4.979,41,4.012,42,4.452,43,4.612,44,3.571,45,2.685,46,2.685,76,1.69,165,4.074,211,3.559,212,3.559,213,3.559,215,4.012,216,4.012,217,4.012,241,3.618,242,3.618,244,3.618,349,1.282,405,2.341,510,2.685,514,2.079,728,3.186,831,3.736,855,3.559,856,3.559,1117,3.559,1118,3.559,1119,3.559,1274,3.559,1275,4.125,1276,5.486,1277,4.125,1278,4.125,1279,4.125]],["title/properties.html",[429,1.09,1177,2.731]],["body/properties.html",[11,0.017,26,0.015,27,0.015,429,1.419,516,2.321,1262,5.13,1268,5.13,1280,5.946,1281,5.946,1282,5.946]],["title/miscellaneous/variables.html",[1200,1.918,1283,3.939]],["body/miscellaneous/variables.html",[5,0.16,7,0.286,11,0.017,15,0.63,24,2.097,26,0.012,27,0.012,48,3.256,55,4.635,57,4.149,63,2.817,73,1.561,87,2.001,108,0.977,109,0.618,111,2.015,129,2.913,130,3.614,147,2.015,173,0.997,199,2.158,225,3.256,231,4.149,246,6.013,263,2.563,277,1.81,279,1.81,288,4.635,290,3.449,316,2.015,330,3.087,405,2.269,423,3.449,513,2.602,514,2.015,638,2.602,705,3.449,745,3.497,819,3.087,834,4.149,835,3.449,836,3.449,837,3.449,838,3.449,839,3.449,840,3.449,841,3.449,842,3.449,843,3.449,844,3.449,845,3.449,846,3.449,1159,3.449,1161,3.449,1162,3.449,1163,3.449,1200,2.422,1283,3.449,1284,3.997,1285,3.997,1286,3.997,1287,3.997,1288,3.997,1289,3.997,1290,3.997,1291,3.997,1292,5.372,1293,5.372,1294,3.997,1295,3.997,1296,3.997,1297,5.372,1298,3.997,1299,3.997,1300,3.997,1301,3.997,1302,3.997,1303,3.997,1304,3.997,1305,3.997,1306,3.997,1307,3.997,1308,3.997,1309,3.997,1310,3.997]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":1281,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["0.30.3",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1170,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":405,"title":{},"body":{"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1277,"title":{},"body":{"overview.html":{}}}],["16).tostring(16",{"_index":844,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["16.0.3",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1278,"title":{},"body":{"overview.html":{}}}],["2.3.1",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":850,"title":{},"body":{"controllers/UploaderController.html":{}}}],["25",{"_index":966,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["3.0.1",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1279,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1275,"title":{},"body":{"overview.html":{}}}],["6",{"_index":1276,"title":{},"body":{"overview.html":{}}}],["6.3.0",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["_filters",{"_index":400,"title":{},"body":{"classes/BaseController.html":{}}}],["_filters[key",{"_index":406,"title":{},"body":{"classes/BaseController.html":{}}}],["abstract",{"_index":368,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{}}}],["accesstoken",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["account",{"_index":889,"title":{},"body":{"entities/User.html":{}}}],["address",{"_index":890,"title":{},"body":{"entities/User.html":{}}}],["admin",{"_index":1213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["afterinsert",{"_index":913,"title":{},"body":{"entities/User.html":{}}}],["afterload",{"_index":912,"title":{},"body":{"entities/User.html":{}}}],["afterupdate",{"_index":914,"title":{},"body":{"entities/User.html":{}}}],["already",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":1253,"title":{},"body":{"index.html":{}}}],["api",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["api/user/pets",{"_index":961,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["api/users",{"_index":1074,"title":{},"body":{"controllers/UsersController.html":{}}}],["api/users/profiles",{"_index":1042,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["apierrorresponse",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["apierrorresponse(res",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":724,"title":{},"body":{"classes/RefreshTokenDto.html":{},"entities/User.html":{}}}],["apiproperty()@isstring",{"_index":722,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["apisuccessresponse",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["apisuccessresponse(res",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["app",{"_index":1233,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appconfig",{"_index":689,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["appconfig().jwtexpires",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appconfig().jwtrefreshsecret",{"_index":696,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["appconfig().jwtsecret",{"_index":705,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1227,"title":{},"body":{"index.html":{}}}],["appmode",{"_index":366,"title":{},"body":{"classes/BaseController.html":{},"miscellaneous/enumerations.html":{}}}],["appmode.development",{"_index":423,"title":{},"body":{"classes/BaseController.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argon2",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["argon2.hash(data",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2.hash(userdetails.password",{"_index":1135,"title":{},"body":{"injectables/UsersService.html":{}}}],["argon2.verify",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["args",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":602,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{}}}],["array(4",{"_index":840,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(data",{"_index":414,"title":{},"body":{"classes/BaseController.html":{}}}],["assigned",{"_index":666,"title":{},"body":{"entities/File.html":{},"entities/User.html":{}}}],["async",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":676,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth/jwt",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["auth/local",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["authcontroller",{"_index":81,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":677,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":678,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{}}}],["authguard('local",{"_index":707,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1262,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":903,"title":{},"body":{"entities/User.html":{}}}],["authservice",{"_index":165,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1273,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":617,"title":{},"body":{"classes/CreateUserProfileDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserProfile.html":{}}}],["await",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":1254,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('password",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('passwords",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('user",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["base/basecontroller",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{}}}],["base/basedto",{"_index":541,"title":{},"body":{"interfaces/ControllerInterface.html":{},"classes/CreateUserProfileDto.html":{},"interfaces/ServiceInterface.html":{},"classes/UpdateUserProfileDto.html":{}}}],["base/baseentity",{"_index":524,"title":{},"body":{"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"interfaces/ServiceInterface.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["base/baseservice",{"_index":1006,"title":{},"body":{"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["basecontroller",{"_index":86,"title":{"classes/BaseController.html":{}},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["basecontroller:19",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["basecontroller:27",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["basecontroller:45",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["basecontroller:61",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["basecontroller:76",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["basecontroller:90",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["basedto",{"_index":425,"title":{"classes/BaseDto.html":{}},"body":{"classes/BaseDto.html":{},"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateUserProfileDto.html":{},"interfaces/ServiceInterface.html":{},"classes/UpdateUserProfileDto.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["baseentity",{"_index":427,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseService.html":{},"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"interfaces/ServiceInterface.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{},"coverage.html":{}}}],["baseservice",{"_index":452,"title":{"classes/BaseService.html":{}},"body":{"classes/BaseService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["baseservice:15",{"_index":998,"title":{},"body":{"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["baseservice:21",{"_index":1131,"title":{},"body":{"injectables/UsersService.html":{}}}],["baseservice:31",{"_index":1002,"title":{},"body":{"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["baseservice:44",{"_index":1003,"title":{},"body":{"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["baseservice:58",{"_index":1004,"title":{},"body":{"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["baseservice:71",{"_index":1001,"title":{},"body":{"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["baseservice:77",{"_index":1000,"title":{},"body":{"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["basicresponseinterface",{"_index":139,"title":{"interfaces/BasicResponseInterface.html":{}},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BasicResponseInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["between",{"_index":357,"title":{},"body":{"classes/BaseController.html":{}}}],["bigint",{"_index":443,"title":{},"body":{"classes/BaseEntity.html":{}}}],["birthdate",{"_index":580,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["birthday",{"_index":926,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["body",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":628,"title":{},"body":{"classes/CreateUserProfileDto.html":{},"guards/RoleGuard.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserProfile.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":581,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"entities/UserPet.html":{}}}],["breeding",{"_index":582,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"entities/UserPet.html":{}}}],["browse",{"_index":1271,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1269,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1222,"title":{},"body":{"index.html":{}}}],["callback",{"_index":835,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["callback(null",{"_index":845,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["canactivate",{"_index":732,"title":{},"body":{"guards/RoleGuard.html":{}}}],["canactivate(context",{"_index":737,"title":{},"body":{"guards/RoleGuard.html":{}}}],["catch",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["check",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":21,"title":{"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"classes/ValidUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"entities/Competition.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":349,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"classes/ValidUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_uploadermodule",{"_index":855,"title":{},"body":{"modules/UploaderModule.html":{},"overview.html":{}}}],["cluster_uploadermodule_providers",{"_index":856,"title":{},"body":{"modules/UploaderModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1117,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1118,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1119,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["color",{"_index":583,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"entities/UserPet.html":{}}}],["column",{"_index":448,"title":{},"body":{"classes/BaseEntity.html":{},"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["column('enum",{"_index":905,"title":{},"body":{"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["column({default",{"_index":1027,"title":{},"body":{"entities/UserProfile.html":{}}}],["column({nullable",{"_index":521,"title":{},"body":{"entities/Competition.html":{},"entities/Event.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["column({type",{"_index":518,"title":{},"body":{"entities/Competition.html":{},"entities/Event.html":{}}}],["column({unique",{"_index":887,"title":{},"body":{"entities/User.html":{}}}],["comment",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{}}}],["competition",{"_index":513,"title":{"entities/Competition.html":{}},"body":{"entities/Competition.html":{},"modules/EventsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["competitions",{"_index":525,"title":{},"body":{"entities/Competition.html":{}}}],["config/jwt.config",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{}}}],["config/typeorm.config",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('app_mode",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('db_host",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('db_name",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('db_password",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('db_port",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('db_username",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmpassword",{"_index":567,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{}}}],["console.log('123",{"_index":1109,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log('leca",{"_index":869,"title":{},"body":{"injectables/UploaderService.html":{}}}],["console.log(file.originalname",{"_index":873,"title":{},"body":{"injectables/UploaderService.html":{}}}],["console.log(user",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"guards/RoleGuard.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants/appmode",{"_index":367,"title":{},"body":{"classes/BaseController.html":{}}}],["constants/gender",{"_index":614,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["constants/role",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["constructor",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectrepository(file",{"_index":868,"title":{},"body":{"injectables/UploaderService.html":{}}}],["constructor(@injectrepository(userpet",{"_index":1007,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["constructor(@injectrepository(userprofile",{"_index":1065,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["constructor(authservice",{"_index":709,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(filerepository",{"_index":862,"title":{},"body":{"injectables/UploaderService.html":{}}}],["constructor(petrepository",{"_index":994,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{}}}],["constructor(reflector",{"_index":734,"title":{},"body":{"guards/RoleGuard.html":{}}}],["constructor(repository",{"_index":463,"title":{},"body":{"classes/BaseService.html":{}}}],["constructor(userprofilerepository",{"_index":1059,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["constructor(userrepository",{"_index":1128,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["context",{"_index":740,"title":{},"body":{"guards/RoleGuard.html":{}}}],["context.gethandler",{"_index":750,"title":{},"body":{"guards/RoleGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":751,"title":{},"body":{"guards/RoleGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('api/user/pets",{"_index":977,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["controller('api/users",{"_index":1102,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('api/users/profiles",{"_index":1050,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["controller('auth",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('uploader",{"_index":847,"title":{},"body":{"controllers/UploaderController.html":{}}}],["controller/auth/auth.controller",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/uploader/uploader.controller",{"_index":858,"title":{},"body":{"modules/UploaderModule.html":{}}}],["controller/user",{"_index":1123,"title":{},"body":{"modules/UsersModule.html":{}}}],["controller/users/users.controller",{"_index":1121,"title":{},"body":{"modules/UsersModule.html":{}}}],["controllerinterface",{"_index":526,"title":{"interfaces/ControllerInterface.html":{}},"body":{"interfaces/ControllerInterface.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":1149,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":456,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(createdto",{"_index":466,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UsersService.html":{}}}],["create(createpetdto",{"_index":997,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["create(profiledata",{"_index":1062,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["create(req",{"_index":530,"title":{},"body":{"interfaces/ControllerInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["createat",{"_index":430,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createcompetitiondto",{"_index":542,"title":{"classes/CreateCompetitionDto.html":{}},"body":{"classes/CreateCompetitionDto.html":{},"classes/UpdateCompetitionDto.html":{},"coverage.html":{}}}],["createdatecolumn",{"_index":449,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createdatecolumn({type",{"_index":434,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createdto",{"_index":468,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createeventdto",{"_index":548,"title":{"classes/CreateEventDto.html":{}},"body":{"classes/CreateEventDto.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["createfiles",{"_index":861,"title":{},"body":{"injectables/UploaderService.html":{}}}],["createfiles(files",{"_index":865,"title":{},"body":{"injectables/UploaderService.html":{}}}],["createpetdto",{"_index":999,"title":{},"body":{"injectables/UserPetsService.html":{},"controllers/UsersController.html":{}}}],["createpetdto.images",{"_index":1012,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["createpetdto.images?.length",{"_index":1011,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["createpetdto.user",{"_index":1013,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["createuserdto",{"_index":565,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserpet",{"_index":1075,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserpet(req",{"_index":1080,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserpetdto",{"_index":571,"title":{"classes/CreateUserPetDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["createuserprofile",{"_index":1076,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserprofile(req",{"_index":1083,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserprofiledto",{"_index":573,"title":{"classes/CreateUserProfileDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["current_timestamp",{"_index":436,"title":{},"body":{"classes/BaseEntity.html":{}}}],["data",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["data.filter(boolean",{"_index":416,"title":{},"body":{"classes/BaseController.html":{}}}],["data].filter(boolean",{"_index":417,"title":{},"body":{"classes/BaseController.html":{}}}],["database",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":433,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["datetime",{"_index":435,"title":{},"body":{"classes/BaseEntity.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseEntity.html":{},"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"classes/RefreshTokenDto.html":{},"controllers/UploaderController.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["decorators/roles.decorator",{"_index":1049,"title":{},"body":{"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"classes/BaseEntity.html":{},"entities/Event.html":{},"controllers/UploaderController.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{}}}],["delete",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":963,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["deletedat",{"_index":431,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deletedatecolumn",{"_index":451,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deletedatecolumn({type",{"_index":438,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deleteonebyid",{"_index":457,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteonebyid(id",{"_index":469,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["deleteonebyid(req",{"_index":532,"title":{},"body":{"interfaces/ControllerInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["deleteresult",{"_index":483,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["deletesoftonebyid",{"_index":458,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["deletesoftonebyid(id",{"_index":471,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["denied",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":516,"title":{},"body":{"entities/Competition.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":852,"title":{},"body":{"controllers/UploaderController.html":{}}}],["development",{"_index":1206,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["disable",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{}}}],["diskstorage",{"_index":829,"title":{},"body":{"controllers/UploaderController.html":{}}}],["documentation",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["dog",{"_index":928,"title":{},"body":{"entities/UserPet.html":{}}}],["dotenv",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["dtos/loginuser.dto",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dtos/signup.dto",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dtos/user.dto",{"_index":1096,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/userpet.dto",{"_index":975,"title":{},"body":{"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UsersController.html":{}}}],["dtos/userprofile.dto",{"_index":1048,"title":{},"body":{"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{}}}],["e2e",{"_index":1242,"title":{},"body":{"index.html":{}}}],["editfilename",{"_index":834,"title":{},"body":{"controllers/UploaderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["efficient",{"_index":1223,"title":{},"body":{"index.html":{}}}],["email",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/ValidUserDto.html":{}}}],["entities",{"_index":514,"title":{},"body":{"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities.push(fileentity",{"_index":882,"title":{},"body":{"injectables/UploaderService.html":{}}}],["entity",{"_index":512,"title":{"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}},"body":{"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{},"coverage.html":{}}}],["enum",{"_index":906,"title":{},"body":{"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["enumerations",{"_index":1201,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eq",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["equal",{"_index":358,"title":{},"body":{"classes/BaseController.html":{}}}],["equal(value",{"_index":377,"title":{},"body":{"classes/BaseController.html":{}}}],["err",{"_index":854,"title":{},"body":{"controllers/UploaderController.html":{}}}],["error",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["error?.detail",{"_index":420,"title":{},"body":{"classes/BaseController.html":{}}}],["error?.message",{"_index":421,"title":{},"body":{"classes/BaseController.html":{}}}],["eslint",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{}}}],["eslint/ban",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{}}}],["event",{"_index":638,"title":{"entities/Event.html":{}},"body":{"entities/Event.html":{},"modules/EventsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventregistration",{"_index":955,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["eventregistration.user",{"_index":956,"title":{},"body":{"entities/UserPet.html":{}}}],["eventregistration.userprofile",{"_index":1039,"title":{},"body":{"entities/UserProfile.html":{}}}],["eventregistrations",{"_index":957,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["events",{"_index":649,"title":{},"body":{"entities/Event.html":{}}}],["eventsmodule",{"_index":41,"title":{"modules/EventsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["exclude",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["executioncontext",{"_index":738,"title":{},"body":{"guards/RoleGuard.html":{}}}],["exist",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/ControllerInterface.html":{},"injectables/JwtRefreshStrategy.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["extends",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"entities/Competition.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["extractjwt",{"_index":685,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":692,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["facebookurl",{"_index":584,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["false",{"_index":501,"title":{},"body":{"classes/BaseService.html":{},"entities/Competition.html":{},"entities/Event.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"entities/UserProfile.html":{}}}],["female",{"_index":1209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{"entities/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.filename",{"_index":881,"title":{},"body":{"injectables/UploaderService.html":{}}}],["file.mimetype",{"_index":879,"title":{},"body":{"injectables/UploaderService.html":{}}}],["file.originalname",{"_index":875,"title":{},"body":{"injectables/UploaderService.html":{}}}],["file.originalname.split('.').at",{"_index":838,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["file.originalname.split('.')[0",{"_index":836,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["file.path",{"_index":877,"title":{},"body":{"injectables/UploaderService.html":{}}}],["file.pet",{"_index":954,"title":{},"body":{"entities/UserPet.html":{}}}],["file.pet)@joincolumn",{"_index":936,"title":{},"body":{"entities/UserPet.html":{}}}],["file.userprofile",{"_index":1017,"title":{},"body":{"entities/UserProfile.html":{}}}],["fileentity",{"_index":872,"title":{},"body":{"injectables/UploaderService.html":{}}}],["fileentity.filename",{"_index":880,"title":{},"body":{"injectables/UploaderService.html":{}}}],["fileentity.mimetype",{"_index":878,"title":{},"body":{"injectables/UploaderService.html":{}}}],["fileentity.orginalname",{"_index":874,"title":{},"body":{"injectables/UploaderService.html":{}}}],["fileentity.path",{"_index":876,"title":{},"body":{"injectables/UploaderService.html":{}}}],["fileextname",{"_index":837,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":655,"title":{},"body":{"entities/File.html":{},"controllers/UploaderController.html":{}}}],["filerepository",{"_index":864,"title":{},"body":{"injectables/UploaderService.html":{}}}],["files",{"_index":674,"title":{},"body":{"entities/File.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{}}}],["files.foreach(file",{"_index":871,"title":{},"body":{"injectables/UploaderService.html":{}}}],["filesinterceptor",{"_index":827,"title":{},"body":{"controllers/UploaderController.html":{}}}],["fill(null",{"_index":841,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":401,"title":{},"body":{"classes/BaseController.html":{}}}],["filters",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["findall",{"_index":459,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["findall(params",{"_index":473,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["findoneby",{"_index":460,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["findoneby(params",{"_index":476,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["findonebyid",{"_index":461,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":478,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["findoptionsrelationbystring",{"_index":488,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{}}}],["findoptionsrelations",{"_index":489,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{}}}],["findoptionsselect",{"_index":487,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{}}}],["findoptionsselectbystring",{"_index":486,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{}}}],["findoptionswhere",{"_index":485,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{}}}],["first",{"_index":1024,"title":{},"body":{"entities/UserProfile.html":{}}}],["firstname",{"_index":618,"title":{},"body":{"classes/CreateUserProfileDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserProfile.html":{},"classes/ValidUserDto.html":{}}}],["forbiddenexception",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('access",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":1221,"title":{},"body":{"index.html":{}}}],["function",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1215,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":585,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{},"miscellaneous/enumerations.html":{}}}],["gender.male",{"_index":951,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["get(':id",{"_index":967,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["get(':id/pets",{"_index":1090,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id/profiles",{"_index":1093,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('authorization",{"_index":697,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["get('logout",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('refresh",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["getall",{"_index":528,"title":{},"body":{"interfaces/ControllerInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["getall(req",{"_index":534,"title":{},"body":{"interfaces/ControllerInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["getbasicdataforresponse",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["getbasicdataforresponse(req",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getonebyid",{"_index":529,"title":{},"body":{"interfaces/ControllerInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["getonebyid(req",{"_index":537,"title":{},"body":{"interfaces/ControllerInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["getprimaryprofile",{"_index":920,"title":{},"body":{"entities/User.html":{}}}],["getting",{"_index":1217,"title":{"index.html":{}},"body":{}}],["gettokens",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettokens(userdata",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserpets",{"_index":1077,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserpets(req",{"_index":1089,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserprofiles",{"_index":1078,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserprofiles(req",{"_index":1092,"title":{},"body":{"controllers/UsersController.html":{}}}],["graph",{"_index":1272,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1249,"title":{},"body":{"index.html":{}}}],["gt",{"_index":383,"title":{},"body":{"classes/BaseController.html":{}}}],["gte",{"_index":386,"title":{},"body":{"classes/BaseController.html":{}}}],["guard",{"_index":728,"title":{"guards/RoleGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard/jwt",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["guard/local",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["guard/role/role.guard",{"_index":1100,"title":{},"body":{"controllers/UsersController.html":{}}}],["guards",{"_index":730,"title":{},"body":{"guards/RoleGuard.html":{}}}],["gwngwenewn1jf981jnv29en",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashdata",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashdata(data",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashedrefreshtoken",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":1259,"title":{},"body":{"index.html":{}}}],["host",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":1266,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["httpstatus.bad_request",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["httpstatus.ok",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["id",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{}}}],["identifier",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{}}}],["ignoreexpiration",{"_index":693,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["images",{"_index":586,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"entities/UserPet.html":{},"injectables/UserPetsService.html":{}}}],["implements",{"_index":454,"title":{},"body":{"classes/BaseService.html":{},"guards/RoleGuard.html":{},"controllers/UsersController.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["incorrect",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{}}}],["inherited",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":75,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":76,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":867,"title":{},"body":{"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(user",{"_index":1132,"title":{},"body":{"injectables/UsersService.html":{}}}],["instagramurl",{"_index":587,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["installation",{"_index":1230,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1232,"title":{},"body":{"index.html":{}}}],["interface",{"_index":509,"title":{"interfaces/BasicResponseInterface.html":{},"interfaces/ControllerInterface.html":{},"interfaces/PaginationInterface.html":{},"interfaces/ServiceInterface.html":{}},"body":{"interfaces/BasicResponseInterface.html":{},"interfaces/ControllerInterface.html":{},"interfaces/PaginationInterface.html":{},"interfaces/ServiceInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":510,"title":{},"body":{"interfaces/BasicResponseInterface.html":{},"interfaces/ControllerInterface.html":{},"interfaces/PaginationInterface.html":{},"interfaces/ServiceInterface.html":{},"overview.html":{}}}],["interfaces/controller.interface",{"_index":1099,"title":{},"body":{"controllers/UsersController.html":{}}}],["interfaces/service.interface",{"_index":492,"title":{},"body":{"classes/BaseService.html":{}}}],["ip",{"_index":373,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BasicResponseInterface.html":{}}}],["isglobal",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["isnull",{"_index":359,"title":{},"body":{"classes/BaseController.html":{}}}],["isoptional",{"_index":896,"title":{},"body":{"entities/User.html":{}}}],["isprimary",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserProfileDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"entities/UserProfile.html":{},"injectables/UsersService.html":{}}}],["isstring",{"_index":726,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["item",{"_index":504,"title":{},"body":{"classes/BaseService.html":{}}}],["join",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"controllers/UploaderController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["join(__dirname",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["joincolumn",{"_index":673,"title":{},"body":{"entities/File.html":{},"entities/UserPet.html":{}}}],["jointable",{"_index":910,"title":{},"body":{"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["json.stringify(files",{"_index":870,"title":{},"body":{"injectables/UploaderService.html":{}}}],["jwt",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":167,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtconfig",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":691,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync(jwtconfig",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleasyncoptions",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtrefreshauthguard",{"_index":171,"title":{"injectables/JwtRefreshAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshAuthGuard.html":{},"coverage.html":{}}}],["jwtrefreshstrategy",{"_index":215,"title":{"injectables/JwtRefreshStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtservice",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":216,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1263,"title":{},"body":{"index.html":{}}}],["key",{"_index":399,"title":{},"body":{"classes/BaseController.html":{}}}],["last",{"_index":1031,"title":{},"body":{"entities/UserProfile.html":{}}}],["lastname",{"_index":619,"title":{},"body":{"classes/CreateUserProfileDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserProfile.html":{},"classes/ValidUserDto.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["lessthan",{"_index":360,"title":{},"body":{"classes/BaseController.html":{}}}],["lessthan(value",{"_index":391,"title":{},"body":{"classes/BaseController.html":{}}}],["lessthanorequal",{"_index":361,"title":{},"body":{"classes/BaseController.html":{}}}],["lessthanorequal(value",{"_index":394,"title":{},"body":{"classes/BaseController.html":{}}}],["license",{"_index":1268,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1246,"title":{},"body":{"index.html":{}}}],["like(value.replaceall",{"_index":379,"title":{},"body":{"classes/BaseController.html":{}}}],["limit",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/ControllerInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["line",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{}}}],["list",{"_index":895,"title":{},"body":{"entities/User.html":{}}}],["literal",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["local",{"_index":713,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":158,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":217,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["locationcity",{"_index":550,"title":{},"body":{"classes/CreateEventDto.html":{},"entities/Event.html":{},"classes/UpdateEventDto.html":{}}}],["locationcountry",{"_index":551,"title":{},"body":{"classes/CreateEventDto.html":{},"entities/Event.html":{},"classes/UpdateEventDto.html":{}}}],["locationdescription",{"_index":552,"title":{},"body":{"classes/CreateEventDto.html":{},"entities/Event.html":{},"classes/UpdateEventDto.html":{}}}],["locationnumber",{"_index":553,"title":{},"body":{"classes/CreateEventDto.html":{},"entities/Event.html":{},"classes/UpdateEventDto.html":{}}}],["locationpostalcode",{"_index":554,"title":{},"body":{"classes/CreateEventDto.html":{},"entities/Event.html":{},"classes/UpdateEventDto.html":{}}}],["locationstreet",{"_index":555,"title":{},"body":{"classes/CreateEventDto.html":{},"entities/Event.html":{},"classes/UpdateEventDto.html":{}}}],["login",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginuser",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginuserdto",{"_index":104,"title":{"classes/LoginUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["logout",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(@req",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(userid",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["lt",{"_index":389,"title":{},"body":{"classes/BaseController.html":{}}}],["lte",{"_index":392,"title":{},"body":{"classes/BaseController.html":{}}}],["main",{"_index":1029,"title":{},"body":{"entities/UserProfile.html":{}}}],["male",{"_index":1210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manytoone",{"_index":671,"title":{},"body":{"entities/File.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["manytoone(undefined",{"_index":663,"title":{},"body":{"entities/File.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["map",{"_index":842,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matchroles",{"_index":733,"title":{},"body":{"guards/RoleGuard.html":{}}}],["matchroles(roles",{"_index":742,"title":{},"body":{"guards/RoleGuard.html":{}}}],["math.round(math.random",{"_index":843,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":934,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["metadata",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":369,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BasicResponseInterface.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mimetype",{"_index":656,"title":{},"body":{"entities/File.html":{}}}],["miscellaneous",{"_index":1200,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1245,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1236,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/events/events.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/uploader/uploader.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1258,"title":{},"body":{"index.html":{}}}],["morethan",{"_index":362,"title":{},"body":{"classes/BaseController.html":{}}}],["morethan(value",{"_index":385,"title":{},"body":{"classes/BaseController.html":{}}}],["morethanorequal",{"_index":363,"title":{},"body":{"classes/BaseController.html":{}}}],["morethanorequal(value",{"_index":388,"title":{},"body":{"classes/BaseController.html":{}}}],["multer",{"_index":830,"title":{},"body":{"controllers/UploaderController.html":{}}}],["mysql",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql2",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":1264,"title":{},"body":{"index.html":{}}}],["name",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserPetDto.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserPetDto.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nbetween",{"_index":380,"title":{},"body":{"classes/BaseController.html":{}}}],["neq",{"_index":376,"title":{},"body":{"classes/BaseController.html":{}}}],["nest",{"_index":1228,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1267,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"modules/EventsModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/common/decorators",{"_index":1097,"title":{},"body":{"controllers/UsersController.html":{}}}],["nestjs/config",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":746,"title":{},"body":{"guards/RoleGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":828,"title":{},"body":{"controllers/UploaderController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":725,"title":{},"body":{"classes/RefreshTokenDto.html":{},"entities/User.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UploaderService.html":{},"coverage.html":{}}}],["newpet",{"_index":1009,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["newpet.images.push(...createpetdto.images.map(id",{"_index":1014,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["newuser",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["newuser.avatar",{"_index":1070,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["newuser.id",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["newuser.password",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["newuser.pets.push(await",{"_index":1139,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.profiles.push(await",{"_index":1137,"title":{},"body":{"injectables/UsersService.html":{}}}],["next",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{}}}],["ngt",{"_index":384,"title":{},"body":{"classes/BaseController.html":{}}}],["ngte",{"_index":387,"title":{},"body":{"classes/BaseController.html":{}}}],["nickname",{"_index":620,"title":{},"body":{"classes/CreateUserProfileDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserProfile.html":{}}}],["nisnull",{"_index":395,"title":{},"body":{"classes/BaseController.html":{}}}],["nlike",{"_index":378,"title":{},"body":{"classes/BaseController.html":{}}}],["nlt",{"_index":390,"title":{},"body":{"classes/BaseController.html":{}}}],["nlte",{"_index":393,"title":{},"body":{"classes/BaseController.html":{}}}],["node.js",{"_index":1220,"title":{},"body":{"index.html":{}}}],["not(types[type",{"_index":397,"title":{},"body":{"classes/BaseController.html":{}}}],["null",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseEntity.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{}}}],["nullable",{"_index":440,"title":{},"body":{"classes/BaseEntity.html":{},"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["number",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateUserPetDto.html":{},"interfaces/PaginationInterface.html":{},"interfaces/ServiceInterface.html":{},"classes/UpdateUserPetDto.html":{},"controllers/UploaderController.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["object.entries(filters",{"_index":402,"title":{},"body":{"classes/BaseController.html":{}}}],["object.keys(value).length",{"_index":404,"title":{},"body":{"classes/BaseController.html":{}}}],["observable",{"_index":741,"title":{},"body":{"guards/RoleGuard.html":{}}}],["onetomany",{"_index":909,"title":{},"body":{"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["onetomany(undefined",{"_index":892,"title":{},"body":{"entities/User.html":{},"entities/UserPet.html":{}}}],["onetoone",{"_index":672,"title":{},"body":{"entities/File.html":{},"entities/UserProfile.html":{}}}],["onetoone(undefined",{"_index":667,"title":{},"body":{"entities/File.html":{},"entities/UserProfile.html":{}}}],["open",{"_index":1247,"title":{},"body":{"index.html":{}}}],["optional",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options/findoptionsrelations",{"_index":491,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{}}}],["options/findoptionsselect",{"_index":764,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["options/findoptionswhere",{"_index":763,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["orginal",{"_index":661,"title":{},"body":{"entities/File.html":{}}}],["orginalname",{"_index":657,"title":{},"body":{"entities/File.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":1274,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":946,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["package",{"_index":1177,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/ControllerInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["pagination",{"_index":493,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["paginationfragment",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["paginationfragment(limit",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["paginationinterface",{"_index":146,"title":{"interfaces/PaginationInterface.html":{}},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/PaginationInterface.html":{},"interfaces/ServiceInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["paging",{"_index":494,"title":{},"body":{"classes/BaseService.html":{}}}],["param",{"_index":971,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":984,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":475,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["params.pagination",{"_index":495,"title":{},"body":{"classes/BaseService.html":{}}}],["params.relations",{"_index":497,"title":{},"body":{"classes/BaseService.html":{}}}],["params.select",{"_index":499,"title":{},"body":{"classes/BaseService.html":{}}}],["params.where",{"_index":498,"title":{},"body":{"classes/BaseService.html":{}}}],["parseintpipe",{"_index":972,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["passport",{"_index":687,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/UserPet.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportnumber",{"_index":588,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"entities/UserPet.html":{}}}],["passportstrategy",{"_index":688,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":704,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":694,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["password",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/ValidUserDto.html":{},"miscellaneous/variables.html":{}}}],["passwordmatches",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordsmatch",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["patch",{"_index":973,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":969,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["path",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"entities/File.html":{}}}],["payload",{"_index":412,"title":{},"body":{"classes/BaseController.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.dev",{"_index":424,"title":{},"body":{"classes/BaseController.html":{}}}],["payload.error",{"_index":419,"title":{},"body":{"classes/BaseController.html":{}}}],["payload.items",{"_index":415,"title":{},"body":{"classes/BaseController.html":{}}}],["personality",{"_index":589,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"entities/UserPet.html":{}}}],["pet",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"entities/File.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserPetsController.html":{},"controllers/UsersController.html":{}}}],["pet.user",{"_index":918,"title":{},"body":{"entities/User.html":{}}}],["pet.user)@jointable",{"_index":893,"title":{},"body":{"entities/User.html":{}}}],["petrepository",{"_index":996,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["pets",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"entities/File.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["pets.controller",{"_index":1125,"title":{},"body":{"modules/UsersModule.html":{}}}],["pets.controller.ts",{"_index":960,"title":{},"body":{"controllers/UserPetsController.html":{},"coverage.html":{}}}],["pets.controller.ts:21",{"_index":965,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["pets.controller.ts:43",{"_index":968,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["pets.controller.ts:61",{"_index":962,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["pets.controller.ts:77",{"_index":970,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["pets.controller.ts:97",{"_index":964,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["pets.service",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserPetsController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["pets.service.ts",{"_index":993,"title":{},"body":{"injectables/UserPetsService.html":{},"coverage.html":{}}}],["pets.service.ts:10",{"_index":995,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["pets/user",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["petservice",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserPetsController.html":{},"controllers/UsersController.html":{}}}],["player",{"_index":1020,"title":{},"body":{"entities/UserProfile.html":{}}}],["please",{"_index":1256,"title":{},"body":{"index.html":{}}}],["polska",{"_index":642,"title":{},"body":{"entities/Event.html":{}}}],["port",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["post(':id/pets",{"_index":1081,"title":{},"body":{"controllers/UsersController.html":{}}}],["post(':id/profiles",{"_index":1084,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('login",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload",{"_index":848,"title":{},"body":{"controllers/UploaderController.html":{}}}],["post('upload')@useinterceptors(undefined",{"_index":823,"title":{},"body":{"controllers/UploaderController.html":{}}}],["prefix",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":447,"title":{},"body":{"classes/BaseEntity.html":{}}}],["primarygeneratedcolumn({type",{"_index":442,"title":{},"body":{"classes/BaseEntity.html":{}}}],["primaryprofile",{"_index":886,"title":{},"body":{"entities/User.html":{}}}],["private",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":365,"title":{},"body":{"classes/BaseController.html":{}}}],["process.env.app_mode",{"_index":422,"title":{},"body":{"classes/BaseController.html":{}}}],["process.env.jwt_secret",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1207,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["profile",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"entities/File.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"entities/UserProfile.html":{}}}],["profile.isprimary",{"_index":923,"title":{},"body":{"entities/User.html":{}}}],["profile.user",{"_index":919,"title":{},"body":{"entities/User.html":{}}}],["profile.user)@jointable",{"_index":899,"title":{},"body":{"entities/User.html":{}}}],["profiledata",{"_index":1063,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["profiledata.avatar",{"_index":1069,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["profiledata?.user",{"_index":1068,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["profiles",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["profiles.controller",{"_index":1124,"title":{},"body":{"modules/UsersModule.html":{}}}],["profiles.controller.ts",{"_index":1041,"title":{},"body":{"controllers/UserProfilesController.html":{},"coverage.html":{}}}],["profiles.controller.ts:18",{"_index":1045,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["profiles.controller.ts:39",{"_index":1046,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["profiles.controller.ts:57",{"_index":1043,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["profiles.controller.ts:73",{"_index":1047,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["profiles.controller.ts:93",{"_index":1044,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["profiles.service",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["profiles.service.ts",{"_index":1058,"title":{},"body":{"injectables/UserProfilesService.html":{},"coverage.html":{}}}],["profiles.service.ts:11",{"_index":1060,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["profiles/user",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["progressive",{"_index":1219,"title":{},"body":{"index.html":{}}}],["project",{"_index":1248,"title":{},"body":{"index.html":{}}}],["promise",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["properties",{"_index":429,"title":{"properties.html":{}},"body":{"classes/BaseEntity.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"entities/File.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{},"classes/ValidUserDto.html":{},"properties.html":{}}}],["protected",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":885,"title":{},"body":{"entities/User.html":{}}}],["q",{"_index":535,"title":{},"body":{"interfaces/ControllerInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["query",{"_index":974,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["query('limit",{"_index":978,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["query('page",{"_index":979,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["query('q",{"_index":980,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["randomname",{"_index":839,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["randomname}.${fileextname",{"_index":846,"title":{},"body":{"controllers/UploaderController.html":{},"miscellaneous/variables.html":{}}}],["rank",{"_index":908,"title":{},"body":{"entities/User.html":{}}}],["ranks.admin",{"_index":1105,"title":{},"body":{"controllers/UsersController.html":{}}}],["ranks.super_admin",{"_index":1106,"title":{},"body":{"controllers/UsersController.html":{}}}],["ranks.user",{"_index":1107,"title":{},"body":{"controllers/UsersController.html":{}}}],["read",{"_index":1257,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":735,"title":{},"body":{"guards/RoleGuard.html":{}}}],["refresh",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"entities/User.html":{},"coverage.html":{}}}],["refresh.strategy",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["refresh.strategy.ts",{"_index":680,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"coverage.html":{}}}],["refresh.strategy.ts:12",{"_index":682,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["refresh.strategy.ts:22",{"_index":684,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["refresh_token",{"_index":721,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["refreshtoken",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"entities/User.html":{}}}],["refreshtokendto",{"_index":719,"title":{"classes/RefreshTokenDto.html":{}},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["refreshtokenmatches",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtokens",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshtokens(@req",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokens(req",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokens(userid",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["regulationurl",{"_index":517,"title":{},"body":{"entities/Competition.html":{},"classes/CreateCompetitionDto.html":{},"classes/UpdateCompetitionDto.html":{}}}],["relations",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["replace('bearer",{"_index":698,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["repository",{"_index":464,"title":{},"body":{"classes/BaseService.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/ControllerInterface.html":{},"injectables/JwtRefreshStrategy.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["req.baseurl",{"_index":372,"title":{},"body":{"classes/BaseController.html":{}}}],["req.ip",{"_index":374,"title":{},"body":{"classes/BaseController.html":{}}}],["req.method",{"_index":370,"title":{},"body":{"classes/BaseController.html":{}}}],["req.user.id",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user.refreshtoken",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["req?.user",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/ControllerInterface.html":{},"injectables/JwtRefreshStrategy.html":{},"guards/RoleGuard.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["request.user",{"_index":752,"title":{},"body":{"guards/RoleGuard.html":{}}}],["res",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/ControllerInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["res.status(status).json(payload",{"_index":418,"title":{},"body":{"classes/BaseController.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolvefilters",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["resolvefilters(filters",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["resolvefiltertype",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["resolvefiltertype(type",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["response",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/ControllerInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"entities/File.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns{string",{"_index":917,"title":{},"body":{"entities/User.html":{}}}],["role",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"guards/RoleGuard.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["role.admin",{"_index":987,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["role.super_admin",{"_index":988,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["role.user",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["roleguard",{"_index":729,"title":{"guards/RoleGuard.html":{}},"body":{"guards/RoleGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["roles",{"_index":745,"title":{},"body":{"guards/RoleGuard.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(ranks.worker",{"_index":1104,"title":{},"body":{"controllers/UsersController.html":{}}}],["roles(role.worker",{"_index":986,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["roles.some((role",{"_index":748,"title":{},"body":{"guards/RoleGuard.html":{}}}],["rootpath",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":1234,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":747,"title":{},"body":{"guards/RoleGuard.html":{},"dependencies.html":{}}}],["s",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["same",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":1224,"title":{},"body":{"index.html":{}}}],["secret",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":695,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["select",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"entities/User.html":{}}}],["server",{"_index":1225,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["service/auth/auth.service",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["service/uploader/uploader.service",{"_index":832,"title":{},"body":{"controllers/UploaderController.html":{},"modules/UploaderModule.html":{}}}],["service/user",{"_index":976,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["service/users/users.service",{"_index":1101,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["serviceinterface",{"_index":455,"title":{"interfaces/ServiceInterface.html":{}},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"coverage.html":{}}}],["set",{"_index":898,"title":{},"body":{"entities/User.html":{}}}],["setmetadata('roles",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":1226,"title":{},"body":{"index.html":{}}}],["signin",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin(userdata",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signup",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(req",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(signupdto",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdata",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["signupdto",{"_index":120,"title":{"classes/SignupDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignupDto.html":{},"coverage.html":{}}}],["signupdto.confirmpassword",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.email",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.password",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.pet",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.profile",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.username",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["skip",{"_index":410,"title":{},"body":{"classes/BaseController.html":{},"interfaces/PaginationInterface.html":{}}}],["social",{"_index":933,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"modules/EventsModule.html":{},"entities/File.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{},"index.html":{}}}],["sponsors",{"_index":1251,"title":{},"body":{"index.html":{}}}],["src/.../appmode.ts",{"_index":1202,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../gender.ts",{"_index":1203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../jwt.config.ts",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt.ts",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1216,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role.ts",{"_index":1204,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../roles.decorator.ts",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../typeorm.config.ts",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../uploader.controller.ts",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":77,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["src/base/basecontroller",{"_index":1098,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/base/basecontroller.ts",{"_index":350,"title":{},"body":{"classes/BaseController.html":{},"coverage.html":{}}}],["src/base/basecontroller.ts:19",{"_index":353,"title":{},"body":{"classes/BaseController.html":{}}}],["src/base/basecontroller.ts:27",{"_index":356,"title":{},"body":{"classes/BaseController.html":{}}}],["src/base/basecontroller.ts:45",{"_index":355,"title":{},"body":{"classes/BaseController.html":{}}}],["src/base/basecontroller.ts:61",{"_index":354,"title":{},"body":{"classes/BaseController.html":{}}}],["src/base/basecontroller.ts:76",{"_index":352,"title":{},"body":{"classes/BaseController.html":{}}}],["src/base/basecontroller.ts:90",{"_index":351,"title":{},"body":{"classes/BaseController.html":{}}}],["src/base/basedto.ts",{"_index":426,"title":{},"body":{"classes/BaseDto.html":{},"coverage.html":{}}}],["src/base/baseentity.ts",{"_index":428,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/base/baseentity.ts:11",{"_index":446,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/base/baseentity.ts:14",{"_index":441,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/base/baseentity.ts:5",{"_index":444,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/base/baseentity.ts:8",{"_index":437,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/base/baseservice.ts",{"_index":453,"title":{},"body":{"classes/BaseService.html":{},"coverage.html":{}}}],["src/base/baseservice.ts:13",{"_index":465,"title":{},"body":{"classes/BaseService.html":{}}}],["src/base/baseservice.ts:15",{"_index":474,"title":{},"body":{"classes/BaseService.html":{}}}],["src/base/baseservice.ts:31",{"_index":477,"title":{},"body":{"classes/BaseService.html":{}}}],["src/base/baseservice.ts:44",{"_index":479,"title":{},"body":{"classes/BaseService.html":{}}}],["src/base/baseservice.ts:58",{"_index":482,"title":{},"body":{"classes/BaseService.html":{}}}],["src/base/baseservice.ts:64",{"_index":467,"title":{},"body":{"classes/BaseService.html":{}}}],["src/base/baseservice.ts:71",{"_index":472,"title":{},"body":{"classes/BaseService.html":{}}}],["src/base/baseservice.ts:77",{"_index":470,"title":{},"body":{"classes/BaseService.html":{}}}],["src/config/app.config",{"_index":690,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/jwt.config.ts",{"_index":1159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/typeorm.config.ts",{"_index":1161,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/appmode.ts",{"_index":1205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/constants/gender.ts",{"_index":1208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/constants/jwt",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/constants/jwt.ts",{"_index":1162,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/role.ts",{"_index":1211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/decorators/roles.decorator.ts",{"_index":1163,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guard/jwt",{"_index":675,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/guard/local",{"_index":706,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/guard/role/role.guard.ts",{"_index":731,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/guard/role/role.guard.ts:12",{"_index":739,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/guard/role/role.guard.ts:6",{"_index":736,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/guard/role/role.guard.ts:8",{"_index":744,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/interfaces/basicresponse.interface.ts",{"_index":511,"title":{},"body":{"interfaces/BasicResponseInterface.html":{},"coverage.html":{}}}],["src/interfaces/controller.interface.ts",{"_index":527,"title":{},"body":{"interfaces/ControllerInterface.html":{},"coverage.html":{}}}],["src/interfaces/controller.interface.ts:15",{"_index":540,"title":{},"body":{"interfaces/ControllerInterface.html":{}}}],["src/interfaces/controller.interface.ts:22",{"_index":531,"title":{},"body":{"interfaces/ControllerInterface.html":{}}}],["src/interfaces/controller.interface.ts:24",{"_index":533,"title":{},"body":{"interfaces/ControllerInterface.html":{}}}],["src/interfaces/controller.interface.ts:5",{"_index":538,"title":{},"body":{"interfaces/ControllerInterface.html":{}}}],["src/interfaces/controller.interface.ts:7",{"_index":536,"title":{},"body":{"interfaces/ControllerInterface.html":{}}}],["src/interfaces/pagination.interface.ts",{"_index":718,"title":{},"body":{"interfaces/PaginationInterface.html":{},"coverage.html":{}}}],["src/interfaces/service.interface.ts",{"_index":755,"title":{},"body":{"interfaces/ServiceInterface.html":{},"coverage.html":{}}}],["src/interfaces/service.interface.ts:15",{"_index":759,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["src/interfaces/service.interface.ts:23",{"_index":760,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["src/interfaces/service.interface.ts:29",{"_index":761,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["src/interfaces/service.interface.ts:34",{"_index":762,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["src/interfaces/service.interface.ts:36",{"_index":756,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["src/interfaces/service.interface.ts:38",{"_index":757,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["src/interfaces/service.interface.ts:39",{"_index":758,"title":{},"body":{"interfaces/ServiceInterface.html":{}}}],["src/main.ts",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/controller/auth/auth.controller.ts",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/controller/auth/auth.controller.ts:22",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/controller/auth/auth.controller.ts:38",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/controller/auth/auth.controller.ts:53",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/controller/auth/auth.controller.ts:69",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/dtos/loginuser.dto.ts",{"_index":715,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/modules/auth/dtos/loginuser.dto.ts:2",{"_index":716,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/modules/auth/dtos/loginuser.dto.ts:3",{"_index":717,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/modules/auth/dtos/refreshtoken.dto.ts",{"_index":720,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["src/modules/auth/dtos/refreshtoken.dto.ts:7",{"_index":723,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["src/modules/auth/dtos/signup.dto.ts",{"_index":765,"title":{},"body":{"classes/SignupDto.html":{},"coverage.html":{}}}],["src/modules/auth/dtos/signup.dto.ts:10",{"_index":769,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dtos/signup.dto.ts:11",{"_index":770,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dtos/signup.dto.ts:5",{"_index":771,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dtos/signup.dto.ts:6",{"_index":767,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dtos/signup.dto.ts:7",{"_index":768,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dtos/signup.dto.ts:8",{"_index":766,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dtos/validuser.dto.ts",{"_index":1143,"title":{},"body":{"classes/ValidUserDto.html":{},"coverage.html":{}}}],["src/modules/auth/dtos/validuser.dto.ts:2",{"_index":1146,"title":{},"body":{"classes/ValidUserDto.html":{}}}],["src/modules/auth/dtos/validuser.dto.ts:3",{"_index":1144,"title":{},"body":{"classes/ValidUserDto.html":{}}}],["src/modules/auth/dtos/validuser.dto.ts:4",{"_index":1145,"title":{},"body":{"classes/ValidUserDto.html":{}}}],["src/modules/auth/dtos/validuser.dto.ts:5",{"_index":1147,"title":{},"body":{"classes/ValidUserDto.html":{}}}],["src/modules/auth/dtos/validuser.dto.ts:6",{"_index":1148,"title":{},"body":{"classes/ValidUserDto.html":{}}}],["src/modules/auth/service/auth/auth.service.ts",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/service/auth/auth.service.ts:138",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth/auth.service.ts:15",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth/auth.service.ts:24",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth/auth.service.ts:28",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth/auth.service.ts:35",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth/auth.service.ts:53",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth/auth.service.ts:70",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth/auth.service.ts:97",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/strategy/jwt",{"_index":679,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategy/jwt.strategy.ts",{"_index":700,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategy/jwt.strategy.ts:17",{"_index":703,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/strategy/jwt.strategy.ts:8",{"_index":701,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/strategy/local.strategy.ts",{"_index":708,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategy/local.strategy.ts:14",{"_index":712,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/modules/auth/strategy/local.strategy.ts:7",{"_index":710,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/modules/events/dtos/competition.dto.ts",{"_index":543,"title":{},"body":{"classes/CreateCompetitionDto.html":{},"classes/UpdateCompetitionDto.html":{},"coverage.html":{}}}],["src/modules/events/dtos/competition.dto.ts:10",{"_index":774,"title":{},"body":{"classes/UpdateCompetitionDto.html":{}}}],["src/modules/events/dtos/competition.dto.ts:11",{"_index":776,"title":{},"body":{"classes/UpdateCompetitionDto.html":{}}}],["src/modules/events/dtos/competition.dto.ts:2",{"_index":545,"title":{},"body":{"classes/CreateCompetitionDto.html":{}}}],["src/modules/events/dtos/competition.dto.ts:4",{"_index":544,"title":{},"body":{"classes/CreateCompetitionDto.html":{}}}],["src/modules/events/dtos/competition.dto.ts:5",{"_index":546,"title":{},"body":{"classes/CreateCompetitionDto.html":{}}}],["src/modules/events/dtos/competition.dto.ts:9",{"_index":775,"title":{},"body":{"classes/UpdateCompetitionDto.html":{}}}],["src/modules/events/dtos/event.dto.ts",{"_index":549,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["src/modules/events/dtos/event.dto.ts:10",{"_index":559,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:14",{"_index":784,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:15",{"_index":778,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:16",{"_index":782,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:17",{"_index":783,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:18",{"_index":781,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:19",{"_index":777,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:2",{"_index":563,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:20",{"_index":779,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:21",{"_index":780,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:3",{"_index":557,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:4",{"_index":561,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:5",{"_index":562,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:6",{"_index":560,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:8",{"_index":556,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/modules/events/dtos/event.dto.ts:9",{"_index":558,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/modules/events/events.module.ts",{"_index":650,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/modules/uploader/controller/uploader/uploader.controller.ts",{"_index":819,"title":{},"body":{"controllers/UploaderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/uploader/controller/uploader/uploader.controller.ts:32",{"_index":824,"title":{},"body":{"controllers/UploaderController.html":{}}}],["src/modules/uploader/service/uploader/uploader.service.ts",{"_index":860,"title":{},"body":{"injectables/UploaderService.html":{},"coverage.html":{}}}],["src/modules/uploader/service/uploader/uploader.service.ts:10",{"_index":866,"title":{},"body":{"injectables/UploaderService.html":{}}}],["src/modules/uploader/service/uploader/uploader.service.ts:7",{"_index":863,"title":{},"body":{"injectables/UploaderService.html":{}}}],["src/modules/uploader/uploader.module.ts",{"_index":857,"title":{},"body":{"modules/UploaderModule.html":{}}}],["src/modules/users/controller/user",{"_index":959,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"coverage.html":{}}}],["src/modules/users/controller/users/users.controller.ts",{"_index":1073,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/controller/users/users.controller.ts:112",{"_index":1095,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controller/users/users.controller.ts:132",{"_index":1086,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controller/users/users.controller.ts:150",{"_index":1094,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controller/users/users.controller.ts:166",{"_index":1085,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controller/users/users.controller.ts:182",{"_index":1091,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controller/users/users.controller.ts:198",{"_index":1082,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controller/users/users.controller.ts:50",{"_index":1087,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controller/users/users.controller.ts:72",{"_index":1088,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/controller/users/users.controller.ts:91",{"_index":1079,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/dtos/user.dto.ts",{"_index":566,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/user.dto.ts:11",{"_index":574,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:12",{"_index":572,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:16",{"_index":785,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:6",{"_index":569,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:7",{"_index":570,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:8",{"_index":568,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:9",{"_index":575,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts",{"_index":579,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:10",{"_index":599,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:11",{"_index":607,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:12",{"_index":595,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:13",{"_index":612,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:14",{"_index":597,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:15",{"_index":601,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:17",{"_index":611,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:18",{"_index":613,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:19",{"_index":600,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:20",{"_index":604,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:21",{"_index":608,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:22",{"_index":609,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:24",{"_index":603,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:25",{"_index":610,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:29",{"_index":795,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:30",{"_index":796,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:32",{"_index":787,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:33",{"_index":789,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:34",{"_index":790,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:35",{"_index":797,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:36",{"_index":786,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:37",{"_index":802,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:38",{"_index":788,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:39",{"_index":792,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:41",{"_index":801,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:42",{"_index":803,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:43",{"_index":791,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:44",{"_index":794,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:45",{"_index":798,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:46",{"_index":799,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:48",{"_index":793,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:49",{"_index":800,"title":{},"body":{"classes/UpdateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:5",{"_index":605,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:6",{"_index":606,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:8",{"_index":596,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userpet.dto.ts:9",{"_index":598,"title":{},"body":{"classes/CreateUserPetDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts",{"_index":616,"title":{},"body":{"classes/CreateUserProfileDto.html":{},"classes/UpdateUserProfileDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:10",{"_index":623,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:11",{"_index":629,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:12",{"_index":622,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:14",{"_index":635,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:15",{"_index":636,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:16",{"_index":624,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:17",{"_index":627,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:18",{"_index":632,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:19",{"_index":633,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:21",{"_index":634,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:22",{"_index":621,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:26",{"_index":808,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:27",{"_index":812,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:28",{"_index":813,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:29",{"_index":809,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:30",{"_index":806,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:31",{"_index":805,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:32",{"_index":811,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:34",{"_index":816,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:35",{"_index":817,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:36",{"_index":807,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:37",{"_index":810,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:38",{"_index":814,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:39",{"_index":815,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:41",{"_index":804,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:5",{"_index":625,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:6",{"_index":630,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:8",{"_index":631,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/dtos/userprofile.dto.ts:9",{"_index":626,"title":{},"body":{"classes/CreateUserProfileDto.html":{}}}],["src/modules/users/service/user",{"_index":992,"title":{},"body":{"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"coverage.html":{}}}],["src/modules/users/service/users/users.service.ts",{"_index":1127,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/service/users/users.service.ts:12",{"_index":1129,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.module.ts",{"_index":1120,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/typeorm/entities/competition",{"_index":652,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/typeorm/entities/competition.ts",{"_index":515,"title":{},"body":{"entities/Competition.html":{},"coverage.html":{}}}],["src/typeorm/entities/competition.ts:10",{"_index":520,"title":{},"body":{"entities/Competition.html":{}}}],["src/typeorm/entities/competition.ts:13",{"_index":523,"title":{},"body":{"entities/Competition.html":{}}}],["src/typeorm/entities/competition.ts:7",{"_index":522,"title":{},"body":{"entities/Competition.html":{}}}],["src/typeorm/entities/event",{"_index":651,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/typeorm/entities/event.ts",{"_index":639,"title":{},"body":{"entities/Event.html":{},"coverage.html":{}}}],["src/typeorm/entities/event.ts:10",{"_index":640,"title":{},"body":{"entities/Event.html":{}}}],["src/typeorm/entities/event.ts:13",{"_index":643,"title":{},"body":{"entities/Event.html":{}}}],["src/typeorm/entities/event.ts:16",{"_index":641,"title":{},"body":{"entities/Event.html":{}}}],["src/typeorm/entities/event.ts:19",{"_index":646,"title":{},"body":{"entities/Event.html":{}}}],["src/typeorm/entities/event.ts:22",{"_index":647,"title":{},"body":{"entities/Event.html":{}}}],["src/typeorm/entities/event.ts:25",{"_index":645,"title":{},"body":{"entities/Event.html":{}}}],["src/typeorm/entities/event.ts:28",{"_index":644,"title":{},"body":{"entities/Event.html":{}}}],["src/typeorm/entities/event.ts:7",{"_index":648,"title":{},"body":{"entities/Event.html":{}}}],["src/typeorm/entities/file.ts",{"_index":654,"title":{},"body":{"entities/File.html":{},"coverage.html":{}}}],["src/typeorm/entities/file.ts:13",{"_index":660,"title":{},"body":{"entities/File.html":{}}}],["src/typeorm/entities/file.ts:20",{"_index":662,"title":{},"body":{"entities/File.html":{}}}],["src/typeorm/entities/file.ts:27",{"_index":658,"title":{},"body":{"entities/File.html":{}}}],["src/typeorm/entities/file.ts:34",{"_index":659,"title":{},"body":{"entities/File.html":{}}}],["src/typeorm/entities/file.ts:42",{"_index":670,"title":{},"body":{"entities/File.html":{}}}],["src/typeorm/entities/file.ts:49",{"_index":665,"title":{},"body":{"entities/File.html":{}}}],["src/typeorm/entities/user",{"_index":1122,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/typeorm/entities/user.ts",{"_index":884,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/typeorm/entities/user.ts:17",{"_index":888,"title":{},"body":{"entities/User.html":{}}}],["src/typeorm/entities/user.ts:24",{"_index":891,"title":{},"body":{"entities/User.html":{}}}],["src/typeorm/entities/user.ts:31",{"_index":907,"title":{},"body":{"entities/User.html":{}}}],["src/typeorm/entities/user.ts:39",{"_index":894,"title":{},"body":{"entities/User.html":{}}}],["src/typeorm/entities/user.ts:47",{"_index":900,"title":{},"body":{"entities/User.html":{}}}],["src/typeorm/entities/user.ts:55",{"_index":902,"title":{},"body":{"entities/User.html":{}}}],["src/typeorm/entities/user.ts:62",{"_index":897,"title":{},"body":{"entities/User.html":{}}}],["src/typeorm/entities/userpet",{"_index":1005,"title":{},"body":{"injectables/UserPetsService.html":{},"modules/UsersModule.html":{}}}],["src/typeorm/entities/userpet.ts",{"_index":924,"title":{},"body":{"entities/UserPet.html":{},"coverage.html":{}}}],["src/typeorm/entities/userpet.ts:105",{"_index":938,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:112",{"_index":942,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:119",{"_index":943,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:127",{"_index":945,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:135",{"_index":937,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:14",{"_index":939,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:21",{"_index":940,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:28",{"_index":927,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:35",{"_index":948,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:42",{"_index":930,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:49",{"_index":929,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:56",{"_index":941,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:63",{"_index":935,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:70",{"_index":931,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:77",{"_index":925,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:84",{"_index":947,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:91",{"_index":949,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userpet.ts:98",{"_index":932,"title":{},"body":{"entities/UserPet.html":{}}}],["src/typeorm/entities/userprofile",{"_index":1064,"title":{},"body":{"injectables/UserProfilesService.html":{},"modules/UsersModule.html":{}}}],["src/typeorm/entities/userprofile.ts",{"_index":1016,"title":{},"body":{"entities/UserProfile.html":{},"coverage.html":{}}}],["src/typeorm/entities/userprofile.ts:106",{"_index":1035,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:113",{"_index":1018,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:14",{"_index":1023,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:21",{"_index":1030,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:28",{"_index":1032,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:35",{"_index":1025,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:42",{"_index":1021,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:49",{"_index":1019,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:56",{"_index":1028,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:63",{"_index":1036,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:70",{"_index":1037,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:77",{"_index":1022,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:84",{"_index":1026,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:91",{"_index":1033,"title":{},"body":{"entities/UserProfile.html":{}}}],["src/typeorm/entities/userprofile.ts:98",{"_index":1034,"title":{},"body":{"entities/UserProfile.html":{}}}],["start",{"_index":409,"title":{},"body":{"classes/BaseController.html":{},"index.html":{}}}],["start:dev",{"_index":1237,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1238,"title":{},"body":{"index.html":{}}}],["started",{"_index":1218,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1229,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BasicResponseInterface.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":1260,"title":{},"body":{"index.html":{}}}],["storage",{"_index":851,"title":{},"body":{"controllers/UploaderController.html":{}}}],["strategy",{"_index":686,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy/jwt",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"classes/ValidUserDto.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["super(petrepository",{"_index":1008,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["super(userprofilerepository",{"_index":1066,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["super(userrepository",{"_index":1133,"title":{},"body":{"injectables/UsersService.html":{}}}],["super_admin",{"_index":1214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":1252,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1270,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":411,"title":{},"body":{"classes/BaseController.html":{},"interfaces/PaginationInterface.html":{}}}],["test",{"_index":1241,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1244,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1243,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1240,"title":{},"body":{"index.html":{}}}],["text",{"_index":519,"title":{},"body":{"entities/Competition.html":{},"entities/Event.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["thanks",{"_index":1250,"title":{},"body":{"index.html":{}}}],["this.apierrorresponse(res",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["this.apisuccessresponse(res",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.logout(req?.user?.id",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtokens",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(loginuser",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdata",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get('jwt_expires",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_refresh_expires",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_refresh_secret",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_secret",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.filerepository.save(entities",{"_index":883,"title":{},"body":{"injectables/UploaderService.html":{}}}],["this.getbasicdataforresponse(req",{"_index":413,"title":{},"body":{"classes/BaseController.html":{}}}],["this.gettokens",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.hashdata(refreshtoken",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.signasync(userdata",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.matchroles(roles",{"_index":753,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.paginationfragment(limit",{"_index":982,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["this.petrepository.create",{"_index":1010,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["this.petrepository.save(newpet",{"_index":1015,"title":{},"body":{"injectables/UserPetsService.html":{}}}],["this.petservice.create",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["this.petservice.create(createdto",{"_index":989,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["this.petservice.deletesoftonebyid(id",{"_index":991,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["this.petservice.findall",{"_index":981,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UsersController.html":{}}}],["this.petservice.findonebyid(id",{"_index":985,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["this.petservice.updateonebyid",{"_index":990,"title":{},"body":{"controllers/UserPetsController.html":{}}}],["this.primaryprofile",{"_index":921,"title":{},"body":{"entities/User.html":{}}}],["this.profiles.find((profile",{"_index":922,"title":{},"body":{"entities/User.html":{}}}],["this.reflector.get('roles",{"_index":749,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.repository.create(createdto",{"_index":505,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.delete",{"_index":508,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.find",{"_index":496,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.findone",{"_index":502,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.save(item",{"_index":506,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.softdelete",{"_index":507,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.update",{"_index":503,"title":{},"body":{"classes/BaseService.html":{}}}],["this.resolvefilters(q",{"_index":983,"title":{},"body":{"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["this.resolvefilters(value",{"_index":407,"title":{},"body":{"classes/BaseController.html":{}}}],["this.resolvefiltertype(key",{"_index":408,"title":{},"body":{"classes/BaseController.html":{}}}],["this.updaterefreshtoken(newuser.id",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.updaterefreshtoken(user.id",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uploaderservice.createfiles(files",{"_index":853,"title":{},"body":{"controllers/UploaderController.html":{}}}],["this.userpetsservice.create",{"_index":1140,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userprofilerepository.create",{"_index":1067,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["this.userprofilerepository.save(newuser",{"_index":1071,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["this.userprofileservice.create",{"_index":1116,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["this.userprofileservice.create(createdto",{"_index":1055,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["this.userprofileservice.deletesoftonebyid(id",{"_index":1057,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["this.userprofileservice.findall",{"_index":1053,"title":{},"body":{"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["this.userprofileservice.findonebyid(id",{"_index":1054,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["this.userprofileservice.updateonebyid",{"_index":1056,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["this.userprofilesservice.create",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.create",{"_index":1134,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(newuser",{"_index":1141,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.create(createdto",{"_index":1113,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.deletesoftonebyid(id",{"_index":1115,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findall",{"_index":1108,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findonebyid(id",{"_index":1110,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.updateonebyid",{"_index":1114,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.create",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findoneby",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateonebyid(userid",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["tiktokurl",{"_index":590,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["token",{"_index":904,"title":{},"body":{"entities/User.html":{}}}],["tokens",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tokens.refreshtoken",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":1261,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":915,"title":{},"body":{"entities/User.html":{},"dependencies.html":{}}}],["trim",{"_index":699,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["true",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["true})@exclude",{"_index":901,"title":{},"body":{"entities/User.html":{}}}],["true})@joincolumn",{"_index":669,"title":{},"body":{"entities/File.html":{}}}],["try",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["ts",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{}}}],["twitter",{"_index":952,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{},"index.html":{}}}],["twitterurl",{"_index":591,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["type",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"interfaces/BasicResponseInterface.html":{},"entities/Competition.html":{},"interfaces/ControllerInterface.html":{},"classes/CreateCompetitionDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/Event.html":{},"entities/File.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/PaginationInterface.html":{},"classes/RefreshTokenDto.html":{},"guards/RoleGuard.html":{},"interfaces/ServiceInterface.html":{},"classes/SignupDto.html":{},"classes/UpdateCompetitionDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UploaderController.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.startswith('n",{"_index":396,"title":{},"body":{"classes/BaseController.html":{}}}],["typeof",{"_index":403,"title":{},"body":{"classes/BaseController.html":{}}}],["typeorm",{"_index":364,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseEntity.html":{},"classes/BaseService.html":{},"entities/Competition.html":{},"entities/Event.html":{},"entities/File.html":{},"interfaces/ServiceInterface.html":{},"injectables/UploaderService.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeorm/entities/file",{"_index":833,"title":{},"body":{"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{}}}],["typeorm/entities/user",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UsersController.html":{}}}],["typeorm/entities/userpet",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserPetsController.html":{},"controllers/UsersController.html":{}}}],["typeorm/entities/userprofile",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["typeorm/find",{"_index":490,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{}}}],["typeormasyncconfig",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([event",{"_index":653,"title":{},"body":{"modules/EventsModule.html":{}}}],["typeormmodule.forfeature([file",{"_index":859,"title":{},"body":{"modules/UploaderModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1126,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync(typeormasyncconfig",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleasyncoptions",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":375,"title":{},"body":{"classes/BaseController.html":{}}}],["types[type",{"_index":398,"title":{},"body":{"classes/BaseController.html":{}}}],["typescript",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseService.html":{},"index.html":{}}}],["unauthorizedexception",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":439,"title":{},"body":{"classes/BaseEntity.html":{},"entities/User.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["unique",{"_index":911,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":1239,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/UploaderService.html":{}}}],["unlicensed",{"_index":1282,"title":{},"body":{"properties.html":{}}}],["updatecompetitiondto",{"_index":547,"title":{"classes/UpdateCompetitionDto.html":{}},"body":{"classes/CreateCompetitionDto.html":{},"classes/UpdateCompetitionDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":432,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedatecolumn",{"_index":450,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedatecolumn({type",{"_index":445,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedto",{"_index":481,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateeventdto",{"_index":564,"title":{"classes/UpdateEventDto.html":{}},"body":{"classes/CreateEventDto.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["updateonebyid",{"_index":462,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ControllerInterface.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateonebyid(id",{"_index":480,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"injectables/UserPetsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["updateonebyid(req",{"_index":539,"title":{},"body":{"interfaces/ControllerInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["updaterefreshtoken",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["updaterefreshtoken(userid",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateresult",{"_index":484,"title":{},"body":{"classes/BaseService.html":{},"interfaces/ServiceInterface.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["updateuserdto",{"_index":578,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["updateuserpetdto",{"_index":615,"title":{"classes/UpdateUserPetDto.html":{}},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"coverage.html":{}}}],["updateuserprofiledto",{"_index":637,"title":{"classes/UpdateUserProfileDto.html":{}},"body":{"classes/CreateUserProfileDto.html":{},"classes/UpdateUserProfileDto.html":{},"controllers/UserProfilesController.html":{},"coverage.html":{}}}],["uploadedfiles",{"_index":825,"title":{},"body":{"controllers/UploaderController.html":{}}}],["uploader",{"_index":820,"title":{},"body":{"controllers/UploaderController.html":{}}}],["uploadercontroller",{"_index":818,"title":{"controllers/UploaderController.html":{}},"body":{"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"coverage.html":{}}}],["uploadermodule",{"_index":42,"title":{"modules/UploaderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UploaderModule.html":{},"modules.html":{},"overview.html":{}}}],["uploaderservice",{"_index":831,"title":{"injectables/UploaderService.html":{}},"body":{"controllers/UploaderController.html":{},"modules/UploaderModule.html":{},"injectables/UploaderService.html":{},"coverage.html":{},"overview.html":{}}}],["uploadfile",{"_index":821,"title":{},"body":{"controllers/UploaderController.html":{}}}],["uploadfile(req",{"_index":822,"title":{},"body":{"controllers/UploaderController.html":{}}}],["uploads",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/UploaderController.html":{}}}],["url",{"_index":371,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BasicResponseInterface.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["usefactory",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserPetsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get('logout",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshauthguard",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshauthguard)@get('refresh",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":826,"title":{},"body":{"controllers/UploaderController.html":{}}}],["useinterceptors(filesinterceptor('files",{"_index":849,"title":{},"body":{"controllers/UploaderController.html":{}}}],["user",{"_index":173,"title":{"entities/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"entities/File.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"guards/RoleGuard.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.password",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.pets",{"_index":953,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["user.pets)@jointable",{"_index":944,"title":{},"body":{"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["user.refreshtoken",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":754,"title":{},"body":{"guards/RoleGuard.html":{}}}],["user_pets",{"_index":950,"title":{},"body":{"entities/UserPet.html":{}}}],["user_profiles",{"_index":1038,"title":{},"body":{"entities/UserProfile.html":{}}}],["userdata",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.email",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.password",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdetails",{"_index":1111,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userdetails.password",{"_index":1112,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdetails.pet",{"_index":1138,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdetails.profile",{"_index":1136,"title":{},"body":{"injectables/UsersService.html":{}}}],["userid",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignupDto.html":{},"miscellaneous/variables.html":{}}}],["usernamefield",{"_index":714,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userpet",{"_index":277,"title":{"entities/UserPet.html":{}},"body":{"injectables/AuthService.html":{},"entities/File.html":{},"entities/User.html":{},"entities/UserPet.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userpet.dto",{"_index":577,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["userpet.images",{"_index":664,"title":{},"body":{"entities/File.html":{}}}],["userpetscontroller",{"_index":958,"title":{"controllers/UserPetsController.html":{}},"body":{"controllers/UserPetsController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userpetsservice",{"_index":244,"title":{"injectables/UserPetsService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserPetsController.html":{},"injectables/UserPetsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userprofile",{"_index":279,"title":{"entities/UserProfile.html":{}},"body":{"injectables/AuthService.html":{},"entities/File.html":{},"entities/User.html":{},"entities/UserProfile.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofile.avatar",{"_index":668,"title":{},"body":{"entities/File.html":{}}}],["userprofile.dto",{"_index":576,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["userprofilerepository",{"_index":1061,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["userprofiles",{"_index":1052,"title":{},"body":{"controllers/UserProfilesController.html":{}}}],["userprofilescontroller",{"_index":1040,"title":{"controllers/UserProfilesController.html":{}},"body":{"controllers/UserProfilesController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userprofileservice",{"_index":1051,"title":{},"body":{"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userprofilesservice",{"_index":242,"title":{"injectables/UserProfilesService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserProfilesController.html":{},"injectables/UserProfilesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userrepository",{"_index":1130,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrole",{"_index":743,"title":{},"body":{"guards/RoleGuard.html":{}}}],["users",{"_index":916,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{}}}],["users/dtos/userpet.dto",{"_index":772,"title":{},"body":{"classes/SignupDto.html":{}}}],["users/dtos/userprofile.dto",{"_index":773,"title":{},"body":{"classes/SignupDto.html":{}}}],["users/service/user",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["users/service/users/users.service",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["users/users.module",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{}}}],["userscontroller",{"_index":1072,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":1103,"title":{},"body":{"controllers/UsersController.html":{}}}],["usersmodule",{"_index":43,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":241,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userwithemailexists",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":681,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":711,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":702,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(req",{"_index":683,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["validator",{"_index":727,"title":{},"body":{"classes/RefreshTokenDto.html":{},"entities/User.html":{},"dependencies.html":{}}}],["validuserdto",{"_index":1142,"title":{"classes/ValidUserDto.html":{}},"body":{"classes/ValidUserDto.html":{},"coverage.html":{}}}],["value",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.split('_')[0",{"_index":381,"title":{},"body":{"classes/BaseController.html":{}}}],["value.split('_')[1",{"_index":382,"title":{},"body":{"classes/BaseController.html":{}}}],["variable",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1283,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1280,"title":{},"body":{"properties.html":{}}}],["void",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/UploaderController.html":{},"entities/User.html":{},"controllers/UserPetsController.html":{},"controllers/UserProfilesController.html":{},"controllers/UsersController.html":{}}}],["watch",{"_index":1235,"title":{},"body":{"index.html":{}}}],["website",{"_index":1265,"title":{},"body":{"index.html":{}}}],["websiteurl",{"_index":592,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["weight",{"_index":593,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/UpdateUserPetDto.html":{},"entities/UserPet.html":{}}}],["where.username",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["withdeleted",{"_index":500,"title":{},"body":{"classes/BaseService.html":{}}}],["worker",{"_index":1212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["world",{"_index":80,"title":{},"body":{"injectables/AppService.html":{}}}],["yarn",{"_index":1231,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":1255,"title":{},"body":{"index.html":{}}}],["youtubeurl",{"_index":594,"title":{},"body":{"classes/CreateUserPetDto.html":{},"classes/CreateUserProfileDto.html":{},"classes/UpdateUserPetDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/UserPet.html":{},"entities/UserProfile.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UploaderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) { }\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\n\n\nUploaderModule\n\nUploaderModule\n\nAppModule -->\n\nUploaderModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            UploaderModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersModule } from './modules/users/users.module';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { EventsModule } from './modules/events/events.module';\nimport {ConfigModule} from \"@nestjs/config\";\nimport {typeOrmAsyncConfig} from \"./config/typeorm.config\";\nimport { UploaderModule } from './modules/uploader/uploader.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n\n@Module({\n  imports: [\n    // ServeStaticModule.forRoot({\n    //   rootPath: join(__dirname, '..', 'uploads'),\n    //   exclude: ['/api/(.*)'],\n    // }),\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRootAsync(typeOrmAsyncConfig),\n    UsersModule,\n    AuthModule,\n    EventsModule,\n    UploaderModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/controller/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n            \n                Extends\n            \n            \n                        BaseController\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    Async\n                                refreshTokens\n                            \n                            \n                                    \n                                    Async\n                                signup\n                            \n                            \n                                apiErrorResponse\n                            \n                            \n                                apiSuccessResponse\n                            \n                            \n                                    Protected\n                                getBasicDataForResponse\n                            \n                            \n                                paginationFragment\n                            \n                            \n                                resolveFilters\n                            \n                            \n                                    Protected\n                                resolveFilterType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: Request, res: Response, loginUser: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/controller/auth/auth.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loginUser\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('logout')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/controller/auth/auth.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshTokens(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshAuthGuard)@Get('refresh')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/controller/auth/auth.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(req: Request, res: Response, signupData: SignupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/controller/auth/auth.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    signupData\n                                    \n                                                SignupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiErrorResponse\n                        \n                    \n                \n            \n            \n                \napiErrorResponse(res: Response, req: Request, error: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.BAD_REQUEST\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiSuccessResponse\n                        \n                    \n                \n            \n            \n                \napiSuccessResponse(res: Response, req: Request, data: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.OK\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBasicDataForResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBasicDataForResponse(req: Request, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasicResponseInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginationFragment\n                        \n                    \n                \n            \n            \n                \npaginationFragment(limit: number | string, page: number | string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PaginationInterface | object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFilters\n                        \n                    \n                \n            \n            \n                \nresolveFilters(filters: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        resolveFilterType\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveFilterType(type: string, value)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'eq'\n                                    \n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { BaseController } from '../../../../base/BaseController';\nimport {Get, Res, UnauthorizedException} from '@nestjs/common';\nimport { LoginUserDto } from './../../dtos/LoginUser.dto';\nimport { LocalAuthGuard } from '../../../../guard/local-auth/local-auth.guard';\nimport { Controller, Post, Req, UseGuards, Body } from '@nestjs/common';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { JwtAuthGuard } from '../../../../guard/jwt-auth/jwt-auth.guard';\nimport { Request, Response } from 'express';\nimport {JwtRefreshAuthGuard} from \"../../../../guard/jwt-refresh-auth/jwt-refresh-auth.guard\";\nimport {User} from \"../../../../typeorm/entities/User\";\nimport {SignupDto} from \"../../dtos/Signup.dto\";\n\n@Controller('auth')\nexport class AuthController extends BaseController {\n\n    constructor(private authService: AuthService) {\n        super();\n    }\n\n    @UseGuards(JwtAuthGuard)\n    @Get('logout')\n    async logout(@Req() req: Request, @Res() res: Response) {\n        try {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            await this.authService.logout(req?.user?.id);\n\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            this.apiSuccessResponse(res, req, req?.user);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @UseGuards(LocalAuthGuard)\n    @Post('login')\n    async login(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Body() loginUser: LoginUserDto,\n    ) {\n        try {\n            const user: User = await this.authService.signIn(loginUser);\n\n            this.apiSuccessResponse(res, req, user);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Post('signup')\n    async signup(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Body() signupData: SignupDto,\n    ) {\n        try {\n            const user: User = await this.authService.signUp(signupData);\n\n            this.apiSuccessResponse(res, req, user);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @UseGuards(JwtRefreshAuthGuard)\n    @Get('refresh')\n    async refreshTokens(@Req() req: Request, @Res() res: Response) {\n        try {\n            const tokens: { accessToken: string; refreshToken: string } =\n                await this.authService.refreshTokens(\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    req.user.id,\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    req.user.refreshToken,\n                );\n\n            this.apiSuccessResponse(res, req, tokens);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshStrategy\n\nJwtRefreshStrategy\n\nAuthModule -->\n\nJwtRefreshStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtRefreshStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { UsersModule } from './../users/users.module';\nimport { Module } from '@nestjs/common';\nimport { AuthController } from './controller/auth/auth.controller';\nimport { AuthService } from './service/auth/auth.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { Jwt } from 'src/constants/Jwt';\nimport {LocalStrategy} from \"./strategy/local.strategy\";\nimport {JwtStrategy} from \"./strategy/jwt.strategy\";\nimport {JwtRefreshStrategy} from \"./strategy/jwt-refresh.strategy\";\nimport {jwtConfig} from \"../../config/jwt.config\";\n\n@Module({\n  imports: [UsersModule, PassportModule, JwtModule.registerAsync(jwtConfig)],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy, JwtRefreshStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/service/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                getTokens\n                            \n                            \n                                    Protected\n                                hashData\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                refreshTokens\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Protected\n                                    Async\n                                updateRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, userProfilesService: UserProfilesService, petService: UserPetsService, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/service/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userProfilesService\n                                                  \n                                                        \n                                                                        UserProfilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        petService\n                                                  \n                                                        \n                                                                        UserPetsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        getTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokens(userData)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/service/auth/auth.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        hashData\n                        \n                    \n                \n            \n            \n                \n                    \n                    hashData(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/service/auth/auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/service/auth/auth.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshTokens(userId: number, refreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/service/auth/auth.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(userData: LoginUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/service/auth/auth.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signupDto: SignupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/service/auth/auth.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signupDto\n                                    \n                                                SignupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        updateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRefreshToken(userId: number, refreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/service/auth/auth.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UsersService } from '../../../users/service/users/users.service';\nimport {BadRequestException, ForbiddenException, Injectable} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport {User} from \"../../../../typeorm/entities/User\";\nimport {LoginUserDto} from \"../../dtos/LoginUser.dto\";\nimport * as argon2 from 'argon2';\nimport { ConfigService } from '@nestjs/config';\nimport {SignupDto} from \"../../dtos/Signup.dto\";\nimport {UserPetsService} from \"../../../users/service/user-pets/user-pets.service\";\nimport {UserProfilesService} from \"../../../users/service/user-profiles/user-profiles.service\";\nimport {Role} from \"../../../../constants/Role\";\nimport {UserPet} from \"../../../../typeorm/entities/UserPet\";\nimport {UserProfile} from \"../../../../typeorm/entities/UserProfile\";\n@Injectable()\nexport class AuthService {\n    constructor(\n        private usersService: UsersService,\n        private userProfilesService: UserProfilesService,\n        private petService: UserPetsService,\n        private jwtService: JwtService,\n        private configService: ConfigService,\n    ) {}\n\n    protected hashData(data: string) {\n        return argon2.hash(data);\n    }\n\n    protected async updateRefreshToken(userId: number, refreshToken: string) {\n        const hashedRefreshToken = await this.hashData(refreshToken);\n        await this.usersService.updateOneById(userId, {\n            refreshToken: hashedRefreshToken,\n        });\n    }\n\n    protected async getTokens(userData) {\n        const [accessToken, refreshToken] = await Promise.all([\n            this.jwtService.signAsync(userData, {\n                secret: this.configService.get('JWT_SECRET'),\n                expiresIn: this.configService.get('JWT_EXPIRES'),\n            }),\n            this.jwtService.signAsync(userData, {\n                secret: this.configService.get('JWT_REFRESH_SECRET'),\n                expiresIn: this.configService.get('JWT_REFRESH_EXPIRES'),\n            }),\n        ]);\n\n        return {\n            accessToken,\n            refreshToken,\n        };\n    }\n\n    async refreshTokens(userId: number, refreshToken: string) {\n        const user: User = await this.usersService.findOneById(userId, {});\n        console.log(user, refreshToken);\n        if (!user || !user.refreshToken)\n            throw new ForbiddenException('Access Denied');\n\n        const refreshTokenMatches = await argon2.verify(\n            user.refreshToken,\n            refreshToken,\n        );\n\n        if (!refreshTokenMatches) throw new ForbiddenException('Access Denied');\n        const tokens = await this.getTokens({ ...user });\n        await this.updateRefreshToken(user.id, tokens.refreshToken);\n        return tokens;\n    }\n\n    async signIn(userData: LoginUserDto) {\n        // Check if user exists\n        const user: User = await this.usersService.findOneBy({\n            where: { email: userData.email },\n            relations: ['pets', 'profiles'],\n            select: [\n                'id',\n                'email',\n                'password',\n                'password',\n                'refreshToken',\n            ],\n        });\n        if (!user) throw new BadRequestException('User does not exist');\n        const passwordMatches = await argon2.verify(\n            user.password,\n            userData.password,\n        );\n        if (!passwordMatches)\n            throw new BadRequestException('Password is incorrect');\n\n        delete user.password;\n        const tokens = await this.getTokens({ ...user });\n        await this.updateRefreshToken(user.id, tokens.refreshToken);\n        return { ...user, ...tokens };\n    }\n\n    async signUp(signupDto: SignupDto): Promise {\n        const passwordsMatch = signupDto.password === signupDto.confirmPassword\n\n        if (!passwordsMatch) {\n            throw new BadRequestException('Passwords are not the same');\n        }\n\n        // Check if user exists\n        const where: { email: string, username?: string } = {\n            email: signupDto.email,\n        }\n        if (signupDto.username) where.username = signupDto.username\n\n        const userWithEmailExists: User = await this.usersService.findOneBy({\n            where,\n        });\n\n        if (userWithEmailExists) {\n            throw new BadRequestException('User already exists');\n        }\n\n        const newUser: User = await this.usersService.create({\n            email: signupDto.email,\n            password: signupDto.password,\n            role: Role.USER,\n        });\n\n        const profile: UserProfile = await this.userProfilesService.create({ ...signupDto.profile, isPrimary: true, user: newUser.id })\n        const pet: UserPet = await this.petService.create({ ...signupDto.pet, user: newUser.id })\n\n        delete newUser.password;\n        const tokens = await this.getTokens({ ...newUser });\n        await this.updateRefreshToken(newUser.id, tokens.refreshToken);\n        return {\n            ...newUser,\n            profiles: [profile],\n            pets: [pet],\n            ...tokens\n        };\n    }\n\n    async logout(userId: number) {\n        return this.usersService.updateOneById(userId, { refreshToken: null });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseController.html":{"url":"classes/BaseController.html","title":"class - BaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/BaseController.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apiErrorResponse\n                            \n                            \n                                apiSuccessResponse\n                            \n                            \n                                    Protected\n                                getBasicDataForResponse\n                            \n                            \n                                paginationFragment\n                            \n                            \n                                resolveFilters\n                            \n                            \n                                    Protected\n                                resolveFilterType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apiErrorResponse\n                        \n                    \n                \n            \n            \n                \napiErrorResponse(res: Response, req: Request, error: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseController.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.BAD_REQUEST\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiSuccessResponse\n                        \n                    \n                \n            \n            \n                \napiSuccessResponse(res: Response, req: Request, data: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseController.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.OK\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBasicDataForResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBasicDataForResponse(req: Request, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseController.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasicResponseInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginationFragment\n                        \n                    \n                \n            \n            \n                \npaginationFragment(limit: number | string, page: number | string)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseController.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PaginationInterface | object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFilters\n                        \n                    \n                \n            \n            \n                \nresolveFilters(filters: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseController.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        resolveFilterType\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveFilterType(type: string, value)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseController.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'eq'\n                                    \n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport {\n  Between,\n  Equal,\n  IsNull,\n  LessThan,\n  LessThanOrEqual,\n  Like,\n  MoreThan,\n  MoreThanOrEqual,\n  Not,\n} from 'typeorm';\nimport * as process from 'process';\nimport { AppMode } from '../constants/AppMode';\n\nexport abstract class BaseController {\n\n  protected getBasicDataForResponse(req: Request, status: HttpStatus): BasicResponseInterface {\n    return {\n      method: req.method,\n      url: req.baseUrl,\n      ip: req.ip,\n      status,\n    };\n  }\n  protected resolveFilterType(type = 'eq', value) {\n    const types = {\n      ['eq' || 'neq']: Equal(value),\n      ['like' || 'nlike']: Like(value.replaceAll(':', '%')),\n      ['between' || 'nbetween']: Between(\n        value.split('_')[0],\n        value.split('_')[1],\n      ),\n      ['gt' || 'ngt']: MoreThan(value),\n      ['gte' || 'ngte']: MoreThanOrEqual(value),\n      ['lt' || 'nlt']: LessThan(value),\n      ['lte' || 'nlte']: LessThanOrEqual(value),\n      ['isNull' || 'nisNull']: IsNull(),\n    };\n\n    return type.startsWith('n') ? Not(types[type]) : types[type];\n  }\n\n  resolveFilters(filters: { [key: string]: any }) {\n    if (!filters) return {};\n\n    const _filters = {};\n    for (const filter of Object.entries(filters)) {\n      const [key, value] = filter;\n      if (typeof value === 'object' && Object.keys(value).length === 1) {\n        _filters[key] = this.resolveFilters(value);\n      } else {\n        return this.resolveFilterType(key, value);\n      }\n    }\n\n    return _filters;\n  }\n\n  paginationFragment(\n    limit: number | string = null,\n    page: number | string = null,\n  ): PaginationInterface | object {\n    if (limit !== null && page !== null) {\n      const start = (+page - 1) * +limit;\n      return {\n        skip: start,\n        take: limit,\n      };\n    }\n\n    return {};\n  }\n\n  apiSuccessResponse(\n    res: Response,\n    req: Request,\n    data: any,\n    status: HttpStatus = HttpStatus.OK,\n  ) {\n    const payload: any = this.getBasicDataForResponse(req, status);\n\n    if (Array.isArray(data)) payload.items = data.filter(Boolean);\n    else payload.items = [data].filter(Boolean);\n\n    res.status(status).json(payload);\n  }\n\n  apiErrorResponse(\n    res: Response,\n    req: Request,\n    error: any,\n    status: HttpStatus = HttpStatus.BAD_REQUEST,\n  ) {\n    const payload: any = this.getBasicDataForResponse(req, status);\n\n    payload.error =\n      error?.detail ||\n      error?.message ||\n      (typeof error === 'string' ? error : null);\n\n    if (process.env.APP_MODE === AppMode.DEVELOPMENT) {\n      payload.dev = error;\n    }\n\n    res.status(status).json(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseDto.html":{"url":"classes/BaseDto.html","title":"class - BaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/BaseDto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class BaseDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/BaseEntity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'datetime', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/BaseEntity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'datetime', default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/BaseEntity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/BaseEntity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'datetime', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/BaseEntity.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, DeleteDateColumn} from 'typeorm';\n\nexport abstract class BaseEntity {\n  @PrimaryGeneratedColumn({ type: 'bigint' })\n  id: number;\n\n  @CreateDateColumn({ type: 'datetime', default: () => 'CURRENT_TIMESTAMP' })\n  createAt: Date;\n\n  @UpdateDateColumn({ type: 'datetime', default: () => 'CURRENT_TIMESTAMP' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ type: 'datetime', default: null, nullable: true })\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/BaseService.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ServiceInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    Async\n                                deleteSoftOneById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneBy\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/base/BaseService.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createDto: any)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseService.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseService.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteSoftOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSoftOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseService.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseService.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneBy\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneBy(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseService.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number, params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseService.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneById(id: number, updateDto: BaseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/base/BaseService.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                BaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Repository,\n    DeleteResult,\n    UpdateResult,\n    FindOptionsWhere,\n    FindOptionsSelectByString,\n    FindOptionsSelect\n} from 'typeorm';\nimport {FindOptionsRelationByString, FindOptionsRelations} from \"typeorm/find-options/FindOptionsRelations\";\nimport {BaseDto} from \"./BaseDto\";\nimport {ServiceInterface} from \"../interfaces/Service.interface\";\nimport {BaseEntity} from \"./BaseEntity\";\nexport class BaseService implements ServiceInterface {\n    constructor(private repository: Repository) {}\n    async findAll(params: {\n        pagination?: object | PaginationInterface,\n        relations?: FindOptionsRelations | FindOptionsRelationByString,\n        where?: FindOptionsWhere | FindOptionsWhere[],\n        select?: FindOptionsSelect | FindOptionsSelectByString,\n    }): Promise {\n        const paging = params.pagination ?? {}\n        return await this.repository.find({\n            ...paging,\n            relations: params.relations ?? [],\n            where: params.where ?? [],\n            select: params.select ?? [],\n            withDeleted: false,\n        });\n    }\n\n    async findOneBy(params: {\n        where: FindOptionsWhere | FindOptionsWhere[],\n        relations?: FindOptionsRelations | FindOptionsRelationByString,\n        select?: FindOptionsSelect | FindOptionsSelectByString,\n    }): Promise {\n        return await this.repository.findOne({\n            where: params.where ?? [],\n            relations: params.relations ?? [],\n            select: params.select ?? [],\n            withDeleted: false,\n        });\n    }\n\n    async findOneById(id: number, params: {\n        relations?: FindOptionsRelations | FindOptionsRelationByString,\n        select?: FindOptionsSelect | FindOptionsSelectByString,\n    }): Promise {\n        return await this.repository.findOne({\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            where: { id },\n            relations: params.relations ?? [],\n            select: params.select ?? [],\n            withDeleted: false,\n        });\n    }\n\n    async updateOneById(id: number, updateDto: BaseDto): Promise {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        return await this.repository.update({ id }, { ...updateDto });\n    }\n\n    async create(createDto: any): Promise {\n        const item = this.repository.create(createDto);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        return await this.repository.save(item);\n    }\n\n    async deleteSoftOneById(id: number): Promise {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        return await this.repository.softDelete({ id });\n    }\n\n    async deleteOneById(id: number): Promise {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        return await this.repository.delete({ id });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicResponseInterface.html":{"url":"interfaces/BasicResponseInterface.html","title":"interface - BasicResponseInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BasicResponseInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/BasicResponse.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ip\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface BasicResponseInterface {\n  method: string;\n  url: string;\n  ip: string;\n  status: number | string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Competition.html":{"url":"entities/Competition.html","title":"entity - Competition","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Competition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/typeorm/entities/Competition.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                regulationUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Competition.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Competition.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        regulationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Competition.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column } from 'typeorm';\nimport { BaseEntity } from '../../base/BaseEntity';\n\n@Entity({ name: 'competitions' })\nexport class Competition extends BaseEntity {\n    @Column({ nullable: false })\n    name: string;\n\n    @Column({ type: 'text', nullable: true })\n    description: string\n\n    @Column({ nullable: true })\n    regulationUrl: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControllerInterface.html":{"url":"interfaces/ControllerInterface.html","title":"interface - ControllerInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ControllerInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/Controller.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        deleteOneById\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getOneById\n                                    \n                                \n                                \n                                    \n                                        updateOneById\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(req: Request, res: Response, createDto: BaseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Controller.interface.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createDto\n                                    \n                                                BaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \ndeleteOneById(req: Request, res: Response, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Controller.interface.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(req: Request, res: Response, limit: number, page: number, q)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Controller.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    q\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOneById\n                        \n                    \n                \n            \n            \n                \ngetOneById(req: Request, res: Response, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Controller.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOneById\n                        \n                    \n                \n            \n            \n                \nupdateOneById(req: Request, res: Response, id: number, updateDto: BaseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Controller.interface.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                BaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Request, Response } from 'express';\nimport { BaseDto } from '../base/BaseDto';\n\nexport interface ControllerInterface {\n  getOneById(req: Request, res: Response, id: number): Promise;\n\n  getAll(\n    req: Request,\n    res: Response,\n    limit: number,\n    page: number,\n    q,\n  ): Promise;\n\n  updateOneById(\n    req: Request,\n    res: Response,\n    id: number,\n    updateDto: BaseDto,\n  ): Promise;\n\n  create(req: Request, res: Response, createDto: BaseDto): Promise;\n\n  deleteOneById(req: Request, res: Response, id: number): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompetitionDto.html":{"url":"classes/CreateCompetitionDto.html","title":"class - CreateCompetitionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompetitionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/events/dtos/Competition.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                regulationUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Competition.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Competition.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        regulationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Competition.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCompetitionDto {\n    name: string;\n    \n    description?: string\n    regulationUrl?: string\n}\n\nexport class UpdateCompetitionDto {\n    name?: string;\n    description?: string\n    regulationUrl?: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEventDto.html":{"url":"classes/CreateEventDto.html","title":"class - CreateEventDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEventDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/events/dtos/Event.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                locationCity\n                            \n                            \n                                    Optional\n                                locationCountry\n                            \n                            \n                                    Optional\n                                locationDescription\n                            \n                            \n                                locationNumber\n                            \n                            \n                                locationPostalCode\n                            \n                            \n                                locationStreet\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationCity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        locationCountry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        locationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationPostalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationStreet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateEventDto {\n    name: string;\n    locationCity: string\n    locationPostalCode: string\n    locationStreet: string\n    locationNumber: string\n\n    description?: string;\n    locationCountry?: string\n    locationDescription?: string\n}\n\nexport class UpdateEventDto {\n    name?: string;\n    locationCity?: string\n    locationPostalCode?: string\n    locationStreet?: string\n    locationNumber?: string\n    description?: string\n    locationCountry?: string\n    locationDescription?: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/User.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                confirmPassword\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                pet\n                            \n                            \n                                    Optional\n                                profile\n                            \n                            \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/User.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/User.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/User.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserPetDto | any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/User.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserProfileDto | any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/User.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/User.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserProfileDto } from \"./UserProfile.dto\";\nimport { CreateUserPetDto } from \"./UserPet.dto\";\nimport { Role } from \"../../../constants/Role\";\n\nexport class CreateUserDto {\n    email: string\n    password: string\n    confirmPassword?: string\n    role?: Role\n\n    profile?: CreateUserProfileDto | any\n    pet?: CreateUserPetDto | any\n}\n\nexport class UpdateUserDto {\n    email?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserPetDto.html":{"url":"classes/CreateUserPetDto.html","title":"class - CreateUserPetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserPetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/UserPet.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthDate\n                            \n                            \n                                    Optional\n                                breed\n                            \n                            \n                                    Optional\n                                breeding\n                            \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                facebookUrl\n                            \n                            \n                                    Optional\n                                gender\n                            \n                            \n                                    Optional\n                                images\n                            \n                            \n                                    Optional\n                                instagramUrl\n                            \n                            \n                                name\n                            \n                            \n                                passportNumber\n                            \n                            \n                                    Optional\n                                personality\n                            \n                            \n                                    Optional\n                                tiktokUrl\n                            \n                            \n                                    Optional\n                                twitterUrl\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                    Optional\n                                websiteUrl\n                            \n                            \n                                    Optional\n                                weight\n                            \n                            \n                                    Optional\n                                youtubeUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        breeding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        facebookUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array | any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        instagramUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passportNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        personality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tiktokUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        twitterUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        websiteUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        youtubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Gender } from \"../../../constants/Gender\";\nimport { User } from \"../../../typeorm/entities/User\";\n\nexport class CreateUserPetDto {\n    name: string\n    passportNumber: string\n\n    breed?: string\n    color?: string\n    description?: string\n    personality?: string\n    birthDate?: Date\n    weight?: number\n    breeding?: string\n    gender?: Gender\n\n    websiteUrl?: string\n    youtubeUrl?: string\n    facebookUrl?: string\n    instagramUrl?: string\n    tiktokUrl?: string\n    twitterUrl?: string\n\n    images?: Array | any\n    user?: User | any\n}\n\nexport class UpdateUserPetDto {\n    name?: string\n    passportNumber?: string\n\n    breed?: string\n    color?: string\n    description?: string\n    personality?: string\n    birthDate?: Date\n    weight?: number\n    breeding?: string\n    gender?: Gender\n\n    websiteUrl?: string\n    youtubeUrl?: string\n    facebookUrl?: string\n    instagramUrl?: string\n    tiktokUrl?: string\n    twitterUrl?: string\n\n    images?: Array\n    user?: User | any\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserProfileDto.html":{"url":"classes/CreateUserProfileDto.html","title":"class - CreateUserProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/UserProfile.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                birthDate\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                facebookUrl\n                            \n                            \n                                firstName\n                            \n                            \n                                    Optional\n                                gender\n                            \n                            \n                                    Optional\n                                instagramUrl\n                            \n                            \n                                    Optional\n                                isPrimary\n                            \n                            \n                                lastName\n                            \n                            \n                                    Optional\n                                nickname\n                            \n                            \n                                    Optional\n                                tiktokUrl\n                            \n                            \n                                    Optional\n                                twitterUrl\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                    Optional\n                                websiteUrl\n                            \n                            \n                                    Optional\n                                youtubeUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         File | any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        facebookUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        instagramUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isPrimary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tiktokUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        twitterUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        websiteUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        youtubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {BaseDto} from \"../../../base/BaseDto\";\nimport {User} from \"../../../typeorm/entities/User\";\n\nexport class CreateUserProfileDto extends BaseDto {\n    firstName: string\n    lastName: string\n\n    nickname?: string\n    gender?: string\n    description?: string\n    isPrimary?: boolean\n    birthDate?: Date\n\n    websiteUrl?: string\n    youtubeUrl?: string\n    facebookUrl?: string\n    instagramUrl?: string\n    tiktokUrl?: string\n    twitterUrl?: string\n\n    user?: User | any\n    avatar?: File | any\n}\n\nexport class UpdateUserProfileDto extends BaseDto {\n    firstName?: string\n    lastName?: string\n    nickname?: string\n    gender?: string\n    description?: string\n    birthDate?: Date\n    isPrimary?: boolean\n\n    websiteUrl?: string\n    youtubeUrl?: string\n    facebookUrl?: string\n    instagramUrl?: string\n    tiktokUrl?: string\n    twitterUrl?: string\n\n    avatar?: File | any\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Event.html":{"url":"entities/Event.html","title":"entity - Event","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Event\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/typeorm/entities/Event.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                locationCity\n                            \n                            \n                                    \n                                locationCountry\n                            \n                            \n                                    \n                                locationDescription\n                            \n                            \n                                    \n                                locationNumber\n                            \n                            \n                                    \n                                locationPostalCode\n                            \n                            \n                                    \n                                locationStreet\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Event.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locationCity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Event.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locationCountry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, default: 'Polska'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Event.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Event.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locationNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Event.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locationPostalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Event.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locationStreet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Event.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/Event.ts:7\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column } from 'typeorm';\nimport { BaseEntity } from '../../base/BaseEntity';\n\n@Entity({ name: 'events' })\nexport class Event extends BaseEntity {\n    @Column({ nullable: false })\n    name: string;\n\n    @Column({ type: 'text', nullable: true })\n    description: string;\n\n    @Column({ nullable: true, default: 'Polska' })\n    locationCountry: string\n\n    @Column({ nullable: false })\n    locationCity: string\n\n    @Column({ nullable: false })\n    locationPostalCode: string\n\n    @Column({ nullable: false })\n    locationStreet: string\n\n    @Column({ nullable: true })\n    locationNumber: string\n\n    @Column({ type: 'text', nullable: true })\n    locationDescription: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/events/events.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Event } from 'src/typeorm/entities/Event';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Competition } from 'src/typeorm/entities/Competition';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Event, Competition])],\n  providers: [],\n  controllers: []\n})\nexport class EventsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/File.html":{"url":"entities/File.html","title":"entity - File","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/typeorm/entities/File.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                filename\n                            \n                            \n                                    \n                                mimetype\n                            \n                            \n                                    \n                                orginalName\n                            \n                            \n                                    \n                                path\n                            \n                            \n                                    \n                                pet\n                            \n                            \n                                    \n                                    \n                                userProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/File.ts:27\n                        \n                    \n\n            \n                \n                     Filename\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mimetype\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/File.ts:34\n                        \n                    \n\n            \n                \n                     File mimetype\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        orginalName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/File.ts:13\n                        \n                    \n\n            \n                \n                     Orginal file name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/File.ts:20\n                        \n                    \n\n            \n                \n                     Path to file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserPet\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userPet => userPet.images, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/File.ts:49\n                        \n                    \n\n            \n                \n                     Assigned file user user-user-pets\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, userProfile => userProfile.avatar, {nullable: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/File.ts:42\n                        \n                    \n\n            \n                \n                     Assigned file user profile\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import {Entity, Column, ManyToOne, OneToOne, JoinColumn} from 'typeorm';\nimport { BaseEntity } from '../../base/BaseEntity';\nimport {UserPet} from \"./UserPet\";\nimport {UserProfile} from \"./UserProfile\";\n\n@Entity({ name: 'files' })\nexport class File extends BaseEntity {\n    /**\n     *  Orginal file name\n     * @returns {string} orginalName\n     */\n    @Column()\n    orginalName: string;\n\n    /**\n     *  Path to file\n     * @returns {string} path\n     */\n    @Column()\n    path: string;\n\n    /**\n     *  Filename\n     * @returns {string} filename\n     */\n    @Column()\n    filename: string;\n\n    /**\n     *  File mimetype\n     * @returns {string} mimetype\n     */\n    @Column()\n    mimetype: string;\n\n    /**\n     *  Assigned file user profile\n     * @returns {UserProfile} userProfile\n     */\n    @OneToOne(() => UserProfile, (userProfile) => userProfile.avatar, { nullable: true })\n    @JoinColumn()\n    userProfile: UserProfile\n\n    /**\n     *  Assigned file user user-user-pets\n     * @returns {UserPet} pet\n     */\n    @ManyToOne(() => UserPet, (userPet) => userPet.images, { nullable: true })\n    pet: UserPet\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guard/jwt-auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshAuthGuard.html":{"url":"injectables/JwtRefreshAuthGuard.html","title":"injectable - JwtRefreshAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guard/jwt-refresh-auth/jwt-refresh-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtRefreshAuthGuard extends AuthGuard('jwt-refresh') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshStrategy.html":{"url":"injectables/JwtRefreshStrategy.html","title":"injectable - JwtRefreshStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategy/jwt-refresh.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategy/jwt-refresh.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(req: Request, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategy/jwt-refresh.strategy.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport appConfig from 'src/config/app.config';\nimport { Request } from 'express';\nimport {UsersService} from \"../../users/service/users/users.service\";\n\n@Injectable()\nexport class JwtRefreshStrategy extends PassportStrategy(\n  Strategy,\n  'jwt-refresh',\n) {\n  constructor(private usersService: UsersService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      passReqToCallback: true,\n      secretOrKey: appConfig().jwtRefreshSecret,\n    });\n  }\n\n  async validate(req: Request, payload: any) {\n    const { email } = payload;\n    const user = await this.usersService.findOneBy({ where: { email } });\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    const refreshToken: string = req\n      .get('Authorization')\n      .replace('Bearer', '')\n      .trim();\n    return { ...user, refreshToken };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategy/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategy/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport appConfig from 'src/config/app.config';\nimport {UsersService} from \"../../users/service/users/users.service\";\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(private usersService: UsersService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: appConfig().jwtSecret,\n    });\n  }\n\n  async validate(payload: any) {\n    const { email } = payload;\n    const user = await this.usersService.findOneBy({ where: { email } });\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return { ...user };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guard/local-auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategy/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategy/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategy/local.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { AuthService } from '../service/auth/auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'email',\n    });\n  }\n\n  async validate(email: string, password: string): Promise {\n    if (!email || !password) {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/LoginUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/LoginUser.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/LoginUser.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginUserDto {\n    email: string\n    password: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationInterface.html":{"url":"interfaces/PaginationInterface.html","title":"interface - PaginationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/Pagination.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            skip\n                                        \n                                \n                                \n                                        \n                                            take\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        take\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        take:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface PaginationInterface {\n  skip: number;\n  take: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenDto.html":{"url":"classes/RefreshTokenDto.html","title":"class - RefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/RefreshToken.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                refresh_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refresh_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/RefreshToken.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class RefreshTokenDto {\n  @ApiProperty()\n  @IsString()\n  refresh_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guard/role/role.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                matchRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guard/role/role.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guard/role/role.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchRoles\n                        \n                    \n                \n            \n            \n                \nmatchRoles(roles: string[], userRole: string)\n                \n            \n\n\n            \n                \n                    Defined in src/guard/role/role.guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRole\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class RoleGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n  matchRoles(roles: string[], userRole: string) {\n    return roles.some((role) => role === userRole);\n  }\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const roles = this.reflector.get('roles', context.getHandler());\n\n    if (!roles) return true;\n\n    const request = context.switchToHttp().getRequest();\n\n    const user = request.user;\n    return this.matchRoles(roles, user.role);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceInterface.html":{"url":"interfaces/ServiceInterface.html","title":"interface - ServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/Service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        deleteOneById\n                                    \n                                \n                                \n                                    \n                                        deleteSoftOneById\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findOneBy\n                                    \n                                \n                                \n                                    \n                                        findOneById\n                                    \n                                \n                                \n                                    \n                                        updateOneById\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createDto: BaseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Service.interface.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDto\n                                    \n                                                BaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \ndeleteOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Service.interface.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSoftOneById\n                        \n                    \n                \n            \n            \n                \ndeleteSoftOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Service.interface.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Service.interface.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneBy\n                        \n                    \n                \n            \n            \n                \nfindOneBy(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Service.interface.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number, params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Service.interface.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOneById\n                        \n                    \n                \n            \n            \n                \nupdateOneById(id: number, updateDto: BaseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/Service.interface.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                BaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BaseDto } from '../base/BaseDto';\nimport { FindOptionsWhere } from 'typeorm/find-options/FindOptionsWhere';\nimport { BaseEntity } from '../base/BaseEntity';\nimport {\n  FindOptionsSelect,\n  FindOptionsSelectByString,\n} from 'typeorm/find-options/FindOptionsSelect';\nimport {\n  FindOptionsRelationByString,\n  FindOptionsRelations,\n} from 'typeorm/find-options/FindOptionsRelations';\nimport { DeleteResult, UpdateResult } from 'typeorm';\n\nexport interface ServiceInterface {\n  findAll(params: {\n    pagination?: PaginationInterface | object,\n    relations?: FindOptionsRelations | FindOptionsRelationByString,\n    where?: FindOptionsWhere[] | FindOptionsWhere,\n    select?: FindOptionsSelect | FindOptionsSelectByString,\n  }): Promise;\n\n\n  findOneBy(params: {\n    where: FindOptionsWhere[] | FindOptionsWhere,\n    relations?: FindOptionsRelations | FindOptionsRelationByString,\n    select?: FindOptionsSelect | FindOptionsSelectByString,\n  }): Promise;\n\n  findOneById(id: number, params: {\n    relations?: FindOptionsRelations | FindOptionsRelationByString,\n    select?: FindOptionsSelect | FindOptionsSelectByString,\n  }): Promise;\n\n  updateOneById(id: number, updateDto: BaseDto): Promise;\n\n  create(createDto: BaseDto): Promise;\n\n  deleteOneById(id: number): Promise;\n  deleteSoftOneById(id: number): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignupDto.html":{"url":"classes/SignupDto.html","title":"class - SignupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/Signup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                confirmPassword\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                pet\n                            \n                            \n                                profile\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/Signup.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/Signup.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/Signup.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserPetDto\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/Signup.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserProfileDto\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/Signup.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/Signup.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserPetDto } from \"../../users/dtos/UserPet.dto\";\nimport { CreateUserProfileDto } from \"../../users/dtos/UserProfile.dto\";\n\nexport class SignupDto {\n    username?: string\n    email: string\n    password: string\n    confirmPassword?: string\n\n    pet: CreateUserPetDto\n    profile: CreateUserProfileDto\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompetitionDto.html":{"url":"classes/UpdateCompetitionDto.html","title":"class - UpdateCompetitionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompetitionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/events/dtos/Competition.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                regulationUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Competition.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Competition.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        regulationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Competition.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCompetitionDto {\n    name: string;\n    \n    description?: string\n    regulationUrl?: string\n}\n\nexport class UpdateCompetitionDto {\n    name?: string;\n    description?: string\n    regulationUrl?: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEventDto.html":{"url":"classes/UpdateEventDto.html","title":"class - UpdateEventDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEventDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/events/dtos/Event.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                locationCity\n                            \n                            \n                                    Optional\n                                locationCountry\n                            \n                            \n                                    Optional\n                                locationDescription\n                            \n                            \n                                    Optional\n                                locationNumber\n                            \n                            \n                                    Optional\n                                locationPostalCode\n                            \n                            \n                                    Optional\n                                locationStreet\n                            \n                            \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        locationCity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        locationCountry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        locationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        locationNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        locationPostalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        locationStreet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/events/dtos/Event.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateEventDto {\n    name: string;\n    locationCity: string\n    locationPostalCode: string\n    locationStreet: string\n    locationNumber: string\n\n    description?: string;\n    locationCountry?: string\n    locationDescription?: string\n}\n\nexport class UpdateEventDto {\n    name?: string;\n    locationCity?: string\n    locationPostalCode?: string\n    locationStreet?: string\n    locationNumber?: string\n    description?: string\n    locationCountry?: string\n    locationDescription?: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/User.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/User.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserProfileDto } from \"./UserProfile.dto\";\nimport { CreateUserPetDto } from \"./UserPet.dto\";\nimport { Role } from \"../../../constants/Role\";\n\nexport class CreateUserDto {\n    email: string\n    password: string\n    confirmPassword?: string\n    role?: Role\n\n    profile?: CreateUserProfileDto | any\n    pet?: CreateUserPetDto | any\n}\n\nexport class UpdateUserDto {\n    email?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserPetDto.html":{"url":"classes/UpdateUserPetDto.html","title":"class - UpdateUserPetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserPetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/UserPet.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthDate\n                            \n                            \n                                    Optional\n                                breed\n                            \n                            \n                                    Optional\n                                breeding\n                            \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                facebookUrl\n                            \n                            \n                                    Optional\n                                gender\n                            \n                            \n                                    Optional\n                                images\n                            \n                            \n                                    Optional\n                                instagramUrl\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                passportNumber\n                            \n                            \n                                    Optional\n                                personality\n                            \n                            \n                                    Optional\n                                tiktokUrl\n                            \n                            \n                                    Optional\n                                twitterUrl\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                    Optional\n                                websiteUrl\n                            \n                            \n                                    Optional\n                                weight\n                            \n                            \n                                    Optional\n                                youtubeUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        breeding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        facebookUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        instagramUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        passportNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        personality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tiktokUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        twitterUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        websiteUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        youtubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserPet.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Gender } from \"../../../constants/Gender\";\nimport { User } from \"../../../typeorm/entities/User\";\n\nexport class CreateUserPetDto {\n    name: string\n    passportNumber: string\n\n    breed?: string\n    color?: string\n    description?: string\n    personality?: string\n    birthDate?: Date\n    weight?: number\n    breeding?: string\n    gender?: Gender\n\n    websiteUrl?: string\n    youtubeUrl?: string\n    facebookUrl?: string\n    instagramUrl?: string\n    tiktokUrl?: string\n    twitterUrl?: string\n\n    images?: Array | any\n    user?: User | any\n}\n\nexport class UpdateUserPetDto {\n    name?: string\n    passportNumber?: string\n\n    breed?: string\n    color?: string\n    description?: string\n    personality?: string\n    birthDate?: Date\n    weight?: number\n    breeding?: string\n    gender?: Gender\n\n    websiteUrl?: string\n    youtubeUrl?: string\n    facebookUrl?: string\n    instagramUrl?: string\n    tiktokUrl?: string\n    twitterUrl?: string\n\n    images?: Array\n    user?: User | any\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserProfileDto.html":{"url":"classes/UpdateUserProfileDto.html","title":"class - UpdateUserProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/UserProfile.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                birthDate\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                facebookUrl\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                gender\n                            \n                            \n                                    Optional\n                                instagramUrl\n                            \n                            \n                                    Optional\n                                isPrimary\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                nickname\n                            \n                            \n                                    Optional\n                                tiktokUrl\n                            \n                            \n                                    Optional\n                                twitterUrl\n                            \n                            \n                                    Optional\n                                websiteUrl\n                            \n                            \n                                    Optional\n                                youtubeUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         File | any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        facebookUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        instagramUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isPrimary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tiktokUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        twitterUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        websiteUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        youtubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/UserProfile.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {BaseDto} from \"../../../base/BaseDto\";\nimport {User} from \"../../../typeorm/entities/User\";\n\nexport class CreateUserProfileDto extends BaseDto {\n    firstName: string\n    lastName: string\n\n    nickname?: string\n    gender?: string\n    description?: string\n    isPrimary?: boolean\n    birthDate?: Date\n\n    websiteUrl?: string\n    youtubeUrl?: string\n    facebookUrl?: string\n    instagramUrl?: string\n    tiktokUrl?: string\n    twitterUrl?: string\n\n    user?: User | any\n    avatar?: File | any\n}\n\nexport class UpdateUserProfileDto extends BaseDto {\n    firstName?: string\n    lastName?: string\n    nickname?: string\n    gender?: string\n    description?: string\n    birthDate?: Date\n    isPrimary?: boolean\n\n    websiteUrl?: string\n    youtubeUrl?: string\n    facebookUrl?: string\n    instagramUrl?: string\n    tiktokUrl?: string\n    twitterUrl?: string\n\n    avatar?: File | any\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UploaderController.html":{"url":"controllers/UploaderController.html","title":"controller - UploaderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UploaderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/uploader/controller/uploader/uploader.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                uploader\n            \n\n\n\n            \n                Extends\n            \n            \n                        BaseController\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                uploadFile\n                            \n                            \n                                apiErrorResponse\n                            \n                            \n                                apiSuccessResponse\n                            \n                            \n                                    Protected\n                                getBasicDataForResponse\n                            \n                            \n                                paginationFragment\n                            \n                            \n                                resolveFilters\n                            \n                            \n                                    Protected\n                                resolveFilterType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(req: Request, res: Response, files: Array)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/uploader/controller/uploader/uploader.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiErrorResponse\n                        \n                    \n                \n            \n            \n                \napiErrorResponse(res: Response, req: Request, error: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.BAD_REQUEST\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiSuccessResponse\n                        \n                    \n                \n            \n            \n                \napiSuccessResponse(res: Response, req: Request, data: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.OK\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBasicDataForResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBasicDataForResponse(req: Request, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasicResponseInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginationFragment\n                        \n                    \n                \n            \n            \n                \npaginationFragment(limit: number | string, page: number | string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PaginationInterface | object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFilters\n                        \n                    \n                \n            \n            \n                \nresolveFilters(filters: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        resolveFilterType\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveFilterType(type: string, value)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'eq'\n                                    \n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Controller, Post, Req, Res, UploadedFiles, UseInterceptors} from '@nestjs/common';\nimport {FilesInterceptor} from \"@nestjs/platform-express\";\nimport {diskStorage} from \"multer\";\nimport {UploaderService} from \"../../service/uploader/uploader.service\";\nimport {BaseController} from \"../../../../base/BaseController\";\nimport {Request, Response} from \"express\";\nimport {File} from \"../../../../typeorm/entities/File\";\n\nexport const editFileName = (req, file, callback) => {\n    const name = file.originalname.split('.')[0];\n    const fileExtName = file.originalname.split('.').at(-1);\n    const randomName = Array(4)\n        .fill(null)\n        .map(() => Math.round(Math.random() * 16).toString(16))\n        .join('');\n    callback(null, `${name}-${randomName}.${fileExtName}`);\n};\n\n@Controller('uploader')\nexport class UploaderController extends BaseController {\n    constructor(private uploaderService: UploaderService) {\n        super()\n    }\n\n    @Post('upload')\n    @UseInterceptors(FilesInterceptor('files[]', 20, {\n        storage: diskStorage({\n            destination: './uploads',\n            filename: editFileName,\n        }),\n    }))\n    async uploadFile(\n        @Req() req: Request,\n        @Res() res: Response,\n        @UploadedFiles() files: Array,\n    ) {\n        try {\n            const uploadedFiles: File[] = await this.uploaderService.createFiles(files)\n            this.apiSuccessResponse(res, req, uploadedFiles)\n        } catch (err) {\n            this.apiErrorResponse(res, req, err)\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UploaderModule.html":{"url":"modules/UploaderModule.html","title":"module - UploaderModule","body":"\n                   \n\n\n\n\n    Modules\n    UploaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UploaderModule\n\n\n\ncluster_UploaderModule_providers\n\n\n\n\nUploaderService\n\nUploaderService\n\n\n\nUploaderModule\n\nUploaderModule\n\nUploaderModule -->\n\nUploaderService->UploaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/uploader/uploader.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UploaderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UploaderController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UploaderController } from './controller/uploader/uploader.controller';\nimport { UploaderService } from './service/uploader/uploader.service';\nimport {TypeOrmModule} from \"@nestjs/typeorm\";\nimport {File} from \"../../typeorm/entities/File\";\n@Module({\n  controllers: [UploaderController],\n  imports: [TypeOrmModule.forFeature([File])],\n  providers: [UploaderService],\n})\nexport class UploaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploaderService.html":{"url":"injectables/UploaderService.html","title":"injectable - UploaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/uploader/service/uploader/uploader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/uploader/service/uploader/uploader.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    createFiles(files: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/uploader/service/uploader/uploader.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@nestjs/common';\nimport {Repository} from \"typeorm\";\nimport {InjectRepository} from \"@nestjs/typeorm\";\nimport {File} from \"../../../../typeorm/entities/File\";\n\n@Injectable()\nexport class UploaderService {\n    constructor(@InjectRepository(File) private fileRepository: Repository) {}\n\n    async createFiles(files: Array) {\n        const entities: Array = []\n\n        console.log('leca', JSON.stringify(files))\n        files.forEach(file => {\n            const fileEntity = new File()\n\n            console.log(file.originalname)\n            fileEntity.orginalName = file.originalname\n            fileEntity.path = file.path\n            fileEntity.mimetype = file.mimetype\n            fileEntity.filename = file.filename\n\n            entities.push(fileEntity)\n        })\n\n        return await this.fileRepository.save(entities)\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/typeorm/entities/User.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                pets\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                primaryProfile\n                            \n                            \n                                    \n                                    \n                                profiles\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/User.ts:17\n                        \n                    \n\n            \n                \n                     User account email address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/User.ts:24\n                        \n                    \n\n            \n                \n                     User password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        pets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserPet[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, pet => pet.user)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/User.ts:39\n                        \n                    \n\n            \n                \n                     List of all assigned pets\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        primaryProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/User.ts:62\n                        \n                    \n\n            \n                \n                     User profile with {isPrimary} set to true\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserProfile[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, profile => profile.user)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/User.ts:47\n                        \n                    \n\n            \n                \n                     User profiles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/User.ts:55\n                        \n                    \n\n            \n                \n                     Refresh authorization token\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('enum', {default: undefined, enum: Role})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/User.ts:31\n                        \n                    \n\n            \n                \n                     Rank of user\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import {Entity, Column, OneToMany, JoinTable, Unique, AfterLoad, AfterInsert, AfterUpdate} from 'typeorm';\nimport { BaseEntity } from '../../base/BaseEntity';\nimport { UserPet } from './UserPet';\nimport { UserProfile } from './UserProfile';\nimport {Exclude} from \"class-transformer\";\nimport {Role} from \"../../constants/Role\";\nimport {IsOptional} from \"class-validator\";\nimport {ApiProperty} from \"@nestjs/swagger\";\n\n@Entity({ name: 'users' })\nexport class User extends BaseEntity {\n    /**\n     *  User account email address\n     * @returns{string} email\n     */\n    @Column({ unique: true, nullable: false })\n    email: string;\n\n    /**\n     *  User password\n     * @returns {string} password\n     */\n    @Column({ nullable: false, select: false })\n    password: string;\n\n    /**\n     *  Rank of user\n     * @returns {Rank} role\n     */\n    @Column('enum', { default: Role.USER, enum: Role })\n    role: Role;\n\n    /**\n     *  List of all assigned pets\n     * @returns {Pet[]} pets\n     */\n    @OneToMany(() => UserPet, (pet) => pet.user)\n    @JoinTable()\n    pets: UserPet[]\n\n    /**\n     *  User profiles\n     * @returns {UserProfile[]} profiles\n     */\n    @OneToMany(() => UserProfile, (profile) => profile.user)\n    @JoinTable()\n    profiles: UserProfile[]\n\n    /**\n     *  Refresh authorization token\n     * @returns {string} refreshToken\n     */\n    @Column({ nullable: true })\n    @Exclude()\n    public refreshToken?: string;\n\n    /**\n     *  User profile with {isPrimary} set to true\n     * @returns {UserProfile} primaryProfile\n     */\n    @IsOptional()\n    public primaryProfile?: UserProfile\n\n    @AfterLoad()\n    @AfterInsert()\n    @AfterUpdate()\n    getPrimaryProfile?(): void {\n        this.primaryProfile = this.profiles.find((profile: UserProfile) => profile.isPrimary);\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserPet.html":{"url":"entities/UserPet.html","title":"entity - UserPet","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserPet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/typeorm/entities/UserPet.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                birthDate\n                            \n                            \n                                    \n                                breed\n                            \n                            \n                                    \n                                breeding\n                            \n                            \n                                    \n                                color\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                facebookUrl\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                    \n                                images\n                            \n                            \n                                    \n                                instagramUrl\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                passportNumber\n                            \n                            \n                                    \n                                personality\n                            \n                            \n                                    \n                                tiktokUrl\n                            \n                            \n                                    \n                                twitterUrl\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                            \n                                    \n                                websiteUrl\n                            \n                            \n                                    \n                                weight\n                            \n                            \n                                    \n                                youtubeUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:77\n                        \n                    \n\n            \n                \n                     Date of do birthday\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:28\n                        \n                    \n\n            \n                \n                     Dog breed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        breeding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:49\n                        \n                    \n\n            \n                \n                     Dog breeding\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:42\n                        \n                    \n\n            \n                \n                     Color of the dog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:70\n                        \n                    \n\n            \n                \n                     Dog description\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        facebookUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:98\n                        \n                    \n\n            \n                \n                     Social media url\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('enum', {default: undefined, enum: Gender})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:63\n                        \n                    \n\n            \n                \n                     Dog gender\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :         File[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, file => file.pet)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:135\n                        \n                    \n\n            \n                \n                     Dog images\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        instagramUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:105\n                        \n                    \n\n            \n                \n                     Social media url\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:14\n                        \n                    \n\n            \n                \n                     Name of the dog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passportNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:21\n                        \n                    \n\n            \n                \n                     Number of dog passport\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        personality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:56\n                        \n                    \n\n            \n                \n                     Dog personality\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tiktokUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:112\n                        \n                    \n\n            \n                \n                     Social media url\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        twitterUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:119\n                        \n                    \n\n            \n                \n                     Social media url\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.pets)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:127\n                        \n                    \n\n            \n                \n                     Dog owner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        websiteUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:84\n                        \n                    \n\n            \n                \n                     Social media url\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:35\n                        \n                    \n\n            \n                \n                     Dog weight\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        youtubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserPet.ts:91\n                        \n                    \n\n            \n                \n                     Social media url\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, ManyToOne, JoinTable, OneToMany, JoinColumn } from 'typeorm';\nimport { BaseEntity } from '../../base/BaseEntity';\nimport { Gender } from \"../../constants/Gender\";\nimport { User } from './User';\nimport { File } from \"./File\";\n\n@Entity({ name: 'user_pets' })\nexport class UserPet extends BaseEntity {\n    /**\n     *  Name of the dog\n     * @returns {string} name\n     */\n    @Column()\n    name: string\n\n    /**\n     *  Number of dog passport\n     * @returns {string} passportNumber\n     */\n    @Column()\n    passportNumber: string\n\n    /**\n     *  Dog breed\n     * @returns {string} breed\n     */\n    @Column({ nullable: true })\n    breed: string\n\n    /**\n     *  Dog weight\n     * @returns {number} weight\n     */\n    @Column({ nullable: true })\n    weight: number\n\n    /**\n     *  Color of the dog\n     * @returns {string} color\n     */\n    @Column({ nullable: true })\n    color: string\n\n    /**\n     *  Dog breeding\n     * @returns {string} breeding\n     */\n    @Column({ nullable: true })\n    breeding: string\n\n    /**\n     *  Dog personality\n     * @returns {string} personality\n     */\n    @Column({ nullable: true })\n    personality: string\n\n    /**\n     *  Dog gender\n     * @returns {Gender} gender\n     */\n    @Column('enum', { default: Gender.MALE, enum: Gender })\n    gender: Gender;\n\n    /**\n     *  Dog description\n     * @returns {text} description\n     */\n    @Column({ nullable: true, type: 'text' })\n    description: string\n\n    /**\n     *  Date of do birthday\n     * @returns {datetime} birthDate\n     */\n    @Column({ nullable: true, type: 'datetime' })\n    birthDate: Date;\n\n    /**\n     *  Social media url\n     * @returns {string} websiteUrl\n     */\n    @Column({ nullable: true })\n    websiteUrl: string\n\n    /**\n     *  Social media url\n     * @returns {string} youtubeUrl\n     */\n    @Column({ nullable: true })\n    youtubeUrl: string\n\n    /**\n     *  Social media url\n     * @returns {string} facebookUrl\n     */\n    @Column({ nullable: true })\n    facebookUrl: string\n\n    /**\n     *  Social media url\n     * @returns {string} instagramUrl\n     */\n    @Column({ nullable: true })\n    instagramUrl: string\n\n    /**\n     *  Social media url\n     * @returns {string} tiktokUrl\n     */\n    @Column({ nullable: true })\n    tiktokUrl: string\n\n    /**\n     *  Social media url\n     * @returns {string} twitter\n     */\n    @Column({ nullable: true })\n    twitterUrl: string\n\n    /**\n     *  Dog owner\n     * @returns {User} user\n     */\n    @ManyToOne(() => User, (user) => user.pets)\n    @JoinTable()\n    user: User\n\n    /**\n     *  Dog images\n     * @returns {File[]} images\n     */\n    @OneToMany(() => File, file => file.pet)\n    @JoinColumn()\n    images: File[]\n\n    // @OneToMany(() => EventRegistration, (eventRegistration) => eventRegistration.user-user-pets)\n    // @JoinTable()\n    // eventRegistrations: EventRegistration[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserPetsController.html":{"url":"controllers/UserPetsController.html","title":"controller - UserPetsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserPetsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/controller/user-pets/user-pets.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/user/pets\n            \n\n\n\n            \n                Extends\n            \n            \n                        BaseController\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    Async\n                                getOneById\n                            \n                            \n                                    \n                                    Async\n                                updateOneById\n                            \n                            \n                                apiErrorResponse\n                            \n                            \n                                apiSuccessResponse\n                            \n                            \n                                    Protected\n                                getBasicDataForResponse\n                            \n                            \n                                paginationFragment\n                            \n                            \n                                resolveFilters\n                            \n                            \n                                    Protected\n                                resolveFilterType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(req: Request, res: Response, createDto: CreateUserPetDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-pets/user-pets.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createDto\n                                    \n                                                CreateUserPetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(req: Request, res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-pets/user-pets.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(req: Request, res: Response, limit: number, page: number, q)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-pets/user-pets.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        25\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                \n                                \n                                    q\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneById(req: Request, res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-pets/user-pets.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneById(req: Request, res: Response, id: number, updateDto: UpdateUserPetDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-pets/user-pets.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                UpdateUserPetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiErrorResponse\n                        \n                    \n                \n            \n            \n                \napiErrorResponse(res: Response, req: Request, error: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.BAD_REQUEST\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiSuccessResponse\n                        \n                    \n                \n            \n            \n                \napiSuccessResponse(res: Response, req: Request, data: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.OK\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBasicDataForResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBasicDataForResponse(req: Request, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasicResponseInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginationFragment\n                        \n                    \n                \n            \n            \n                \npaginationFragment(limit: number | string, page: number | string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PaginationInterface | object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFilters\n                        \n                    \n                \n            \n            \n                \nresolveFilters(filters: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        resolveFilterType\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveFilterType(type: string, value)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'eq'\n                                    \n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Patch, Post, Query, Req, Res } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { UpdateResult } from \"typeorm\";\n\nimport { BaseController } from '../../../../base/BaseController';\n\nimport { UserPet } from \"../../../../typeorm/entities/UserPet\";\n\nimport { CreateUserPetDto, UpdateUserPetDto } from '../../dtos/UserPet.dto';\n\nimport { UserPetsService } from '../../service/user-pets/user-pets.service';\n\n@Controller('api/user/pets')\n// @UseGuards(JwtAuthGuard)\nexport class UserPetsController extends BaseController {\n    constructor(private petService: UserPetsService) {\n        super()\n    }\n\n    @Get()\n    async getAll(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Query('limit') limit = 25,\n        @Query('page') page = 1,\n        @Query('q') q,\n    ) {\n        try {\n            const pets: UserPet[] = await this.petService.findAll({\n                pagination: this.paginationFragment(limit, page),\n                relations: ['user'],\n                where: this.resolveFilters(q),\n            });\n\n            this.apiSuccessResponse(res, req, pets);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    //\n    @Get(':id')\n    async getOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n    ) {\n        try {\n            const pet: UserPet = await this.petService.findOneById(id, {\n                relations: ['user']\n            });\n\n            this.apiSuccessResponse(res, req, pet);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Post()\n    // @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async create(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Body() createDto: CreateUserPetDto,\n    ) {\n        try {\n            const pet: UserPet = await this.petService.create(createDto);\n\n            this.apiSuccessResponse(res, req, pet);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Patch(':id')\n    // @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async updateOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n        @Body() updateDto: UpdateUserPetDto,\n    ) {\n        try {\n            const updateResult: UpdateResult = await this.petService.updateOneById(\n                id,\n                updateDto,\n            );\n\n            this.apiSuccessResponse(res, req, updateResult);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Delete(':id')\n    // @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async deleteOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n    ) {\n        try {\n            const deleteResult: UpdateResult =\n                await this.petService.deleteSoftOneById(id);\n\n            this.apiSuccessResponse(res, req, deleteResult);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserPetsService.html":{"url":"injectables/UserPetsService.html","title":"injectable - UserPetsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserPetsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/service/user-pets/user-pets.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    Async\n                                deleteSoftOneById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneBy\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(petRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/service/user-pets/user-pets.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        petRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPetDto: CreateUserPetDto)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPetDto\n                                    \n                                                CreateUserPetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(id: number)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteSoftOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSoftOneById(id: number)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:71\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneBy\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneBy(params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number, params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneById(id: number, updateDto: BaseDto)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                BaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserPet } from 'src/typeorm/entities/UserPet';\nimport { CreateUserPetDto, UpdateUserPetDto } from '../../dtos/UserPet.dto';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport {BaseService} from \"../../../../base/BaseService\";\nimport {File} from \"../../../../typeorm/entities/File\";\n\n@Injectable()\nexport class UserPetsService extends BaseService {\n    constructor(@InjectRepository(UserPet) private petRepository: Repository) {\n        super(petRepository)\n    }\n\n    async create(createPetDto: CreateUserPetDto): Promise {\n        const newPet: UserPet = this.petRepository.create({\n                ...createPetDto,\n                // images: createPetDto.images?.length ? createPetDto.images : null,\n                user:  createPetDto.user ?? null,\n            })\n\n        if (createPetDto.images?.length) {\n            newPet.images.push(...createPetDto.images.map(id => ({ id } as File)))\n        }\n\n        return await this.petRepository.save(newPet);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserProfile.html":{"url":"entities/UserProfile.html","title":"entity - UserProfile","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/typeorm/entities/UserProfile.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                birthDate\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                facebookUrl\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                instagramUrl\n                            \n                            \n                                    \n                                isPrimary\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                nickname\n                            \n                            \n                                    \n                                tiktokUrl\n                            \n                            \n                                    \n                                twitterUrl\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                            \n                                    \n                                websiteUrl\n                            \n                            \n                                    \n                                youtubeUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         File\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, file => file.userProfile)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:113\n                        \n                    \n\n            \n                \n                     User profile avatar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: 'datetime'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:49\n                        \n                    \n\n            \n                \n                     Player birthday\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:42\n                        \n                    \n\n            \n                \n                     Player description\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        facebookUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:77\n                        \n                    \n\n            \n                \n                     Social media url\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:14\n                        \n                    \n\n            \n                \n                     First name of player\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('enum', {default: undefined, enum: Gender})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:35\n                        \n                    \n\n            \n                \n                     Player gender\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        instagramUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:84\n                        \n                    \n\n            \n                \n                     Social media url\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isPrimary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:56\n                        \n                    \n\n            \n                \n                     Main user profile\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:21\n                        \n                    \n\n            \n                \n                     Last name of player\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:28\n                        \n                    \n\n            \n                \n                     Nickname of the player\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tiktokUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:91\n                        \n                    \n\n            \n                \n                     Social media url\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        twitterUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:98\n                        \n                    \n\n            \n                \n                     Social media url\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.pets)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:106\n                        \n                    \n\n            \n                \n                     User profile owner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        websiteUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:63\n                        \n                    \n\n            \n                \n                     Social media url\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        youtubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/typeorm/entities/UserProfile.ts:70\n                        \n                    \n\n            \n                \n                     Social media url\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import {Entity, Column, ManyToOne, JoinTable, OneToOne} from 'typeorm';\nimport { BaseEntity } from '../../base/BaseEntity';\nimport { User } from './User';\nimport {File} from \"./File\";\nimport {Gender} from \"../../constants/Gender\";\n\n@Entity({ name: 'user_profiles' })\nexport class UserProfile extends BaseEntity {\n    /**\n     *  First name of player\n     * @returns {string} firstName\n     */\n    @Column({ nullable: true })\n    firstName: string;\n\n    /**\n     *  Last name of player\n     * @returns {string} lastName\n     */\n    @Column({ nullable: true })\n    lastName: string;\n\n    /**\n     *  Nickname of the player\n     * @returns {string} nickname\n     */\n    @Column()\n    nickname: string;\n\n    /**\n     *  Player gender\n     * @returns {Gender} gender\n     */\n    @Column('enum', { default: Gender.MALE, enum: Gender })\n    gender: Gender;\n\n    /**\n     *  Player description\n     * @returns {text} description\n     */\n    @Column({ nullable: true, type: 'text' })\n    description: string\n\n    /**\n     *  Player birthday\n     * @returns {datetime} birthDate\n     */\n    @Column({ nullable: true, type: 'datetime' })\n    birthDate: Date;\n\n    /**\n     *  Main user profile\n     * @returns {boolean} isPrimary\n     */\n    @Column({ default: false })\n    isPrimary: boolean;\n\n    /**\n     *  Social media url\n     * @returns {string} websiteUrl\n     */\n    @Column({ nullable: true })\n    websiteUrl: string\n\n    /**\n     *  Social media url\n     * @returns {string} youtubeUrl\n     */\n    @Column({ nullable: true })\n    youtubeUrl: string\n\n    /**\n     *  Social media url\n     * @returns {string} facebookUrl\n     */\n    @Column({ nullable: true })\n    facebookUrl: string\n\n    /**\n     *  Social media url\n     * @returns {string} instagramUrl\n     */\n    @Column({ nullable: true })\n    instagramUrl: string\n\n    /**\n     *  Social media url\n     * @returns {string} tiktokUrl\n     */\n    @Column({ nullable: true })\n    tiktokUrl: string\n\n    /**\n     *  Social media url\n     * @returns {string} twitter\n     */\n    @Column({ nullable: true })\n    twitterUrl: string\n\n    /**\n     *  User profile owner\n     * @returns {User} user\n     */\n    @ManyToOne(() => User, (user) => user.pets)\n    @JoinTable()\n    user: User\n\n    /**\n     *  User profile avatar\n     * @returns {File} avatar\n     */\n    @OneToOne(() => File, (file) => file.userProfile)\n    avatar: File\n\n    // @OneToMany(() => EventRegistration, (eventRegistration) => eventRegistration.userProfile)\n    // @JoinTable()\n    // eventRegistrations: EventRegistration[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserProfilesController.html":{"url":"controllers/UserProfilesController.html","title":"controller - UserProfilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserProfilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/controller/user-profiles/user-profiles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/users/profiles\n            \n\n\n\n            \n                Extends\n            \n            \n                        BaseController\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    Async\n                                getOneById\n                            \n                            \n                                    \n                                    Async\n                                updateOneById\n                            \n                            \n                                apiErrorResponse\n                            \n                            \n                                apiSuccessResponse\n                            \n                            \n                                    Protected\n                                getBasicDataForResponse\n                            \n                            \n                                paginationFragment\n                            \n                            \n                                resolveFilters\n                            \n                            \n                                    Protected\n                                resolveFilterType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(req: Request, res: Response, createDto: CreateUserProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-profiles/user-profiles.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createDto\n                                    \n                                                CreateUserProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(req: Request, res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-profiles/user-profiles.controller.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(req: Request, res: Response, limit: number, page: number, q)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-profiles/user-profiles.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        25\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                \n                                \n                                    q\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneById(req: Request, res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-profiles/user-profiles.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneById(req: Request, res: Response, id: number, updateDto: UpdateUserProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/user-profiles/user-profiles.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                UpdateUserProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiErrorResponse\n                        \n                    \n                \n            \n            \n                \napiErrorResponse(res: Response, req: Request, error: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.BAD_REQUEST\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiSuccessResponse\n                        \n                    \n                \n            \n            \n                \napiSuccessResponse(res: Response, req: Request, data: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.OK\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBasicDataForResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBasicDataForResponse(req: Request, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasicResponseInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginationFragment\n                        \n                    \n                \n            \n            \n                \npaginationFragment(limit: number | string, page: number | string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PaginationInterface | object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFilters\n                        \n                    \n                \n            \n            \n                \nresolveFilters(filters: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        resolveFilterType\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveFilterType(type: string, value)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'eq'\n                                    \n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { BaseController } from '../../../../base/BaseController';\nimport {Controller, Param, ParseIntPipe, Body, Patch, Delete, Get, Req, Res, Query, Post} from \"@nestjs/common\";\nimport {CreateUserProfileDto, UpdateUserProfileDto} from \"../../dtos/UserProfile.dto\";\nimport { UserProfilesService } from \"../../service/user-profiles/user-profiles.service\";\nimport { Request, Response } from 'express';\nimport {Roles} from \"../../../../decorators/roles.decorator\";\nimport {Role} from \"../../../../constants/Role\";\nimport {UpdateResult} from \"typeorm\";\nimport {UserProfile} from \"../../../../typeorm/entities/UserProfile\";\n\n@Controller('api/users/profiles')\nexport class UserProfilesController extends BaseController {\n    constructor(private userProfileService: UserProfilesService) {\n        super();\n    }\n\n    @Get()\n    async getAll(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Query('limit') limit = 25,\n        @Query('page') page = 1,\n        @Query('q') q,\n    ) {\n        try {\n            const userProfiles: UserProfile[] = await this.userProfileService.findAll({\n                pagination: this.paginationFragment(limit, page),\n                relations: ['user'],\n                where: this.resolveFilters(q),\n            });\n\n            this.apiSuccessResponse(res, req, userProfiles);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Get(':id')\n    async getOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n    ) {\n        try {\n            const userProfile: UserProfile = await this.userProfileService.findOneById(id, {\n                relations: ['user']\n            });\n\n            this.apiSuccessResponse(res, req, userProfile);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Post()\n    // @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async create(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Body() createDto: CreateUserProfileDto,\n    ) {\n        try {\n            const userProfile: UserProfile = await this.userProfileService.create(createDto);\n\n            this.apiSuccessResponse(res, req, userProfile);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Patch(':id')\n    // @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async updateOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n        @Body() updateDto: UpdateUserProfileDto,\n    ) {\n        try {\n            const updateResult: UpdateResult = await this.userProfileService.updateOneById(\n                id,\n                updateDto,\n            );\n\n            this.apiSuccessResponse(res, req, updateResult);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Delete(':id')\n    // @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async deleteOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n    ) {\n        try {\n            const deleteResult: UpdateResult =\n                await this.userProfileService.deleteSoftOneById(id);\n\n            this.apiSuccessResponse(res, req, deleteResult);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserProfilesService.html":{"url":"injectables/UserProfilesService.html","title":"injectable - UserProfilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserProfilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/service/user-profiles/user-profiles.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    Async\n                                deleteSoftOneById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneBy\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userProfileRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/service/user-profiles/user-profiles.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userProfileRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(profileData: CreateUserProfileDto)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileData\n                                    \n                                                CreateUserProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(id: number)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteSoftOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSoftOneById(id: number)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:71\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneBy\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneBy(params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number, params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneById(id: number, updateDto: BaseDto)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                BaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserProfile } from 'src/typeorm/entities/UserProfile';\nimport {\n    Repository,\n} from 'typeorm';\nimport { CreateUserProfileDto } from '../../dtos/UserProfile.dto';\nimport {BaseService} from \"../../../../base/BaseService\";\nimport {File} from \"../../../../typeorm/entities/File\";\n@Injectable()\nexport class UserProfilesService extends BaseService{\n    constructor(@InjectRepository(UserProfile) private userProfileRepository: Repository) {\n        super(userProfileRepository)\n    }\n    async create(profileData: CreateUserProfileDto): Promise {\n        const newUser: UserProfile = this.userProfileRepository.create({\n            ...profileData,\n            user:  profileData?.user ?? null,\n        } as UserProfile)\n\n        if (profileData.avatar) {\n            newUser.avatar = { id: profileData.avatar } as File\n        }\n\n        return await this.userProfileRepository.save(newUser);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/controller/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/users\n            \n\n\n\n            \n                Extends\n            \n            \n                        BaseController\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                createUserPet\n                            \n                            \n                                    \n                                    Async\n                                createUserProfile\n                            \n                            \n                                    \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    Async\n                                getOneById\n                            \n                            \n                                    \n                                    Async\n                                getUserPets\n                            \n                            \n                                    \n                                    Async\n                                getUserProfiles\n                            \n                            \n                                    \n                                    Async\n                                updateOneById\n                            \n                            \n                                apiErrorResponse\n                            \n                            \n                                apiSuccessResponse\n                            \n                            \n                                    Protected\n                                getBasicDataForResponse\n                            \n                            \n                                paginationFragment\n                            \n                            \n                                resolveFilters\n                            \n                            \n                                    Protected\n                                resolveFilterType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(req: Request, res: Response, createDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createUserPet\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserPet(req: Request, res: Response, id: number, createPetDto: CreateUserPetDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/pets')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createPetDto\n                                    \n                                                CreateUserPetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createUserProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserProfile(req: Request, res: Response, id: number, createUserProfileDto: CreateUserProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/profiles')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserProfileDto\n                                    \n                                                CreateUserProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(req: Request, res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(req: Request, res: Response, limit: number, page: number, q)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        25\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                \n                                \n                                    q\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneById(req: Request, res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getUserPets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserPets(req: Request, res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/pets')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getUserProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserProfiles(req: Request, res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/profiles')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneById(req: Request, res: Response, id: number, updateDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/controller/users/users.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiErrorResponse\n                        \n                    \n                \n            \n            \n                \napiErrorResponse(res: Response, req: Request, error: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.BAD_REQUEST\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiSuccessResponse\n                        \n                    \n                \n            \n            \n                \napiSuccessResponse(res: Response, req: Request, data: any, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        HttpStatus.OK\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBasicDataForResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBasicDataForResponse(req: Request, status: HttpStatus)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            HttpStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasicResponseInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginationFragment\n                        \n                    \n                \n            \n            \n                \npaginationFragment(limit: number | string, page: number | string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    page\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PaginationInterface | object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFilters\n                        \n                    \n                \n            \n            \n                \nresolveFilters(filters: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        resolveFilterType\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveFilterType(type: string, value)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseController\n\n                \n            \n            \n                \n                        Defined in         BaseController:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'eq'\n                                    \n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateUserDto, UpdateUserDto } from '../../dtos/User.dto';\nimport {\n    Body,\n    Controller,\n    Get,\n    ParseIntPipe,\n    Post,\n    Query,\n} from '@nestjs/common';\nimport {\n    Delete,\n    Param,\n    Patch,\n    Req,\n    Res,\n    UseGuards,\n} from '@nestjs/common/decorators';\nimport { Request, Response } from 'express';\nimport { BaseController } from 'src/base/BaseController';\nimport { JwtAuthGuard } from 'src/guard/jwt-auth/jwt-auth.guard';\nimport { ControllerInterface } from '../../../../interfaces/Controller.interface';\nimport { User } from '../../../../typeorm/entities/User';\nimport { UpdateResult } from 'typeorm';\nimport { RoleGuard } from '../../../../guard/role/role.guard';\nimport { Role } from '../../../../constants/Role';\nimport { Roles } from '../../../../decorators/roles.decorator';\nimport {UserProfilesService} from \"../../service/user-profiles/user-profiles.service\";\nimport {UserPetsService} from \"../../service/user-pets/user-pets.service\";\nimport {UsersService} from \"../../service/users/users.service\";\nimport {CreateUserProfileDto} from \"../../dtos/UserProfile.dto\";\nimport { CreateUserPetDto } from \"../../dtos/UserPet.dto\";\nimport {UserPet} from \"../../../../typeorm/entities/UserPet\";\nimport {UserProfile} from \"../../../../typeorm/entities/UserProfile\";\n\n// @UseGuards(JwtAuthGuard, RoleGuard)\n@Controller('api/users')\nexport class UsersController\n    extends BaseController\n    implements ControllerInterface\n{\n    constructor(\n        private userService: UsersService,\n        private userProfileService: UserProfilesService,\n        private petService: UserPetsService,\n    ) {\n        super();\n    }\n    @Get()\n    // @Roles(Ranks.WORKER, Ranks.ADMIN, Ranks.SUPER_ADMIN, Ranks.USER)\n    async getAll(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Query('limit') limit = 25,\n        @Query('page') page = 1,\n        @Query('q') q,\n    ) {\n        try {\n            const users: User[] = await this.userService.findAll({\n                pagination: this.paginationFragment(limit, page),\n                relations: ['profiles', 'pets'],\n                where: this.resolveFilters(q),\n            });\n\n            this.apiSuccessResponse(res, req, users);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Get(':id')\n    // @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async getOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n    ) {\n        console.log('123')\n        try {\n            const user: User = await this.userService.findOneById(id, {\n                relations: ['profiles', 'pets']\n            });\n\n            this.apiSuccessResponse(res, req, user);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Post()\n    // @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async create(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Body() createDto: CreateUserDto,\n    ) {\n        const { confirmPassword, ...userDetails } = createDto;\n\n        if (confirmPassword !== userDetails.password)\n            this.apiErrorResponse(res, req, null);\n\n        try {\n            const users: User = await this.userService.create(createDto);\n\n            this.apiSuccessResponse(res, req, users);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Patch(':id')\n    // @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async updateOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n        @Body() updateDto: UpdateUserDto,\n    ) {\n        try {\n            const updateResult: UpdateResult = await this.userService.updateOneById(\n                id,\n                updateDto,\n            );\n\n            this.apiSuccessResponse(res, req, updateResult);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n    @Delete(':id')\n    // @Roles(Role.WORKER, Role.ADMIN, Role.SUPER_ADMIN, Role.USER)\n    async deleteOneById(\n        @Req() req: Request,\n        @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n    ) {\n        try {\n            const deleteResult: UpdateResult =\n                await this.userService.deleteSoftOneById(id);\n\n            this.apiSuccessResponse(res, req, deleteResult);\n        } catch (error) {\n            this.apiErrorResponse(res, req, error);\n        }\n    }\n\n\n    // User profiles\n    @Get(':id/profiles')\n    async getUserProfiles(\n        @Req() req: Request, @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number\n    ) {\n        try {\n            const data: UserProfile[] = await this.userProfileService.findAll({ where: {\n                user: { id }\n            }});\n\n            this.apiSuccessResponse(res, req, data)\n        } catch (error) {\n            this.apiErrorResponse(res, req, error)\n        }\n    }\n\n    @Post(':id/profiles')\n    async createUserProfile(\n        @Req() req: Request, @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n        @Body() createUserProfileDto: CreateUserProfileDto\n    ) {\n        try {\n            const data: UserProfile = await this.userProfileService.create({ ...createUserProfileDto, user: id })\n\n            this.apiSuccessResponse(res, req, data)\n        } catch (error) {\n            this.apiErrorResponse(res, req, error)\n        }\n    }\n\n    // Pet profiles\n    @Get(':id/pets')\n    async getUserPets(\n        @Req() req: Request, @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number\n    ) {\n        try {\n            const data: UserPet[] = await this.petService.findAll({ where: {\n                user: { id }\n            }});\n\n            this.apiSuccessResponse(res, req, data)\n        } catch (error) {\n            this.apiErrorResponse(res, req, error)\n        }\n    }\n\n    @Post(':id/pets')\n    async createUserPet(\n        @Req() req: Request, @Res() res: Response,\n        @Param('id', ParseIntPipe) id: number,\n        @Body() createPetDto: CreateUserPetDto\n    ) {\n        try {\n            const data: UserPet = await this.petService.create({ ...createPetDto, user: id })\n\n            this.apiSuccessResponse(res, req, data)\n        } catch (error) {\n            this.apiErrorResponse(res, req, error)\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUserPetsService \n\nUserPetsService \n\n\n\nUserProfilesService \n\nUserProfilesService \n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUserPetsService  -->\n\nUsersModule->UserPetsService \n\n\n\nUserProfilesService  -->\n\nUsersModule->UserProfilesService \n\n\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUserPetsService\n\nUserPetsService\n\nUsersModule -->\n\nUserPetsService->UsersModule\n\n\n\n\n\nUserProfilesService\n\nUserProfilesService\n\nUsersModule -->\n\nUserProfilesService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserPetsService\n                        \n                        \n                            UserProfilesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                        \n                            UserProfilesController\n                        \n                        \n                            UserPetsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserPetsService\n                        \n                        \n                            UserProfilesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { UsersService } from './service/users/users.service';\nimport { UsersController } from './controller/users/users.controller'\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Module } from '@nestjs/common';\nimport { User } from 'src/typeorm/entities/User';\nimport { UserPet } from 'src/typeorm/entities/UserPet';\nimport { UserProfile } from 'src/typeorm/entities/UserProfile';\nimport { UserProfilesService } from './service/user-profiles/user-profiles.service';\nimport { UserProfilesController } from './controller/user-profiles/user-profiles.controller';\nimport { UserPetsController } from './controller/user-pets/user-pets.controller';\nimport { UserPetsService } from './service/user-pets/user-pets.service';\n\n@Module({\n  exports: [UsersService, UserProfilesService, UserPetsService],\n  imports: [TypeOrmModule.forFeature([User, UserPet, UserProfile])],\n  controllers: [UsersController, UserProfilesController, UserPetsController],\n  providers: [UsersService, UserProfilesService, UserPetsService]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/service/users/users.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    Async\n                                deleteSoftOneById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneBy\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, userProfileService: UserProfilesService, userPetsService: UserPetsService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/service/users/users.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userProfileService\n                                                  \n                                                        \n                                                                        UserProfilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userPetsService\n                                                  \n                                                        \n                                                                        UserPetsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(id: number)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteSoftOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSoftOneById(id: number)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:71\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneBy\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneBy(params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number, params: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOneById(id: number, updateDto: BaseDto)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                BaseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { User } from 'src/typeorm/entities/User';\nimport { Repository } from 'typeorm';\nimport * as argon2 from 'argon2';\nimport { CreateUserDto } from '../../dtos/User.dto';\nimport {BaseService} from \"../../../../base/BaseService\";\nimport {UserProfilesService} from \"../user-profiles/user-profiles.service\";\nimport {UserPetsService} from \"../user-pets/user-pets.service\";\n\n@Injectable()\nexport class UsersService extends BaseService{\n    constructor(\n        @InjectRepository(User) private userRepository: Repository,\n        private userProfileService: UserProfilesService,\n        private userPetsService: UserPetsService,\n    ) {\n        super(userRepository)\n    }\n\n    async create(createDto: CreateUserDto): Promise {\n        const { ...userDetails } = createDto\n        const newUser = this.userRepository.create({\n            ...userDetails,\n            profiles: [],\n            pets: [],\n        });\n\n        newUser.password = await argon2.hash(userDetails.password);\n\n        if (userDetails.profile) {\n            newUser.profiles.push(await this.userProfileService.create({ ...userDetails.profile, isPrimary: true, user: newUser.id }))\n        }\n\n        if (userDetails.pet) {\n            newUser.pets.push(await this.userPetsService.create({ ...userDetails.pet, user: newUser.id }))\n        }\n\n        return await this.userRepository.save(newUser);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidUserDto.html":{"url":"classes/ValidUserDto.html","title":"class - ValidUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/ValidUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/ValidUser.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/ValidUser.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/ValidUser.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/ValidUser.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/ValidUser.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidUserDto {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/base/BaseController.ts\n            \n            class\n            BaseController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/base/BaseDto.ts\n            \n            class\n            BaseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/BaseEntity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/base/BaseService.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/config/jwt.config.ts\n            \n            variable\n            jwtConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            typeOrmAsyncConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/Jwt.ts\n            \n            variable\n            Jwt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guard/jwt-auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guard/jwt-refresh-auth/jwt-refresh-auth.guard.ts\n            \n            injectable\n            JwtRefreshAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guard/local-auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guard/role/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces/BasicResponse.interface.ts\n            \n            interface\n            BasicResponseInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/Controller.interface.ts\n            \n            interface\n            ControllerInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/interfaces/Pagination.interface.ts\n            \n            interface\n            PaginationInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/Service.interface.ts\n            \n            interface\n            ServiceInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/controller/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/LoginUser.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/RefreshToken.dto.ts\n            \n            class\n            RefreshTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/Signup.dto.ts\n            \n            class\n            SignupDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/ValidUser.dto.ts\n            \n            class\n            ValidUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/service/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/auth/strategy/jwt-refresh.strategy.ts\n            \n            injectable\n            JwtRefreshStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/strategy/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/events/dtos/Competition.dto.ts\n            \n            class\n            CreateCompetitionDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/events/dtos/Competition.dto.ts\n            \n            class\n            UpdateCompetitionDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/events/dtos/Event.dto.ts\n            \n            class\n            CreateEventDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/events/dtos/Event.dto.ts\n            \n            class\n            UpdateEventDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/uploader/controller/uploader/uploader.controller.ts\n            \n            controller\n            UploaderController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/uploader/controller/uploader/uploader.controller.ts\n            \n            variable\n            editFileName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/uploader/service/uploader/uploader.service.ts\n            \n            injectable\n            UploaderService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/controller/user-pets/user-pets.controller.ts\n            \n            controller\n            UserPetsController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/users/controller/user-profiles/user-profiles.controller.ts\n            \n            controller\n            UserProfilesController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/users/controller/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/User.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/User.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/UserPet.dto.ts\n            \n            class\n            CreateUserPetDto\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/UserPet.dto.ts\n            \n            class\n            UpdateUserPetDto\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/UserProfile.dto.ts\n            \n            class\n            CreateUserProfileDto\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/UserProfile.dto.ts\n            \n            class\n            UpdateUserProfileDto\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/modules/users/service/user-pets/user-pets.service.ts\n            \n            injectable\n            UserPetsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/users/service/user-profiles/user-profiles.service.ts\n            \n            injectable\n            UserProfilesService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/users/service/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/typeorm/entities/Competition.ts\n            \n            entity\n            Competition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/typeorm/entities/Event.ts\n            \n            entity\n            Event\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/typeorm/entities/File.ts\n            \n            entity\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/typeorm/entities/User.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/typeorm/entities/UserPet.ts\n            \n            entity\n            UserPet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/typeorm/entities/UserProfile.ts\n            \n            entity\n            UserProfile\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/serve-static : ^3.0.1\n        \n            @nestjs/swagger : ^6.3.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            argon2 : ^0.30.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            dotenv : ^16.0.3\n        \n            mysql2 : ^3.1.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.12\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppMode   (src/.../AppMode.ts)\n                        \n                        \n                            Gender   (src/.../Gender.ts)\n                        \n                        \n                            Role   (src/.../Role.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants/AppMode.ts\n    \n        \n            \n                \n                    \n                        \n                        AppMode\n                    \n                \n                        \n                            \n                                 DEVELOPMENT\n                            \n                        \n                        \n                            \n                                Value : DEVELOPMENT\n                            \n                        \n                        \n                            \n                                 PRODUCTION\n                            \n                        \n                        \n                            \n                                Value : PRODUCTION\n                            \n                        \n            \n        \n\n    src/constants/Gender.ts\n    \n        \n            \n                \n                    \n                        \n                        Gender\n                    \n                \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : FEMALE\n                            \n                        \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : MALE\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n    src/constants/Role.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 WORKER\n                            \n                        \n                        \n                            \n                                Value : WORKER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ yarn installRunning the app\n# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\n# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UploaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UploaderModule\n\n\n\ncluster_UploaderModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\n\n\nUploaderModule\n\nUploaderModule\n\nAppModule -->\n\nUploaderModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUserPetsService \n\nUserPetsService \n\nUserPetsService  -->\n\nUsersModule->UserPetsService \n\n\n\n\n\nUserProfilesService \n\nUserProfilesService \n\nUserProfilesService  -->\n\nUsersModule->UserProfilesService \n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshStrategy\n\nJwtRefreshStrategy\n\nAuthModule -->\n\nJwtRefreshStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUploaderService\n\nUploaderService\n\nUploaderModule -->\n\nUploaderService->UploaderModule\n\n\n\n\n\nUserPetsService\n\nUserPetsService\n\nUsersModule -->\n\nUserPetsService->UsersModule\n\n\n\n\n\nUserProfilesService\n\nUserProfilesService\n\nUsersModule -->\n\nUserProfilesService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            editFileName   (src/.../uploader.controller.ts)\n                        \n                        \n                            Jwt   (src/.../Jwt.ts)\n                        \n                        \n                            jwtConfig   (src/.../jwt.config.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            typeOrmAsyncConfig   (src/.../typeorm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/uploader/controller/uploader/uploader.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        editFileName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n    const name = file.originalname.split('.')[0];\n    const fileExtName = file.originalname.split('.').at(-1);\n    const randomName = Array(4)\n        .fill(null)\n        .map(() => Math.round(Math.random() * 16).toString(16))\n        .join('');\n    callback(null, `${name}-${randomName}.${fileExtName}`);\n}\n                    \n                \n\n\n        \n    \n\n    src/constants/Jwt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Jwt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret: process.env.JWT_SECRET || 'gwngwenewn1jf981jnv29en'\n}\n                    \n                \n\n\n        \n    \n\n    src/config/jwt.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtModuleAsyncOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  imports: [ConfigModule],\n  inject: [ConfigService],\n  useFactory: async (\n    configService: ConfigService,\n  ): Promise => {\n    return {\n      secret: appConfig().jwtSecret,\n      signOptions: { expiresIn: appConfig().jwtExpires + 's' },\n    };\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...args: string[]) => SetMetadata('roles', args)\n                    \n                \n\n\n        \n    \n\n    src/config/typeorm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        typeOrmAsyncConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleAsyncOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  imports: [ConfigModule],\n  inject: [ConfigService],\n  useFactory: async (\n    configService: ConfigService,\n  ): Promise => {\n    return {\n      type: 'mysql',\n      host: configService.get('DB_HOST'),\n      port: +configService.get('DB_PORT'),\n      username: configService.get('DB_USERNAME'),\n      password: configService.get('DB_PASSWORD'),\n      database: configService.get('DB_NAME'),\n      entities: [User, UserPet, UserProfile, Event, Competition, File],\n      synchronize: true || configService.get('APP_MODE') === AppMode.DEVELOPMENT,\n    };\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
